// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function() {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.Dynamic_ = {"": "Object;"};

$$.Null = {"": "Object;"};

$$.CastErrorImplementation = {"": "Object;actualType,expectedType",
  toString$0: function() {
    return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
  }
};

$$.MetaInfo = {"": "Object;_tag>,_tags,_set>"};

$$.JSSyntaxRegExp = {"": "Object;_liblib1$_pattern,_isMultiLine,_isCaseSensitive",
  firstMatch$1: function(str) {
    var m, matchStart, t1;
    m = $.regExpExec(this, $.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.length($.$$index(m, 0));
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchStart + t1, m);
  },
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  allMatches$1: function(str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function() {
    return this._liblib1$_pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  $isJSSyntaxRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern>,str,start,end,_groups",
  $index: function(index) {
    var t1 = this._groups;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout4(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout4: function(state0, index, t1) {
    return $.$$index(t1, index);
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function() {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib1$_current",
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    this._liblib1$_current = this._re.firstMatch$1(this._str);
    return !(this._liblib1$_current == null);
  }
};

$$.StringMatch = {"": "Object;start,str,pattern>",
  $index: function(g) {
    return this.group$1(g);
  },
  group$1: function(group_) {
    if ($.$$eq(group_, 0) !== true)
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  }
};

$$.JsStringBuffer = {"": "Object;_contents",
  get$length: function() {
    return $.length(this._contents);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(obj) {
    var t1, t2;
    if (typeof obj !== "string")
      return this.add$1$bailout(1, obj);
    t1 = this._contents;
    t2 = obj;
    this._contents = t1 + t2;
  },
  add$1$bailout: function(state0, obj) {
    var t1, t2;
    t1 = this._contents;
    t2 = typeof obj === "string" ? obj : $.S(obj);
    this._contents = t1 + t2;
  },
  addAll$1: function(objects) {
    var t1, t2, t4;
    for (t1 = $.iterator(objects); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if (typeof t2 !== "string")
        return this.addAll$1$bailout(1, t1, t2);
      t4 = this._contents;
      this._contents = t4 + t2;
    }
  },
  addAll$1$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.iterator(objects);
      case 1:
        var t4;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(t1.moveNext$0() === true))
                  break L0;
                t2 = t1.get$current();
              case 1:
                state0 = 0;
                t4 = this._contents;
                t2 = typeof t2 === "string" ? t2 : $.S(t2);
                this._contents = t4 + t2;
            }
    }
  },
  clear$0: function() {
    this._contents = "";
  },
  toString$0: function() {
    return this._contents;
  }
};

$$.Collection = {"": "Iterable;",
  addAll$1: function(elements) {
    var t1;
    for (t1 = $.iterator(elements); t1.moveNext$0() === true;)
      this.add$1(t1.get$current());
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  clear$0: function() {
    $.IterableMixinWorkaround_removeMatching(this, new $.Collection_clear_anon());
  },
  $isCollection: function() {
    return true;
  }
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (!(t1 == null))
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, i;
    t1 = {};
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout(1, t1, t2);
    for (; $.$$lt(t1.i_1, t2.length) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
      if ($.$$gt(t1.i_1, 0) === true)
        $.add(t1.sb_0, ", ");
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      $.add(t3, $.Error_safeToString(t2[t4]));
    }
    t2 = this._namedArguments;
    if (!(t2 == null))
      $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout(2, t1, t2);
    t3 = $.toString(t1.sb_0);
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0)
        $.add(t1.sb_0, ", ");
      t4 = t1.sb_0;
      if (i >= t2.length)
        throw $.ioore(i);
      $.add(t4, t2[i]);
    }
    t2 = $.toString(t1.sb_0);
    t4 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t4) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t4) + "(" + $.S(t3) + ")\n" + "Found: " + $.S(t4) + "(" + $.S(t2) + ")";
  },
  toString$0$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (!(t2 == null))
          for (t3 = $.getInterceptor$JSStringJSArray(t2); $.$$lt(t1.i_1, t3.get$length(t2)) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
            if ($.$$gt(t1.i_1, 0) === true)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, $.Error_safeToString(t3.$index(t2, t1.i_1)));
          }
        t2 = this._namedArguments;
        if (!(t2 == null))
          $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
        t2 = this._existingArgumentNames;
      case 2:
        var t3, t4, i;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          t3 = $.toString(t1.sb_0);
          t1.sb_0 = $.StringBuffer_StringBuffer("");
          for (t4 = $.getInterceptor$JSStringJSArray(t2), i = 0; $.CONSTANT0.$lt(i, t4.get$length(t2)); ++i) {
            if (i > 0)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, t4.$index(t2, i));
          }
          t2 = $.toString(t1.sb_0);
          t4 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t4) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t4) + "(" + $.S(t3) + ")\n" + "Found: " + $.S(t4) + "(" + $.S(t2) + ")";
        }
    }
  }
};

$$.UnsupportedError = {"": "Object;message>",
  toString$0: function() {
    return "Unsupported operation: " + $.S(this.get$message());
  }
};

$$.UnimplementedError = {"": "Object;message>",
  toString$0: function() {
    var t1 = this.message;
    return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function() {
    return "Bad state: " + this.message;
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function() {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  }
};

$$.IllegalJSRegExpException = {"": "Object;_pattern,_errmsg",
  toString$0: function() {
    return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
  }
};

$$.Iterable = {"": "Object;",
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  contains$1: function(element) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if ($.$$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  reduce$2: function(initialValue, combine) {
    var t1, value;
    for (t1 = $.iterator(this), value = initialValue; t1.moveNext$0() === true;)
      value = combine.call$2(value, t1.get$current());
    return value;
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$length: function() {
    var t1, count;
    t1 = $.iterator(this);
    for (count = 0; t1.moveNext$0() === true;)
      ++count;
    return count;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.iterator(this).moveNext$0() !== true;
  },
  get$last: function() {
    var t1, result;
    t1 = $.iterator(this);
    if (t1.moveNext$0() !== true)
      throw $.$$throw($.StateError$("No elements"));
    do
      result = t1.get$current();
    while (t1.moveNext$0() === true);
    return result;
  }
};

$$.Iterator = {"": "Object;"};

$$.Object = {"": ";",
  $eq: function(other) {
    if (other == null)
      return false;
    return this === other;
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  }
};

$$.ObjectInterceptor = {"": "Object;",
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  $add: function(receiver, a0) {
    return receiver.$add(a0);
  },
  $mul: function(receiver, a0) {
    return receiver.$mul(a0);
  },
  $negate: function(receiver) {
    return receiver.$negate();
  },
  $div: function(receiver, a0) {
    return receiver.$div(a0);
  },
  $indexSet: function(receiver, a0, a1) {
    return receiver.$indexSet(a0, a1);
  },
  floor$0: function(receiver) {
    return receiver.floor$0();
  },
  $lt: function(receiver, a0) {
    return receiver.$lt(a0);
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  $sub: function(receiver, a0) {
    return receiver.$sub(a0);
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  },
  contains$2: function(receiver, a0, a1) {
    return receiver.contains$2(a0, a1);
  },
  get$length: function(receiver) {
    return receiver.get$length();
  },
  $gt: function(receiver, a0) {
    return receiver.$gt(a0);
  },
  indexOf$2: function(receiver, a0, a1) {
    return receiver.indexOf$2(a0, a1);
  },
  $not: function(receiver) {
    return receiver.$not();
  },
  toInt$0: function(receiver) {
    return receiver.toInt$0();
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  reduce$2: function(receiver, a0, a1) {
    return receiver.reduce$2(a0, a1);
  },
  ceil$0: function(receiver) {
    return receiver.ceil$0();
  },
  where$1: function(receiver, a0) {
    return receiver.where$1(a0);
  },
  $mod: function(receiver, a0) {
    return receiver.$mod(a0);
  },
  length$0: function(receiver) {
    return receiver.length$0();
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  getRange$2: function(receiver, a0, a1) {
    return receiver.getRange$2(a0, a1);
  },
  get$isInfinite: function(receiver) {
    return receiver.get$isInfinite();
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  removeRange$2: function(receiver, a0, a1) {
    return receiver.removeRange$2(a0, a1);
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  compareTo$1: function(receiver, a0) {
    return receiver.compareTo$1(a0);
  },
  get$isNegative: function(receiver) {
    return receiver.get$isNegative();
  },
  addLast$1: function(receiver, a0) {
    return receiver.addLast$1(a0);
  },
  substring$2: function(receiver, a0, a1) {
    return receiver.substring$2(a0, a1);
  },
  removeAll$1: function(receiver, a0) {
    return receiver.removeAll$1(a0);
  },
  remove$1: function(receiver, a0) {
    return receiver.remove$1(a0);
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  $and: function(receiver, a0) {
    return receiver.$and(a0);
  },
  clear$0: function(receiver) {
    return receiver.clear$0();
  },
  $index: function(receiver, a0) {
    return receiver.$index(a0);
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  allMatches$1: function(receiver, a0) {
    return receiver.allMatches$1(a0);
  },
  $tdiv: function(receiver, a0) {
    return receiver.$tdiv(a0);
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  $eq: function(receiver, a0) {
    return receiver.$eq(a0);
  },
  toSet$0: function(receiver) {
    return receiver.toSet$0();
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  $le: function(receiver, a0) {
    return receiver.$le(a0);
  },
  get$last: function(receiver) {
    return receiver.get$last();
  },
  toStringAsFixed$1: function(receiver, a0) {
    return receiver.toStringAsFixed$1(a0);
  },
  removeMatching$1: function(receiver, a0) {
    return receiver.removeMatching$1(a0);
  },
  get$contains: function(receiver) {
    return receiver.get$contains();
  },
  sort$1: function(receiver, a0) {
    return receiver.sort$1(a0);
  },
  round$0: function(receiver) {
    return receiver.round$0();
  },
  $shr: function(receiver, a0) {
    return receiver.$shr(a0);
  },
  indexOf$1: function(receiver, a0) {
    return receiver.indexOf$1(a0);
  },
  contains$1: function(receiver, a0) {
    return receiver.contains$1(a0);
  },
  abs$0: function(receiver) {
    return receiver.abs$0();
  },
  $ge: function(receiver, a0) {
    return receiver.$ge(a0);
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  addAll$1: function(receiver, a0) {
    return receiver.addAll$1(a0);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  },
  $eq: function(receiver, a) {
    return receiver == a;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    $.checkGrowable(receiver, "remove");
    for (i = 0; i < receiver.length; ++i)
      if ($.$$eq(receiver[i], element) === true) {
        receiver.splice(i, 1);
        return;
      }
  },
  removeAll$1: function(receiver, elements) {
    $.IterableMixinWorkaround_removeAllList(receiver, elements);
  },
  removeMatching$1: function(receiver, test) {
    $.IterableMixinWorkaround_removeMatchingList(receiver, test);
  },
  where$1: function(receiver, f) {
    return $.WhereIterable$(receiver, f);
  },
  addAll$1: function(receiver, collection) {
    var t1;
    for (t1 = $.iterator(collection); t1.moveNext$0() === true;)
      this.add$1(receiver, t1.get$current());
  },
  addLast$1: function(receiver, value) {
    $.checkGrowable(receiver, "addLast");
    receiver.push(value);
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  reduce$2: function(receiver, initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(receiver, initialValue, combine);
  },
  getRange$2: function(receiver, start, length) {
    var t1, end;
    if (0 === length)
      return [];
    $.checkNull(start);
    $.checkNull(length);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof length === "number" && Math.floor(length) === length))
      throw $.$$throw($.ArgumentError$(length));
    t1 = length < 0;
    if (t1)
      throw $.$$throw($.ArgumentError$(length));
    if (start < 0)
      throw $.$$throw($.RangeError$value(start));
    end = start + length;
    if (end > receiver.length)
      throw $.$$throw($.RangeError$value(length));
    if (t1)
      throw $.$$throw($.ArgumentError$(length));
    return receiver.slice(start, end);
  },
  get$last: function(receiver) {
    var t1 = receiver.length;
    if (t1 > 0)
      return receiver[t1 - 1];
    throw $.$$throw($.StateError$("No elements"));
  },
  removeRange$2: function(receiver, start, length) {
    var receiverLength, t1, t2;
    $.checkGrowable(receiver, "removeRange");
    if (length === 0)
      return;
    $.checkNull(start);
    $.checkNull(length);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (length < 0)
      throw $.$$throw($.ArgumentError$(length));
    receiverLength = receiver.length;
    if (start < 0 || start >= receiverLength)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + length;
    if (t1 > receiverLength)
      throw $.$$throw($.RangeError$value(t1));
    t2 = receiverLength - length;
    $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
    this.set$length(receiver, t2);
  },
  sort$1: function(receiver, compare) {
    $.checkMutable(receiver, "sort");
    $.IterableMixinWorkaround_sortList(receiver, compare);
  },
  indexOf$2: function(receiver, element, start) {
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  contains$1: function(receiver, other) {
    var t1, i;
    for (t1 = $.getInterceptor(other), i = 0; i < receiver.length; ++i)
      if (t1.$eq(other, receiver[i]) === true)
        return true;
    return false;
  },
  get$contains: function(receiver) {
    return new $.BoundClosure0(this, "contains$1", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.Collections_collectionToString(receiver);
  },
  toSet$0: function(receiver) {
    return $.Set_Set$from(receiver);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  length$0: function($receiver) {
    return this.get$length($receiver).call$0();
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNumber = {"": "Object;",
  compareTo$1: function(receiver, b) {
    var bIsNegative;
    if (!(typeof b === "number"))
      throw $.$$throw($.ArgumentError$(b));
    if (receiver < b)
      return -1;
    else if (receiver > b)
      return 1;
    else if (receiver === b) {
      if (receiver === 0) {
        bIsNegative = this.get$isNegative(b);
        if ($.$$eq(this.get$isNegative(receiver), bIsNegative) === true)
          return 0;
        if (this.get$isNegative(receiver) === true)
          return -1;
        return 1;
      }
      return 0;
    } else if (this.get$isNaN(receiver) === true) {
      if (this.get$isNaN(b) === true)
        return 0;
      return 1;
    } else
      return -1;
  },
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver) === true)
      throw $.$$throw($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver) === true)
      throw $.$$throw($.UnsupportedError$("Infinity"));
    truncated = this.truncate$0(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  ceil$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floor$0: function(receiver) {
    return Math.floor(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  round$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
  },
  toStringAsFixed$1: function(receiver, fractionDigits) {
    var result;
    $.checkNum(fractionDigits);
    if (fractionDigits < 0 || fractionDigits > 20)
      throw $.$$throw($.RangeError$(fractionDigits));
    result = receiver.toFixed(fractionDigits);
    if (receiver === 0 && this.get$isNegative(receiver) === true)
      return "-" + result;
    return result;
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver * other;
  },
  $mod: function(receiver, other) {
    var result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (other < 0)
      return result - other;
    else
      return result + other;
  },
  $tdiv: function(receiver, other) {
    return this.truncate$0(receiver / other);
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return (receiver >> other) >>> 0;
  },
  $and: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver >= other;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSInt = {"": "JSNumber;",
  $not: function(receiver) {
    return (~receiver) >>> 0;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSDouble = {"": "JSNumber;",
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    t1 = $.getInterceptor$JSNumber(startIndex);
    if (t1.$lt(startIndex, 0) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.$$gt(endIndex, receiver.length) === true)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  indexOf$1: function($receiver, other) {
    return this.indexOf$2($receiver, other, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$contains: function(receiver) {
    return new $.BoundClosure1(this, "contains$2", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  compareTo$1: function(receiver, other) {
    var t1;
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (receiver === other)
      t1 = 0;
    else
      t1 = receiver < other ? -1 : 1;
    return t1;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var hash, i, hash0, hash1;
    for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  length$0: function($receiver) {
    return this.get$length($receiver).call$0();
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$._HashMapImpl = {"": "Object;_keys>,_values>,_loadLimit,_numberOfEntries,_numberOfDeleted",
  _probeForAdding$1: function(key) {
    var t1, t3, hash, insertionIndex, numberOfProbes, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.hashCode(key);
    t3 = this._keys.length;
    if (t1 !== (t1 | 0))
      return this._probeForAdding$1$bailout(1, key, t1);
    hash = (t1 & t3 - 1) >>> 0;
    for (insertionIndex = -1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null) {
        if (insertionIndex < 0)
          return hash;
        return insertionIndex;
      } else if ($.$$eq(existingKey, key) === true)
        return hash;
      else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
        insertionIndex = hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
      if (hash !== (hash | 0))
        return this._probeForAdding$1$bailout(2, key, null, hash, numberOfProbes0, insertionIndex);
    }
  },
  _probeForAdding$1$bailout: function(state0, key, t1, hash, numberOfProbes0, insertionIndex) {
    switch (state0) {
      case 0:
        if (key == null)
          throw $.$$throw($.ArgumentError$(null));
        t1 = $.hashCode(key);
      case 1:
        state0 = 0;
        hash = $.$$and(t1, this._keys.length - 1);
        insertionIndex = -1;
        numberOfProbes = 1;
      case 2:
        var numberOfProbes, existingKey;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!true)
                  break L0;
                t1 = this._keys;
                if (hash !== (hash | 0))
                  throw $.iae(hash);
                if (hash < 0 || hash >= t1.length)
                  throw $.ioore(hash);
                existingKey = t1[hash];
                if (existingKey == null) {
                  if (insertionIndex < 0)
                    return hash;
                  return insertionIndex;
                } else if ($.$$eq(existingKey, key) === true)
                  return hash;
                else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
                  insertionIndex = hash;
                numberOfProbes0 = numberOfProbes + 1;
                hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
              case 2:
                state0 = 0;
                numberOfProbes = numberOfProbes0;
            }
    }
  },
  _probeForLookup$1: function(key) {
    var t1, hash, numberOfProbes, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.$$and($.hashCode(key), this._keys.length - 1);
    if (t1 !== (t1 | 0))
      return this._probeForLookup$1$bailout(1, key, t1);
    for (hash = t1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _probeForLookup$1$bailout: function(state0, key, t1) {
    var hash, numberOfProbes, existingKey, numberOfProbes0;
    for (hash = t1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _ensureCapacity$0: function() {
    var t1, capacity, t2;
    t1 = $.$$add(this._numberOfEntries, 1);
    if ($.$$ge(t1, this._loadLimit) === true) {
      this._grow$1(this._keys.length * 2);
      return;
    }
    capacity = this._keys.length;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = this._numberOfDeleted;
    if (t2 > capacity - t1 - t2)
      this._grow$1(capacity);
  },
  _grow$1: function(newCapacity) {
    var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
    capacity = this._keys.length;
    this._loadLimit = $.$$tdiv($.$$mul(newCapacity, 3), 4);
    oldKeys = this._keys;
    oldValues = this._values;
    this._keys = $.List_List$fixedLength(newCapacity, null);
    this._values = $.List_List$fixedLength(newCapacity, null);
    for (i = 0; i < capacity; ++i) {
      if (i >= oldKeys.length)
        throw $.ioore(i);
      key = oldKeys[i];
      if (key == null || key === $.CONSTANT3)
        continue;
      if (i >= oldValues.length)
        throw $.ioore(i);
      value = oldValues[i];
      newIndex = this._probeForAdding$1(key);
      t1 = this._keys;
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = key;
      t1 = this._values;
      if (newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = value;
    }
    this._numberOfDeleted = 0;
  },
  clear$0: function() {
    var t1, length, t2, t3, i;
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    t1 = this._keys;
    length = t1.length;
    for (t2 = this._values, t3 = t2.length, i = 0; i < length; ++i) {
      t1[i] = null;
      if (i >= t3)
        throw $.ioore(i);
      t2[i] = null;
    }
  },
  $indexSet: function(key, value) {
    var index, t1;
    this._ensureCapacity$0();
    index = this._probeForAdding$1(key);
    t1 = this._keys;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    t1 = t1[index];
    if (t1 == null || t1 === $.CONSTANT3) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.$$indexSet$bailout1(1, key, value, t1, index);
      this._numberOfEntries = t1 + 1;
    }
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = key;
    t1 = this._values;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = value;
  },
  $$indexSet$bailout1: function(state0, key, value, t1, index) {
    switch (state0) {
      case 0:
        this._ensureCapacity$0();
        index = this._probeForAdding$1(key);
        t1 = this._keys;
        if (index !== (index | 0))
          throw $.iae(index);
        if (index < 0 || index >= t1.length)
          throw $.ioore(index);
        t1 = t1[index];
      case 1:
        if (state0 === 1 || state0 === 0 && (t1 == null || t1 === $.CONSTANT3))
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 1:
              state0 = 0;
              this._numberOfEntries = $.$$add(t1, 1);
          }
        t1 = this._keys;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = key;
        t1 = this._values;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = value;
    }
  },
  $index: function(key) {
    var index, t1;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.$$index$bailout0(1, index);
    if (index < 0)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout0: function(state0, index) {
    var t1;
    if ($.$$lt(index, 0) === true)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  remove$1: function(key) {
    var index, t1, t3, value;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.remove$1$bailout1(1, index);
    if (index >= 0) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.remove$1$bailout1(2, index, t1);
      this._numberOfEntries = t1 - 1;
      t3 = this._values;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t3.length)
        throw $.ioore(index);
      value = t3[index];
      t3[index] = null;
      t3 = this._keys;
      if (index >= t3.length)
        throw $.ioore(index);
      t3[index] = $.CONSTANT3;
      this._numberOfDeleted = this._numberOfDeleted + 1;
      return value;
    }
    return;
  },
  remove$1$bailout1: function(state0, index, t1) {
    switch (state0) {
      case 0:
        index = this._probeForLookup$1(key);
      case 1:
        state0 = 0;
      case 2:
        var t3, value;
        if (state0 === 2 || state0 === 0 && $.$$ge(index, 0) === true)
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 2:
              state0 = 0;
              this._numberOfEntries = $.$$sub(t1, 1);
              t3 = this._values;
              if (index !== (index | 0))
                throw $.iae(index);
              if (index < 0 || index >= t3.length)
                throw $.ioore(index);
              value = t3[index];
              t3[index] = null;
              t3 = this._keys;
              if (index >= t3.length)
                throw $.ioore(index);
              t3[index] = $.CONSTANT3;
              this._numberOfDeleted = this._numberOfDeleted + 1;
              return value;
          }
        return;
    }
  },
  get$isEmpty: function() {
    return $.$$eq(this._numberOfEntries, 0);
  },
  get$length: function() {
    return this._numberOfEntries;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  forEach$1: function(f) {
    var it, t1, t2, t3;
    it = $._HashMapImplIndexIterator$(this);
    for (; it.moveNext$0() === true;) {
      t1 = this._keys;
      t2 = it.get$current();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t2 = t1[t2];
      t1 = this._values;
      t3 = it.get$current();
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      f.call$2(t2, t1[t3]);
    }
  },
  containsKey$1: function(key) {
    return $.$$eq(this._probeForLookup$1(key), -1) !== true;
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _HashMapImpl$0: function() {
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
    this._keys = $.List_List$fixedLength(8, null);
    this._values = $.List_List$fixedLength(8, null);
  },
  $isMap: function() {
    return true;
  }
};

$$._HashMapImplIterator = {"": "Object;",
  moveNext$0: function() {
    var t1, t2, length, t3, newIndex, key;
    t1 = this._map;
    t2 = t1._keys;
    length = t2.length;
    t3 = this._index;
    if (t3 !== (t3 | 0))
      return this.moveNext$0$bailout(1, length, t3, t1);
    newIndex = t3 + 1;
    for (; newIndex < length;) {
      if (newIndex < 0)
        throw $.ioore(newIndex);
      key = t2[newIndex];
      if (!(key == null) && !(key === $.CONSTANT3)) {
        this._current = this._computeCurrentFromIndex$3(newIndex, t2, t1._values);
        this._index = newIndex;
        return true;
      }
      ++newIndex;
    }
    this._index = length;
    this._current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, length, t2, t1) {
    var newIndex, key;
    newIndex = $.$$add(t2, 1);
    for (; $.$$lt(newIndex, length) === true;) {
      t2 = t1._keys;
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t2.length)
        throw $.ioore(newIndex);
      key = t2[newIndex];
      if (!(key == null) && !(key === $.CONSTANT3)) {
        this._current = this._computeCurrentFromIndex$3(newIndex, t2, t1._values);
        this._index = newIndex;
        return true;
      }
      ++newIndex;
    }
    this._index = length;
    this._current = null;
    return false;
  },
  get$current: function() {
    return this._current;
  }
};

$$._HashMapImplIndexIterator = {"": "_HashMapImplIterator;_map,_index,_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return index;
  }
};

$$._DeletedKeySentinel = {"": "Object;"};

$$._KeyValuePair = {"": "Object;key>,value="};

$$._LinkedHashMapImpl = {"": "Object;_list,_map",
  $indexSet: function(key, value) {
    var t1, t3;
    if (this._map.containsKey$1(key) === true) {
      t1 = this._map;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.$$indexSet$bailout0(1, key, value, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key].get$element().set$value(value);
    } else {
      this._list.addLast$1($._KeyValuePair$(key, value));
      t1 = this._map;
      t3 = this._list.lastEntry$0();
      if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
        return this.$$indexSet$bailout0(2, key, null, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key] = t3;
    }
  },
  $$indexSet$bailout0: function(state0, key, value, t1) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 1 || state0 === 0 && this._map.containsKey$1(key) === true)
          switch (state0) {
            case 0:
              t1 = this._map;
            case 1:
              state0 = 0;
              $.$$index(t1, key).get$element().set$value(value);
          }
        else
          switch (state0) {
            case 0:
              this._list.addLast$1($._KeyValuePair$(key, value));
              t1 = this._map;
            case 2:
              state0 = 0;
              $.$$indexSet(t1, key, this._list.lastEntry$0());
          }
    }
  },
  $index: function(key) {
    var t1 = this._map;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, key, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    t1 = t1[key];
    if (t1 == null)
      return;
    return t1.get$element().get$value();
  },
  $$index$bailout: function(state0, key, t1) {
    t1 = $.$$index(t1, key);
    if (t1 == null)
      return;
    return t1.get$element().get$value();
  },
  remove$1: function(key) {
    var t1 = $.remove(this._map, key);
    if (t1 == null)
      return;
    t1.remove$0();
    return t1.get$element().get$value();
  },
  forEach$1: function(f) {
    this._list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
  },
  containsKey$1: function(key) {
    return this._map.containsKey$1(key);
  },
  get$length: function() {
    return $.length(this._map);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  clear$0: function() {
    $.clear(this._map);
    this._list.clear$0();
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _LinkedHashMapImpl$0: function() {
    this._map = $.HashMap_HashMap();
    this._list = $.DoubleLinkedQueue$();
  },
  $isMap: function() {
    return true;
  }
};

$$.DoubleLinkedQueueEntry = {"": "Object;_previous=,_next=,_element",
  _link$2: function(p, n) {
    this._next = n;
    this._previous = p;
    p.set$_next(this);
    n.set$_previous(this);
  },
  prepend$1: function(e) {
    $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
  },
  remove$0: function() {
    var t1 = this._next;
    this._previous.set$_next(t1);
    t1 = this._previous;
    this._next.set$_previous(t1);
    this._next = null;
    this._previous = null;
    return this._element;
  },
  _asNonSentinelEntry$0: function() {
    return this;
  },
  previousEntry$0: function() {
    return this._previous._asNonSentinelEntry$0();
  },
  nextEntry$0: function() {
    return this._next._asNonSentinelEntry$0();
  },
  get$element: function() {
    return this._element;
  },
  DoubleLinkedQueueEntry$1: function(e) {
    this._element = e;
  }
};

$$._DoubleLinkedQueueEntrySentinel = {"": "DoubleLinkedQueueEntry;_previous,_next,_element",
  remove$0: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _asNonSentinelEntry$0: function() {
    return;
  },
  get$element: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _DoubleLinkedQueueEntrySentinel$0: function() {
    this._link$2(this, this);
  }
};

$$.DoubleLinkedQueue = {"": "Iterable;_sentinel",
  addLast$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  add$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      this._sentinel.prepend$1(t2);
    }
  },
  removeLast$0: function() {
    return this._sentinel._previous.remove$0();
  },
  remove$1: function(o) {
    var entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel);) {
      if ($.$$eq(entry.get$element(), o) === true) {
        entry.remove$0();
        return;
      }
      entry = entry.get$_next();
    }
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAllList(this, elements);
  },
  removeMatching$1: function(test) {
    var entry, next;
    entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel); entry = next) {
      next = entry.get$_next();
      if (test.call$1(entry.get$element()) === true)
        entry.remove$0();
    }
  },
  get$last: function() {
    return this._sentinel._previous.get$element();
  },
  lastEntry$0: function() {
    return this._sentinel.previousEntry$0();
  },
  get$isEmpty: function() {
    var t1 = this._sentinel;
    return t1._next === t1;
  },
  clear$0: function() {
    var t1 = this._sentinel;
    t1._next = t1;
    t1 = this._sentinel;
    t1._previous = t1;
  },
  get$iterator: function() {
    return $._DoubleLinkedQueueIterator$(this._sentinel);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  DoubleLinkedQueue$0: function() {
    this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
  },
  $isCollection: function() {
    return true;
  }
};

$$._DoubleLinkedQueueIterator = {"": "Object;_sentinel,_currentEntry,_current",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._currentEntry;
    if (t1 == null)
      return false;
    this._currentEntry = t1.get$_next();
    t1 = this._currentEntry;
    t2 = this._sentinel;
    if (t1 == null ? t2 == null : t1 === t2) {
      this._currentEntry = null;
      this._current = null;
      this._sentinel = null;
      return false;
    }
    this._current = t1.get$element();
    return true;
  },
  get$current: function() {
    return this._current;
  }
};

$$.HashSet = {"": "Collection;_backingMap",
  clear$0: function() {
    this._backingMap.clear$0();
  },
  add$1: function(value) {
    this._backingMap.$indexSet(value, value);
  },
  remove$1: function(value) {
    var t1 = this._backingMap;
    if (t1.containsKey$1(value) !== true)
      return false;
    t1.remove$1(value);
    return true;
  },
  contains$1: function(value) {
    return this._backingMap.containsKey$1(value);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    this._backingMap.forEach$1(new $.HashSet_forEach_anon(f));
  },
  get$isEmpty: function() {
    return $.isEmpty(this._backingMap);
  },
  get$length: function() {
    return $.length(this._backingMap);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$iterator: function() {
    return $._HashSetIterator$(this);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  $isSet: true,
  $isCollection: function() {
    return true;
  }
};

$$._HashSetIterator = {"": "Object;_keysIterator",
  get$current: function() {
    var result = this._keysIterator.get$current();
    if (result === $.CONSTANT3)
      throw $.$$throw($.StateError$("Concurrent modification."));
    return result;
  },
  moveNext$0: function() {
    var t1, result, t2;
    t1 = this._keysIterator;
    do {
      result = t1.moveNext$0();
      if (result === true)
        t2 = t1.get$current() == null || t1.get$current() === $.CONSTANT3;
      else
        t2 = false;
    } while (t2);
    return result;
  }
};

$$.WhereIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    return $.WhereIterator$($.iterator(this._iterable), this._f);
  }
};

$$.WhereIterator = {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
};

$$.ListIterator = {"": "Object;_liblib0$_list,_liblib0$_length,_liblib0$_position,_liblib0$_current",
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._liblib0$_list;
    t2 = t1.length;
    t3 = this._liblib0$_length;
    if (t2 !== t3)
      throw $.$$throw($.ConcurrentModificationError$(t1));
    t2 = this._liblib0$_position;
    if (t2 !== (t2 | 0))
      return this.moveNext$0$bailout1(1, t2, t1, t3);
    ++t2;
    if (t2 < t3) {
      this._liblib0$_position = t2;
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      this._liblib0$_current = t1[t2];
      return true;
    }
    this._liblib0$_current = null;
    return false;
  },
  moveNext$0$bailout1: function(state0, t2, t1, t3) {
    t2 = $.$$add(t2, 1);
    if ($.$$lt(t2, t3) === true) {
      this._liblib0$_position = t2;
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      this._liblib0$_current = t1[t2];
      return true;
    }
    this._liblib0$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$.Canvas_Interactive_Cubes = {"": "Object;container,camera,scene,projector,renderer,particleMaterial,objects=,radius>,theta",
  run$0: function() {
    this.init$0();
    this.render$0();
  },
  init$0: function() {
    var info, geometry, rnd, i, particle, t1, object, t2;
    this.objects = [];
    this.container = $.Element_Element$tag("div");
    $.add(document.get$body().get$nodes(), this.container);
    info = $.Element_Element$tag("div");
    info.get$style().set$position("absolute");
    info.get$style().set$top("10px");
    info.get$style().set$width("100%");
    info.get$style().set$textAlign("center");
    info.set$innerHTML("<a href=\"http://github.com/robsilv/three.dart\" target=\"_blank\">three.dart</a> - clickable objects");
    $.add(this.container.get$nodes(), info);
    this.camera = $.PerspectiveCamera$(70, $.$$div(window.get$innerWidth(), window.get$innerHeight()), 1, 10000);
    this.camera.get$position().setValues$3(0, 300, 500);
    this.scene = $.Scene$();
    $.add(this.scene, this.camera);
    geometry = $.CubeGeometry$(100, 100, 100, 1, 1, 1, null, null);
    rnd = $.Random_Random(null);
    for (i = 0; i < 10; ++i) {
      particle = $.Particle$(this.particleMaterial);
      t1 = $.$$sub(rnd.nextInt$1(800), 400);
      particle.position.set$x(t1);
      t1 = $.$$sub(rnd.nextInt$1(800), 400);
      particle.position.set$y(t1);
      t1 = $.$$sub(rnd.nextInt$1(800), 400);
      particle.position.set$z(t1);
      t1 = particle.scale;
      t1.y = 8;
      t1.x = 8;
      $.add(this.scene, particle);
      object = $.Mesh$(geometry, $.MeshBasicMaterial$(0, 205, 100, 204, 1, $.$$mul(rnd.nextDouble$0(), 16777215), 0, true, true, null, true, null, null, false, "", 0.5, false, false, 0, 0, 1, 0.98, 2, 0, false, null, false, 0, true, false, "round", "round", 1));
      t1 = $.$$sub(rnd.nextInt$1(800), 400);
      object.position.set$x(t1);
      t1 = $.$$sub(rnd.nextInt$1(800), 400);
      object.position.set$y(t1);
      t1 = $.$$sub(rnd.nextInt$1(800), 400);
      object.position.set$z(t1);
      t1 = $.$$add($.$$mul(rnd.nextDouble$0(), 2), 1);
      t2 = object.scale;
      t2.x = t1;
      t2.y = $.$$add($.$$mul(rnd.nextDouble$0(), 2), 1);
      t2.z = $.$$add($.$$mul(rnd.nextDouble$0(), 2), 1);
      t2 = $.$$div($.$$mul($.$$mul(rnd.nextDouble$0(), 360), 3.141592653589793), 180);
      object.rotation.set$x(t2);
      t2 = $.$$div($.$$mul($.$$mul(rnd.nextDouble$0(), 360), 3.141592653589793), 180);
      object.rotation.set$y(t2);
      t2 = $.$$div($.$$mul($.$$mul(rnd.nextDouble$0(), 360), 3.141592653589793), 180);
      object.rotation.set$z(t2);
      $.add(this.scene, object);
      $.add(this.objects, object);
    }
    this.particleMaterial = $.ParticleCanvasMaterial$(0, 205, 100, 204, 1, 0, true, true, "", 1, false, false, 0, 0, new $.Canvas_Interactive_Cubes_init_anon(), 0, false, true);
    this.projector = $.Projector$();
    this.renderer = $.CanvasRenderer$(null);
    this.renderer.setSize$2(window.get$innerWidth(), window.get$innerHeight());
    $.add(this.container.get$nodes(), this.renderer.get$domElement());
    document.get$on().get$mouseDown().add$2(this.get$onDocumentMouseDown(), false);
    window.setInterval$2(new $.Canvas_Interactive_Cubes_init_anon0(this), 10);
  },
  onDocumentMouseDown$1: function(event) {
    var vector, intersects, t1, intersect, particle;
    event.preventDefault$0();
    vector = $.Vector3$($.$$sub($.$$mul($.$$div(event.get$clientX(), window.get$innerWidth()), 2), 1), $.$$add($.$$mul($.$$negate($.$$div(event.get$clientY(), window.get$innerHeight())), 2), 1), 0.5);
    this.projector.unprojectVector$2(vector, this.camera);
    intersects = $.Ray$(this.camera.get$position(), vector.subSelf$1(this.camera.get$position()).normalize$0(), 0, (1/0)).intersectObjects$1(this.objects);
    t1 = $.getInterceptor$JSStringJSArray(intersects);
    if ($.$$gt(t1.get$length(intersects), 0) === true) {
      intersect = t1.$index(intersects, 0);
      intersect.get$object().get$material().get$color().setHex$1($.$$mul($.Random_Random(null).nextDouble$0(), 16777215));
      particle = $.Particle$(this.particleMaterial);
      particle.position = intersect.get$point();
      t1 = particle.scale;
      t1.y = 8;
      t1.x = 8;
      $.add(this.scene, particle);
    }
  },
  get$onDocumentMouseDown: function() {
    return new $.BoundClosure(this, "onDocumentMouseDown$1");
  },
  render$0: function() {
    var t1, t2, t3, t4;
    this.theta = this.theta + 0.2;
    t1 = this.radius;
    t2 = Math.sin($.checkNum(this.theta * 3.141592653589793 / 360));
    this.camera.get$position().set$x(t1 * t2);
    t3 = Math.sin($.checkNum(this.theta * 3.141592653589793 / 360));
    this.camera.get$position().set$y(t1 * t3);
    t4 = Math.cos($.checkNum(this.theta * 3.141592653589793 / 360));
    this.camera.get$position().set$z(t1 * t4);
    this.camera.lookAt$1(this.scene.get$position());
    this.renderer.render$2(this.scene, this.camera);
  }
};

$$.BodyElementEvents = {"": "ElementEvents;_ptr"};

$$.DocumentEvents = {"": "ElementEvents;_ptr"};

$$._ChildrenElementList = {"": "Object;_liblib$_element,_childElements",
  toList$0: function() {
    var t1, t3, output, len, i, t2;
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.toList$0$bailout(1, t1);
    t3 = t1.length;
    output = $.List_List$fixedLength(t3, null);
    for (len = t1.length, i = 0; i < len; ++i) {
      t2 = t1[i];
      if (i >= t3)
        throw $.ioore(i);
      output[i] = t2;
    }
    return output;
  },
  toList$0$bailout: function(state0, t1, t3, len, output) {
    switch (state0) {
      case 0:
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        output = $.List_List$fixedLength(t3.get$length(t1), null);
        len = t3.get$length(t1);
      case 2:
        var i, t2;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT0.$lt(i, len); ++i) {
          t2 = t3.$index(t1, i);
          if (i >= output.length)
            throw $.ioore(i);
          output[i] = t2;
        }
        return output;
    }
  },
  toSet$0: function() {
    var output, t1, len, t3, i;
    output = $.Set_Set();
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.toSet$0$bailout(1, output, t1);
    len = t1.length;
    t3 = $.getInterceptor$JSArray(output);
    i = 0;
    for (; i < len; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      t3.add$1(output, t1[i]);
    }
    return output;
  },
  toSet$0$bailout: function(state0, output, t1, len, t3) {
    switch (state0) {
      case 0:
        output = $.Set_Set();
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        len = t3.get$length(t1);
      case 2:
        var t5, i;
        state0 = 0;
        t5 = $.getInterceptor$JSArray(output);
        i = 0;
        for (; $.CONSTANT0.$lt(i, len); ++i)
          t5.add$1(output, t3.$index(t1, i));
        return output;
    }
  },
  contains$1: function(element) {
    return $.contains1(this._childElements, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this._childElements); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  get$isEmpty: function() {
    return this._liblib$_element.firstElementChild == null;
  },
  get$length: function() {
    return $.length(this._childElements);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    var t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout6(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout6: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  $indexSet: function(index, value) {
    var t1, t2;
    t1 = this._liblib$_element;
    t2 = this._childElements;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.$$indexSet$bailout4(1, index, value, t1, t2);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t2.length)
      throw $.ioore(index);
    t1.$$dom_replaceChild$2(value, t2[index]);
  },
  $$indexSet$bailout4: function(state0, index, value, t1, t2) {
    t1.$$dom_replaceChild$2(value, $.$$index(t2, index));
  },
  set$length: function(newLength) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  add$1: function(value) {
    this._liblib$_element.$$dom_appendChild$1(value);
    return value;
  },
  addLast$1: function(value) {
    this._liblib$_element.$$dom_appendChild$1(value);
    return value;
  },
  get$iterator: function() {
    return $.iterator(this.toList$0());
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable), t2 = this._liblib$_element; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("TODO(jacobr): should we impl?"));
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  remove$1: function(object) {
    if (typeof object === "object" && object !== null && object.$isElement())
      if (object.parentNode === this)
        this._liblib$_element.$$dom_removeChild$1(object);
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  getRange$2: function(start, rangeLength) {
    return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  clear$0: function() {
    this._liblib$_element.textContent = "";
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      this._liblib$_element.$$dom_removeChild$1(t1);
    return t1;
  },
  get$last: function() {
    var result = this._liblib$_element.lastElementChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._FrozenElementList = {"": "Object;_nodeList",
  contains$1: function(element) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if ($.$$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.isEmpty(this._nodeList);
  },
  get$length: function() {
    return $.length(this._nodeList);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    var t1 = this._nodeList;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout7(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout7: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  set$length: function(newLength) {
    $.length1(this._nodeList, newLength);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$iterator: function() {
    return $._FrozenElementListIterator$(this);
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  getRange$2: function(start, rangeLength) {
    return $._FrozenElementList$_wrap($.getRange(this._nodeList, start, rangeLength));
  },
  indexOf$2: function(element, start) {
    return $.indexOf(this._nodeList, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$(""));
  },
  remove$1: function(element) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$last: function() {
    return $.last(this._nodeList);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._FrozenElementListIterator = {"": "Object;_liblib$_list,_liblib$_index,_liblib$_current",
  moveNext$0: function() {
    var t1, t2, t3, t4;
    t1 = this._liblib$_index;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout2(1, t1);
    ++t1;
    t2 = this._liblib$_list;
    t3 = $.getInterceptor$JSStringJSArray(t2);
    t4 = t3.get$length(t2);
    if (typeof t4 !== "number")
      return this.moveNext$0$bailout2(2, t1, t2, t4, t3);
    if (t1 < t4) {
      this._liblib$_current = t2.$index(t1);
      this._liblib$_index = t1;
      return true;
    }
    this._liblib$_index = t3.get$length(t2);
    this._liblib$_current = null;
    return false;
  },
  moveNext$0$bailout2: function(state0, t1, t2, t4, t3) {
    switch (state0) {
      case 0:
        t1 = this._liblib$_index;
      case 1:
        state0 = 0;
        t1 = $.$$add(t1, 1);
        t2 = this._liblib$_list;
        t3 = $.getInterceptor$JSStringJSArray(t2);
        t4 = t3.get$length(t2);
      case 2:
        state0 = 0;
        if ($.$$lt(t1, t4) === true) {
          this._liblib$_current = t2.$index(t1);
          this._liblib$_index = t1;
          return true;
        }
        this._liblib$_index = t3.get$length(t2);
        this._liblib$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$.ElementEvents = {"": "Events;_ptr",
  get$copy: function() {
    return this.$index("copy");
  },
  copy$1: function(arg0) {
    return this.get$copy().call$1(arg0);
  },
  get$mouseDown: function() {
    return this.$index("mousedown");
  }
};

$$.Events = {"": "Object;_ptr",
  $index: function(type) {
    return $.EventListenerList$(this._ptr, type);
  }
};

$$.EventListenerList = {"": "Object;_ptr,_type",
  add$2: function(listener, useCapture) {
    this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
    return this;
  },
  add$1: function(listener) {
    return this.add$2(listener, false);
  },
  remove$2: function(listener, useCapture) {
    this._ptr.$$dom_removeEventListener$3(this._type, listener, useCapture);
    return this;
  },
  remove$1: function(listener) {
    return this.remove$2(listener, false);
  }
};

$$.InputElementEvents = {"": "ElementEvents;_ptr"};

$$.MediaElementEvents = {"": "ElementEvents;_ptr"};

$$.MediaStreamEvents = {"": "Events;_ptr"};

$$._ChildNodeListLazy = {"": "Object;_this",
  get$last: function() {
    var result = this._this.lastChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  add$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addLast$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable), t2 = this._this; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      this._this.$$dom_removeChild$1(t1);
    return t1;
  },
  remove$1: function(object) {
    if (!(typeof object === "object" && object !== null && object.$isNode()))
      return;
    if (!(this === object.parentNode))
      return;
    this._this.$$dom_removeChild$1(object);
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  clear$0: function() {
    this._this.textContent = "";
  },
  $indexSet: function(index, value) {
    this._this.$$dom_replaceChild$2(value, this.$index(index));
  },
  get$iterator: function() {
    return $.iterator(this._this.childNodes);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  get$length: function() {
    return $.length(this._this.childNodes);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot set length on immutable List."));
  },
  $index: function(index) {
    var t1 = this._this.childNodes;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout8(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout8: function(state0, index, t1) {
    return $.$$index(t1, index);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$.TextTrackEvents = {"": "Events;_ptr"};

$$.TextTrackCueEvents = {"": "Events;_ptr"};

$$.TextTrackListEvents = {"": "Events;_ptr"};

$$.WindowEvents = {"": "Events;_ptr",
  get$mouseDown: function() {
    return this.$index("mousedown");
  }
};

$$._FrameSetElementEvents = {"": "ElementEvents;_ptr"};

$$._TypedImageData = {"": "Object;data>,height>,width>", $is_TypedImageData: true,
  $isImageData: function() {
    return true;
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$parent: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.parent);
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_liblib$_current",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout0(1, t1);
    ++t1;
    t2 = this._length;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout0(2, t1, t2);
    if (t1 < t2) {
      t2 = this._array;
      if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout0(3, t1, t2);
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t2.length)
        throw $.ioore(t1);
      this._liblib$_current = t2[t1];
      this._position = t1;
      return true;
    }
    this._liblib$_current = null;
    this._position = t2;
    return false;
  },
  moveNext$0$bailout0: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        t1 = $.$$add(t1, 1);
        t2 = this._length;
      case 2:
        state0 = 0;
      case 3:
        if (state0 === 3 || state0 === 0 && $.$$lt(t1, t2) === true)
          switch (state0) {
            case 0:
              t2 = this._array;
            case 3:
              state0 = 0;
              this._liblib$_current = $.$$index(t2, t1);
              this._position = t1;
              return true;
          }
        this._liblib$_current = null;
        this._position = t2;
        return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$.FilteredElementList = {"": "Object;_node,_childNodes",
  get$_filtered: function() {
    return $.List_List$from($.where(this._childNodes, new $.FilteredElementList__filtered_anon()));
  },
  forEach$1: function(f) {
    $.forEach(this.get$_filtered(), f);
  },
  $indexSet: function(index, value) {
    this.$index(index).replaceWith$1(value);
  },
  set$length: function(newLength) {
    var t1, t2;
    t1 = $.length(this);
    t2 = $.getInterceptor$JSNumber(newLength);
    if (t2.$ge(newLength, t1) === true)
      return;
    else if (t2.$lt(newLength, 0) === true)
      throw $.$$throw($.ArgumentError$("Invalid list length"));
    this.removeRange$2(newLength, $.$$sub(t1, newLength));
  },
  add$1: function(value) {
    $.add(this._childNodes, value);
  },
  addAll$1: function(iterable) {
    var t1, t2, t3;
    for (t1 = $.iterator(iterable), t2 = this._childNodes, t3 = $.getInterceptor$JSArray(t2); t1.moveNext$0() === true;)
      t3.add$1(t2, t1.get$current());
  },
  addLast$1: function(value) {
    $.add(this._childNodes, value);
  },
  contains$1: function(element) {
    return typeof element === "object" && element !== null && element.$isElement() && $.contains1(this._childNodes, element) === true;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("TODO(jacobr): should we impl?"));
  },
  removeRange$2: function(start, rangeLength) {
    $.forEach($.getRange(this.get$_filtered(), start, rangeLength), new $.FilteredElementList_removeRange_anon());
  },
  clear$0: function() {
    $.clear(this._childNodes);
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      t1.remove$0();
    return t1;
  },
  where$1: function(f) {
    return $.where(this.get$_filtered(), f);
  },
  remove$1: function(element) {
    var t1, i, t2, indexElement;
    if (!(typeof element === "object" && element !== null && element.$isElement()))
      return;
    t1 = $.getInterceptor$JSStringJSArray(this);
    i = 0;
    while (true) {
      t2 = t1.get$length(this);
      if (typeof t2 !== "number")
        return this.remove$1$bailout(1, element, t2, i);
      if (!(i < t2))
        break;
      indexElement = this.$index(i);
      if (indexElement === element) {
        indexElement.remove$0();
        return;
      }
      ++i;
    }
  },
  remove$1$bailout: function(state0, element, t2, i) {
    switch (state0) {
      case 0:
        if (!(typeof element === "object" && element !== null && element.$isElement()))
          return;
        t1 = $.getInterceptor$JSStringJSArray(this);
        i = 0;
      case 1:
        var t1, indexElement;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t2 = t1.get$length(this);
              case 1:
                state0 = 0;
                if (!$.CONSTANT0.$lt(i, t2))
                  break L0;
                indexElement = this.$index(i);
                if (indexElement === element) {
                  indexElement.remove$0();
                  return;
                }
                ++i;
            }
    }
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.isEmpty(this.get$_filtered());
  },
  get$length: function() {
    return $.length(this.get$_filtered());
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    var t1 = this.get$_filtered();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout5(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout5: function(state0, index, t1) {
    return $.$$index(t1, index);
  },
  get$iterator: function() {
    return $.iterator(this.get$_filtered());
  },
  getRange$2: function(start, rangeLength) {
    return $.getRange(this.get$_filtered(), start, rangeLength);
  },
  indexOf$2: function(element, start) {
    return $.indexOf(this.get$_filtered(), element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    return $.last(this.get$_filtered());
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._Random = {"": "Object;",
  nextInt$1: function(max) {
    if (max < 0)
      throw $.$$throw($.ArgumentError$("negative max: " + $.S(max)));
    if (max > 4294967295)
      max = 4294967295;
    return (Math.random() * max) >>> 0;
  },
  nextDouble$0: function() {
    return Math.random();
  }
};

$$.ElementInstanceEvents = {"": "Events;_ptr",
  get$copy: function() {
    return this.$index("copy");
  },
  copy$1: function(arg0) {
    return this.get$copy().call$1(arg0);
  },
  get$mouseDown: function() {
    return this.$index("mousedown");
  }
};

$$.Camera = {"": "Object3D;matrixWorldInverse>,projectionMatrix>,projectionMatrixInverse>,near>,far>",
  lookAt$1: function(vector) {
    var t1 = this.matrix;
    t1.lookAt$3(this.position, vector, this.up);
    if (this.rotationAutoUpdate)
      this.rotation.setEulerFromRotationMatrix$2(t1, this.eulerOrder);
  },
  $isCamera: true
};

$$.PerspectiveCamera = {"": "Camera;fov,aspect,_fullWidth,_fullHeight,_x,_y,_width,_height,matrixWorldInverse,projectionMatrix,projectionMatrixInverse,near,far,id,name,properties,parent,children,up,position,rotation,scale,eulerOrder,_dynamic,doubleSided,flipSided,rotationAutoUpdate,renderDepth,matrix,matrixWorld,matrixRotationWorld,matrixAutoUpdate,matrixWorldNeedsUpdate,quaternion,useQuaternion,boundRadius,boundRadiusScale,visible,castShadow,receiveShadow,frustumCulled,_vector,__data",
  updateProjectionMatrix$0: function() {
    var t1, t2, t3, t4, t5, t6, aspect, t7, top, bottom, left, t8, height, t9, t10, t11, t12, t13;
    t1 = this._fullWidth;
    t2 = this.projectionMatrix;
    t3 = this.near;
    t4 = this.fov;
    t5 = this.far;
    if (!(t1 == null)) {
      t6 = this._fullHeight;
      aspect = $.CONSTANT0.$div(t1, t6);
      t7 = Math.tan($.checkNum($.$$div($.$$mul(t4, 3.141592653589793), 360)));
      if (typeof t3 !== "number")
        throw $.iae(t3);
      top = t7 * t3;
      bottom = -top;
      t7 = $.getInterceptor$JSNumber(aspect);
      left = t7.$mul(aspect, bottom);
      t8 = $.abs($.$$sub(t7.$mul(aspect, top), left));
      height = $.CONSTANT6.abs$0(top - bottom);
      t9 = this._x;
      t10 = $.getInterceptor$JSNumber(left);
      t11 = t10.$add(left, $.$$div($.CONSTANT0.$mul(t9, t8), t1));
      t10 = t10.$add(left, $.$$div($.$$mul($.CONSTANT0.$add(t9, t8), t8), t1));
      t12 = this._y;
      t13 = $.$$div($.$$mul($.CONSTANT0.$add(t12, height), height), t6);
      if (typeof t13 !== "number")
        throw $.iae(t13);
      t6 = $.$$div($.CONSTANT0.$mul(t12, height), t6);
      if (typeof t6 !== "number")
        throw $.iae(t6);
      t2.makeFrustum$6(t11, t10, top - t13, top - t6, t3, t5);
    } else
      t2.makePerspective$4(t4, this.aspect, t3, t5);
  },
  PerspectiveCamera$4: function(fov, aspect, near, far) {
    this.updateProjectionMatrix$0();
  }
};

$$.Vector3 = {"": "Object;x=,y=,z=",
  setValues$3: function(x, y, z) {
    this.x = x;
    this.y = y;
    this.z = z;
    return this;
  },
  copy$1: function(v) {
    this.x = v.get$x();
    this.y = v.get$y();
    this.z = v.get$z();
    return this;
  },
  add$2: function(v1, v2) {
    var t1, t3, t5, t7, t9, t11;
    t1 = v1.get$x();
    t3 = v2.get$x();
    if (typeof t1 !== "number")
      return this.add$2$bailout(1, v1, v2, t1);
    if (typeof t3 !== "number")
      return this.add$2$bailout(2, v1, v2, t1, t3);
    this.x = t1 + t3;
    t5 = v1.get$y();
    t7 = v2.get$y();
    if (typeof t5 !== "number")
      return this.add$2$bailout(3, v1, v2, null, null, t5);
    if (typeof t7 !== "number")
      return this.add$2$bailout(4, v1, v2, null, null, t5, t7);
    this.y = t5 + t7;
    t9 = v1.get$z();
    t11 = v2.get$z();
    if (typeof t9 !== "number")
      return this.add$2$bailout(5, null, v2, null, null, null, null, t9);
    if (typeof t11 !== "number")
      return this.add$2$bailout(6, null, null, null, null, null, null, t9, t11);
    this.z = t9 + t11;
    return this;
  },
  add$2$bailout: function(state0, v1, v2, t1, t3, t5, t7, t9, t11) {
    switch (state0) {
      case 0:
        t1 = v1.get$x();
      case 1:
        state0 = 0;
        t3 = v2.get$x();
      case 2:
        state0 = 0;
        this.x = $.$$add(t1, t3);
        t5 = v1.get$y();
      case 3:
        state0 = 0;
        t7 = v2.get$y();
      case 4:
        state0 = 0;
        this.y = $.$$add(t5, t7);
        t9 = v1.get$z();
      case 5:
        state0 = 0;
        t11 = v2.get$z();
      case 6:
        state0 = 0;
        this.z = $.$$add(t9, t11);
        return this;
    }
  },
  addSelf$1: function(v) {
    this.x = $.$$add(this.x, v.get$x());
    this.y = $.$$add(this.y, v.get$y());
    this.z = $.$$add(this.z, v.get$z());
    return this;
  },
  sub$2: function(v1, v2) {
    this.x = $.$$sub(v1.get$x(), v2.get$x());
    this.y = $.$$sub(v1.get$y(), v2.get$y());
    this.z = $.$$sub(v1.get$z(), v2.get$z());
    return this;
  },
  subSelf$1: function(v) {
    var t1, t3, t5, t7, t9, t11;
    t1 = this.x;
    t3 = v.get$x();
    if (typeof t1 !== "number")
      return this.subSelf$1$bailout(1, v, t1);
    if (typeof t3 !== "number")
      return this.subSelf$1$bailout(2, v, t1, t3);
    this.x = t1 - t3;
    t5 = this.y;
    t7 = v.get$y();
    if (typeof t5 !== "number")
      return this.subSelf$1$bailout(3, v, null, null, t5);
    if (typeof t7 !== "number")
      return this.subSelf$1$bailout(4, v, null, null, t5, t7);
    this.y = t5 - t7;
    t9 = this.z;
    t11 = v.get$z();
    if (typeof t9 !== "number")
      return this.subSelf$1$bailout(5, v, null, null, null, null, t9);
    if (typeof t11 !== "number")
      return this.subSelf$1$bailout(6, null, null, null, null, null, t9, t11);
    this.z = t9 - t11;
    return this;
  },
  subSelf$1$bailout: function(state0, v, t1, t3, t5, t7, t9, t11) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = v.get$x();
      case 2:
        state0 = 0;
        this.x = $.$$sub(t1, t3);
        t5 = this.y;
      case 3:
        state0 = 0;
        t7 = v.get$y();
      case 4:
        state0 = 0;
        this.y = $.$$sub(t5, t7);
        t9 = this.z;
      case 5:
        state0 = 0;
        t11 = v.get$z();
      case 6:
        state0 = 0;
        this.z = $.$$sub(t9, t11);
        return this;
    }
  },
  multiply$2: function(a, b) {
    this.x = $.$$mul(a.get$x(), b.get$x());
    this.y = $.$$mul(a.get$y(), b.get$y());
    this.z = $.$$mul(a.get$z(), b.get$z());
    return this;
  },
  multiplyScalar$1: function(s) {
    this.x = $.$$mul(this.x, s);
    this.y = $.$$mul(this.y, s);
    this.z = $.$$mul(this.z, s);
    return this;
  },
  divideScalar$1: function(s) {
    if (!(s === 0)) {
      this.x = $.$$div(this.x, s);
      this.y = $.$$div(this.y, s);
      this.z = $.$$div(this.z, s);
    } else {
      this.x = 0;
      this.y = 0;
      this.z = 0;
    }
    return this;
  },
  negate$0: function() {
    var t1, t3, t5;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.negate$0$bailout(1, t1);
    this.x = t1 * -1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.negate$0$bailout(2, null, t3);
    this.y = t3 * -1;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.negate$0$bailout(3, null, null, t5);
    this.z = t5 * -1;
    return this;
  },
  negate$0$bailout: function(state0, t1, t3, t5) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        this.x = $.$$mul(t1, -1);
        t3 = this.y;
      case 2:
        state0 = 0;
        this.y = $.$$mul(t3, -1);
        t5 = this.z;
      case 3:
        state0 = 0;
        this.z = $.$$mul(t5, -1);
        return this;
    }
  },
  dot$1: function(v) {
    var t1, t3, t6, t8, t10;
    t1 = this.x;
    t3 = v.get$x();
    if (typeof t1 !== "number")
      return this.dot$1$bailout(1, v, t1);
    if (typeof t3 !== "number")
      return this.dot$1$bailout(2, v, t1, t3);
    t3 = t1 * t3;
    t1 = this.y;
    t6 = v.get$y();
    if (typeof t1 !== "number")
      return this.dot$1$bailout(3, v, t1, t3);
    if (typeof t6 !== "number")
      return this.dot$1$bailout(4, v, t1, t3, t6);
    t3 += t1 * t6;
    t8 = this.z;
    t10 = v.get$z();
    if (typeof t8 !== "number")
      return this.dot$1$bailout(5, v, null, t3, null, t8);
    if (typeof t10 !== "number")
      return this.dot$1$bailout(6, null, null, t3, null, t8, t10);
    return t3 + t8 * t10;
  },
  dot$1$bailout: function(state0, v, t1, t3, t6, t8, t10) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = v.get$x();
      case 2:
        state0 = 0;
        t3 = $.$$mul(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t6 = v.get$y();
      case 4:
        state0 = 0;
        t3 = $.$$add(t3, $.$$mul(t1, t6));
        t8 = this.z;
      case 5:
        state0 = 0;
        t10 = v.get$z();
      case 6:
        state0 = 0;
        return $.$$add(t3, $.$$mul(t8, t10));
    }
  },
  lengthSq$0: function() {
    var t1, t2, t3;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    return $.$$add(t1, $.$$mul(t3, t3));
  },
  length$0: function() {
    var t1, t3, t5;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.length$0$bailout(1, t1);
    t1 *= t1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.length$0$bailout(2, t1, t3);
    t1 += t3 * t3;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.length$0$bailout(3, t1, null, t5);
    return Math.sqrt($.checkNum(t1 + t5 * t5));
  },
  length$0$bailout: function(state0, t1, t3, t5) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t1 = $.$$mul(t1, t1);
        t3 = this.y;
      case 2:
        state0 = 0;
        t1 = $.$$add(t1, $.$$mul(t3, t3));
        t5 = this.z;
      case 3:
        state0 = 0;
        return Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t5, t5))));
    }
  },
  get$length: function() {
    return new $.BoundClosure3(this, "length$0");
  },
  normalize$0: function() {
    var t1, t2, t3;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    return this.divideScalar$1(Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t3, t3)))));
  },
  lerpSelf$2: function(v, alpha) {
    var t1, t2, t3;
    t1 = this.x;
    this.x = $.$$add(t1, $.$$mul($.$$sub(v.get$x(), t1), alpha));
    t2 = this.y;
    this.y = $.$$add(t2, $.$$mul($.$$sub(v.get$y(), t2), alpha));
    t3 = this.z;
    this.z = $.$$add(t3, $.$$mul($.$$sub(v.get$z(), t3), alpha));
    return this;
  },
  cross$2: function(a, b) {
    this.x = $.$$sub($.$$mul(a.get$y(), b.get$z()), $.$$mul(a.get$z(), b.get$y()));
    this.y = $.$$sub($.$$mul(a.get$z(), b.get$x()), $.$$mul(a.get$x(), b.get$z()));
    this.z = $.$$sub($.$$mul(a.get$x(), b.get$y()), $.$$mul(a.get$y(), b.get$x()));
    return this;
  },
  distanceTo$1: function(v) {
    return Math.sqrt($.checkNum($.Vector3$(0, 0, 0).sub$2(this, v).lengthSq$0()));
  },
  setEulerFromRotationMatrix$2: function(m, order) {
    var clamp, te, t1, m11, m12, m13, m21, m22, m23, m31, m32, m33;
    clamp = new $.Vector3_setEulerFromRotationMatrix_anon();
    te = m.get$elements();
    t1 = $.getInterceptor$JSStringJSArray(te);
    m11 = t1.$index(te, 0);
    m12 = t1.$index(te, 4);
    m13 = t1.$index(te, 8);
    m21 = t1.$index(te, 1);
    m22 = t1.$index(te, 5);
    m23 = t1.$index(te, 9);
    m31 = t1.$index(te, 2);
    m32 = t1.$index(te, 6);
    m33 = t1.$index(te, 10);
    t1 = $.getInterceptor(order);
    if (t1.$eq(order, "XYZ") === true) {
      this.y = Math.asin($.checkNum(clamp.call$1(m13)));
      if ($.$$lt($.abs(m13), 0.99999) === true) {
        this.x = Math.atan2($.checkNum($.$$negate(m23)), $.checkNum(m33));
        this.z = Math.atan2($.checkNum($.$$negate(m12)), $.checkNum(m11));
      } else {
        this.x = Math.atan2($.checkNum(m21), $.checkNum(m22));
        this.z = 0;
      }
    } else if (t1.$eq(order, "YXZ") === true) {
      this.x = Math.asin($.checkNum($.$$negate(clamp.call$1(m23))));
      if ($.$$lt($.abs(m23), 0.99999) === true) {
        this.y = Math.atan2($.checkNum(m13), $.checkNum(m33));
        this.z = Math.atan2($.checkNum(m21), $.checkNum(m22));
      } else {
        this.y = Math.atan2($.checkNum($.$$negate(m31)), $.checkNum(m11));
        this.z = 0;
      }
    } else if (t1.$eq(order, "ZXY") === true) {
      this.x = Math.asin($.checkNum(clamp.call$1(m32)));
      if ($.$$lt($.abs(m32), 0.99999) === true) {
        this.y = Math.atan2($.checkNum($.$$negate(m31)), $.checkNum(m33));
        this.z = Math.atan2($.checkNum($.$$negate(m12)), $.checkNum(m22));
      } else {
        this.y = 0;
        this.z = Math.atan2($.checkNum(m13), $.checkNum(m11));
      }
    } else if (t1.$eq(order, "ZYX") === true) {
      this.y = Math.asin($.checkNum($.$$negate(clamp.call$1(m31))));
      if ($.$$lt($.abs(m31), 0.99999) === true) {
        this.x = Math.atan2($.checkNum(m32), $.checkNum(m33));
        this.z = Math.atan2($.checkNum(m21), $.checkNum(m11));
      } else {
        this.x = 0;
        this.z = Math.atan2($.checkNum($.$$negate(m12)), $.checkNum(m22));
      }
    } else if (t1.$eq(order, "YZX") === true) {
      this.z = Math.asin($.checkNum(clamp.call$1(m21)));
      if ($.$$lt($.abs(m21), 0.99999) === true) {
        this.x = Math.atan2($.checkNum($.$$negate(m23)), $.checkNum(m22));
        this.y = Math.atan2($.checkNum($.$$negate(m31)), $.checkNum(m11));
      } else {
        this.x = 0;
        this.y = Math.atan2($.checkNum(m31), $.checkNum(m33));
      }
    } else if (t1.$eq(order, "XZY") === true) {
      this.z = Math.asin($.checkNum($.$$negate(clamp.call$1(m12))));
      if ($.$$lt($.abs(m12), 0.99999) === true) {
        this.x = Math.atan2($.checkNum(m32), $.checkNum(m22));
        this.y = Math.atan2($.checkNum(m13), $.checkNum(m11));
      } else {
        this.x = Math.atan2($.checkNum($.$$negate(m13)), $.checkNum(m33));
        this.y = 0;
      }
    }
    return this;
  },
  clone$0: function() {
    return $.Vector3$(this.x, this.y, this.z);
  },
  toString$0: function() {
    return "(" + $.S(this.x) + ", " + $.S(this.y) + ", " + $.S(this.z) + ")";
  },
  $isVector3: true
};

$$.Matrix4 = {"": "Object;elements=",
  setValues$16: function(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
    var te, t1;
    te = this.elements;
    t1 = $.getInterceptor$JSArray(te);
    t1.$indexSet(te, 0, n11);
    t1.$indexSet(te, 4, n12);
    t1.$indexSet(te, 8, n13);
    t1.$indexSet(te, 12, n14);
    t1.$indexSet(te, 1, n21);
    t1.$indexSet(te, 5, n22);
    t1.$indexSet(te, 9, n23);
    t1.$indexSet(te, 13, n24);
    t1.$indexSet(te, 2, n31);
    t1.$indexSet(te, 6, n32);
    t1.$indexSet(te, 10, n33);
    t1.$indexSet(te, 14, n34);
    t1.$indexSet(te, 3, n41);
    t1.$indexSet(te, 7, n42);
    t1.$indexSet(te, 11, n43);
    t1.$indexSet(te, 15, n44);
    return this;
  },
  copy$1: function(m) {
    var me, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
    me = m.get$elements();
    if (typeof me !== "string" && (typeof me !== "object" || me === null || me.constructor !== Array && !me.$isJavaScriptIndexingBehavior()))
      return this.copy$1$bailout(1, me);
    t2 = me.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = me[0];
    if (4 >= t2)
      throw $.ioore(4);
    t4 = me[4];
    if (8 >= t2)
      throw $.ioore(8);
    t5 = me[8];
    if (12 >= t2)
      throw $.ioore(12);
    t6 = me[12];
    t7 = me[1];
    t8 = me[5];
    t9 = me[9];
    if (13 >= t2)
      throw $.ioore(13);
    t10 = me[13];
    t11 = me[2];
    t12 = me[6];
    t13 = me[10];
    if (14 >= t2)
      throw $.ioore(14);
    t14 = me[14];
    t15 = me[3];
    t16 = me[7];
    t17 = me[11];
    if (15 >= t2)
      throw $.ioore(15);
    this.setValues$16(t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, me[15]);
    return this;
  },
  copy$1$bailout: function(state0, me) {
    var t2 = $.getInterceptor$JSStringJSArray(me);
    this.setValues$16(t2.$index(me, 0), t2.$index(me, 4), t2.$index(me, 8), t2.$index(me, 12), t2.$index(me, 1), t2.$index(me, 5), t2.$index(me, 9), t2.$index(me, 13), t2.$index(me, 2), t2.$index(me, 6), t2.$index(me, 10), t2.$index(me, 14), t2.$index(me, 3), t2.$index(me, 7), t2.$index(me, 11), t2.$index(me, 15));
    return this;
  },
  lookAt$3: function(eye, center, up) {
    var te, x, y, z, t1;
    te = this.elements;
    if ($.Matrix4____v1 == null)
      $.Matrix4____v1 = $.Vector3$(0, 0, 0);
    x = $.Matrix4____v1;
    if ($.Matrix4____v2 == null)
      $.Matrix4____v2 = $.Vector3$(0, 0, 0);
    y = $.Matrix4____v2;
    if ($.Matrix4____v3 == null)
      $.Matrix4____v3 = $.Vector3$(0, 0, 0);
    z = $.Matrix4____v3;
    z.sub$2(eye, center).normalize$0();
    if ($.$$eq($.length0(z), 0) === true)
      z.set$z(1);
    x.cross$2(up, z).normalize$0();
    if ($.$$eq($.length0(x), 0) === true) {
      z.set$x($.$$add(z.get$x(), 0.0001));
      x.cross$2(up, z).normalize$0();
    }
    y.cross$2(z, x).normalize$0();
    t1 = $.getInterceptor$JSArray(te);
    t1.$indexSet(te, 0, x.get$x());
    t1.$indexSet(te, 4, y.get$x());
    t1.$indexSet(te, 8, z.get$x());
    t1.$indexSet(te, 1, x.get$y());
    t1.$indexSet(te, 5, y.get$y());
    t1.$indexSet(te, 9, z.get$y());
    t1.$indexSet(te, 2, x.get$z());
    t1.$indexSet(te, 6, y.get$z());
    t1.$indexSet(te, 10, z.get$z());
    return this;
  },
  multiply$2: function(a, b) {
    var ae, be, te, t1, a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34, a41, a42, a43, a44, b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34, b41, b42, b43, b44, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
    ae = a.get$elements();
    be = b.get$elements();
    te = this.elements;
    t1 = $.getInterceptor$JSStringJSArray(ae);
    a11 = t1.$index(ae, 0);
    a12 = t1.$index(ae, 4);
    a13 = t1.$index(ae, 8);
    a14 = t1.$index(ae, 12);
    a21 = t1.$index(ae, 1);
    a22 = t1.$index(ae, 5);
    a23 = t1.$index(ae, 9);
    a24 = t1.$index(ae, 13);
    a31 = t1.$index(ae, 2);
    a32 = t1.$index(ae, 6);
    a33 = t1.$index(ae, 10);
    a34 = t1.$index(ae, 14);
    a41 = t1.$index(ae, 3);
    a42 = t1.$index(ae, 7);
    a43 = t1.$index(ae, 11);
    a44 = t1.$index(ae, 15);
    t1 = $.getInterceptor$JSStringJSArray(be);
    b11 = t1.$index(be, 0);
    b12 = t1.$index(be, 4);
    b13 = t1.$index(be, 8);
    b14 = t1.$index(be, 12);
    b21 = t1.$index(be, 1);
    b22 = t1.$index(be, 5);
    b23 = t1.$index(be, 9);
    b24 = t1.$index(be, 13);
    b31 = t1.$index(be, 2);
    b32 = t1.$index(be, 6);
    b33 = t1.$index(be, 10);
    b34 = t1.$index(be, 14);
    b41 = t1.$index(be, 3);
    b42 = t1.$index(be, 7);
    b43 = t1.$index(be, 11);
    b44 = t1.$index(be, 15);
    t1 = $.getInterceptor$JSNumber(a11);
    t2 = $.getInterceptor$JSNumber(a12);
    t3 = $.getInterceptor$JSNumber(a13);
    t4 = $.getInterceptor$JSNumber(a14);
    t5 = $.getInterceptor$JSArray(te);
    t5.$indexSet(te, 0, $.$$add($.$$add($.$$add(t1.$mul(a11, b11), t2.$mul(a12, b21)), t3.$mul(a13, b31)), t4.$mul(a14, b41)));
    t5.$indexSet(te, 4, $.$$add($.$$add($.$$add(t1.$mul(a11, b12), t2.$mul(a12, b22)), t3.$mul(a13, b32)), t4.$mul(a14, b42)));
    t5.$indexSet(te, 8, $.$$add($.$$add($.$$add(t1.$mul(a11, b13), t2.$mul(a12, b23)), t3.$mul(a13, b33)), t4.$mul(a14, b43)));
    t5.$indexSet(te, 12, $.$$add($.$$add($.$$add(t1.$mul(a11, b14), t2.$mul(a12, b24)), t3.$mul(a13, b34)), t4.$mul(a14, b44)));
    t6 = $.getInterceptor$JSNumber(a21);
    t7 = $.getInterceptor$JSNumber(a22);
    t8 = $.getInterceptor$JSNumber(a23);
    t9 = $.getInterceptor$JSNumber(a24);
    t5.$indexSet(te, 1, $.$$add($.$$add($.$$add(t6.$mul(a21, b11), t7.$mul(a22, b21)), t8.$mul(a23, b31)), t9.$mul(a24, b41)));
    t5.$indexSet(te, 5, $.$$add($.$$add($.$$add(t6.$mul(a21, b12), t7.$mul(a22, b22)), t8.$mul(a23, b32)), t9.$mul(a24, b42)));
    t5.$indexSet(te, 9, $.$$add($.$$add($.$$add(t6.$mul(a21, b13), t7.$mul(a22, b23)), t8.$mul(a23, b33)), t9.$mul(a24, b43)));
    t5.$indexSet(te, 13, $.$$add($.$$add($.$$add(t6.$mul(a21, b14), t7.$mul(a22, b24)), t8.$mul(a23, b34)), t9.$mul(a24, b44)));
    t10 = $.getInterceptor$JSNumber(a31);
    t11 = $.getInterceptor$JSNumber(a32);
    t12 = $.getInterceptor$JSNumber(a33);
    t13 = $.getInterceptor$JSNumber(a34);
    t5.$indexSet(te, 2, $.$$add($.$$add($.$$add(t10.$mul(a31, b11), t11.$mul(a32, b21)), t12.$mul(a33, b31)), t13.$mul(a34, b41)));
    t5.$indexSet(te, 6, $.$$add($.$$add($.$$add(t10.$mul(a31, b12), t11.$mul(a32, b22)), t12.$mul(a33, b32)), t13.$mul(a34, b42)));
    t5.$indexSet(te, 10, $.$$add($.$$add($.$$add(t10.$mul(a31, b13), t11.$mul(a32, b23)), t12.$mul(a33, b33)), t13.$mul(a34, b43)));
    t5.$indexSet(te, 14, $.$$add($.$$add($.$$add(t10.$mul(a31, b14), t11.$mul(a32, b24)), t12.$mul(a33, b34)), t13.$mul(a34, b44)));
    t14 = $.getInterceptor$JSNumber(a41);
    t15 = $.getInterceptor$JSNumber(a42);
    t16 = $.getInterceptor$JSNumber(a43);
    t17 = $.getInterceptor$JSNumber(a44);
    t5.$indexSet(te, 3, $.$$add($.$$add($.$$add(t14.$mul(a41, b11), t15.$mul(a42, b21)), t16.$mul(a43, b31)), t17.$mul(a44, b41)));
    t5.$indexSet(te, 7, $.$$add($.$$add($.$$add(t14.$mul(a41, b12), t15.$mul(a42, b22)), t16.$mul(a43, b32)), t17.$mul(a44, b42)));
    t5.$indexSet(te, 11, $.$$add($.$$add($.$$add(t14.$mul(a41, b13), t15.$mul(a42, b23)), t16.$mul(a43, b33)), t17.$mul(a44, b43)));
    t5.$indexSet(te, 15, $.$$add($.$$add($.$$add(t14.$mul(a41, b14), t15.$mul(a42, b24)), t16.$mul(a43, b34)), t17.$mul(a44, b44)));
    return this;
  },
  multiplyScalar$1: function(s) {
    var te, t1;
    te = this.elements;
    t1 = $.getInterceptor$JSStringJSArray(te);
    t1.$indexSet(te, 0, $.$$mul(t1.$index(te, 0), s));
    t1.$indexSet(te, 4, $.$$mul(t1.$index(te, 4), s));
    t1.$indexSet(te, 8, $.$$mul(t1.$index(te, 8), s));
    t1.$indexSet(te, 12, $.$$mul(t1.$index(te, 12), s));
    t1.$indexSet(te, 1, $.$$mul(t1.$index(te, 1), s));
    t1.$indexSet(te, 5, $.$$mul(t1.$index(te, 5), s));
    t1.$indexSet(te, 9, $.$$mul(t1.$index(te, 9), s));
    t1.$indexSet(te, 13, $.$$mul(t1.$index(te, 13), s));
    t1.$indexSet(te, 2, $.$$mul(t1.$index(te, 2), s));
    t1.$indexSet(te, 6, $.$$mul(t1.$index(te, 6), s));
    t1.$indexSet(te, 10, $.$$mul(t1.$index(te, 10), s));
    t1.$indexSet(te, 14, $.$$mul(t1.$index(te, 14), s));
    t1.$indexSet(te, 3, $.$$mul(t1.$index(te, 3), s));
    t1.$indexSet(te, 7, $.$$mul(t1.$index(te, 7), s));
    t1.$indexSet(te, 11, $.$$mul(t1.$index(te, 11), s));
    t1.$indexSet(te, 15, $.$$mul(t1.$index(te, 15), s));
    return this;
  },
  multiplyVector3$1: function(v) {
    var te, vx, vy, vz, t5, t6, t7, t9, t11, t13, d, t15, t17, t19, t21, t23, t24, t26, t28, t30, t32, t33, t35, t37, t39;
    te = this.elements;
    if (typeof te !== "string" && (typeof te !== "object" || te === null || te.constructor !== Array && !te.$isJavaScriptIndexingBehavior()))
      return this.multiplyVector3$1$bailout(1, v, te);
    vx = v.get$x();
    if (typeof vx !== "number")
      return this.multiplyVector3$1$bailout(2, v, te, vx);
    vy = v.get$y();
    if (typeof vy !== "number")
      return this.multiplyVector3$1$bailout(3, v, te, vx, vy);
    vz = v.get$z();
    if (typeof vz !== "number")
      return this.multiplyVector3$1$bailout(4, v, te, vx, vy, vz);
    t5 = $.getInterceptor$JSStringJSArray(te);
    t6 = te.length;
    if (3 >= t6)
      throw $.ioore(3);
    t7 = te[3];
    if (typeof t7 !== "number")
      return this.multiplyVector3$1$bailout(5, v, te, vx, vy, vz, t5, t7);
    t7 *= vx;
    if (7 >= t6)
      throw $.ioore(7);
    t9 = te[7];
    if (typeof t9 !== "number")
      return this.multiplyVector3$1$bailout(6, v, te, vx, vy, vz, t5, t7, t9);
    t7 += t9 * vy;
    if (11 >= t6)
      throw $.ioore(11);
    t11 = te[11];
    if (typeof t11 !== "number")
      return this.multiplyVector3$1$bailout(7, v, te, vx, vy, vz, t5, t7, null, t11);
    t7 += t11 * vz;
    if (15 >= t6)
      throw $.ioore(15);
    t13 = te[15];
    if (typeof t13 !== "number")
      return this.multiplyVector3$1$bailout(8, v, te, vx, vy, vz, t5, t7, null, null, t13);
    d = 1 / (t7 + t13);
    t15 = te[0];
    if (typeof t15 !== "number")
      return this.multiplyVector3$1$bailout(10, v, te, vx, vy, vz, t5, t15, null, null, null, d);
    t15 *= vx;
    t17 = te[4];
    if (typeof t17 !== "number")
      return this.multiplyVector3$1$bailout(11, v, te, vx, vy, vz, t5, t15, null, null, null, d, t17);
    t15 += t17 * vy;
    t19 = te[8];
    if (typeof t19 !== "number")
      return this.multiplyVector3$1$bailout(12, v, te, vx, vy, vz, t5, t15, null, null, null, d, null, t19);
    t15 += t19 * vz;
    t21 = te[12];
    if (typeof t21 !== "number")
      return this.multiplyVector3$1$bailout(13, v, te, vx, vy, vz, t5, t15, null, null, null, d, null, null, t21);
    v.set$x((t15 + t21) * d);
    t23 = te.length;
    if (1 >= t23)
      throw $.ioore(1);
    t24 = te[1];
    if (typeof t24 !== "number")
      return this.multiplyVector3$1$bailout(14, v, te, vx, vy, vz, t5, null, null, null, null, d, null, null, null, t24);
    t24 *= vx;
    if (5 >= t23)
      throw $.ioore(5);
    t26 = te[5];
    if (typeof t26 !== "number")
      return this.multiplyVector3$1$bailout(15, v, te, vx, vy, vz, t5, null, null, null, null, d, null, null, null, t24, t26);
    t24 += t26 * vy;
    if (9 >= t23)
      throw $.ioore(9);
    t28 = te[9];
    if (typeof t28 !== "number")
      return this.multiplyVector3$1$bailout(16, v, te, vx, vy, vz, t5, null, null, null, null, d, null, null, null, t24, null, t28);
    t24 += t28 * vz;
    if (13 >= t23)
      throw $.ioore(13);
    t30 = te[13];
    if (typeof t30 !== "number")
      return this.multiplyVector3$1$bailout(17, v, te, vx, vy, vz, t5, null, null, null, null, d, null, null, null, t24, null, null, t30);
    v.set$y((t24 + t30) * d);
    t32 = te.length;
    if (2 >= t32)
      throw $.ioore(2);
    t33 = te[2];
    if (typeof t33 !== "number")
      return this.multiplyVector3$1$bailout(18, v, te, vx, vy, vz, t5, null, null, null, null, d, null, null, null, null, null, null, null, t33);
    t33 *= vx;
    if (6 >= t32)
      throw $.ioore(6);
    t35 = te[6];
    if (typeof t35 !== "number")
      return this.multiplyVector3$1$bailout(19, v, te, null, vy, vz, t5, null, null, null, null, d, null, null, null, null, null, null, null, t33, t35);
    t33 += t35 * vy;
    if (10 >= t32)
      throw $.ioore(10);
    t37 = te[10];
    if (typeof t37 !== "number")
      return this.multiplyVector3$1$bailout(20, v, te, null, null, vz, t5, null, null, null, null, d, null, null, null, null, null, null, null, t33, null, t37);
    t33 += t37 * vz;
    if (14 >= t32)
      throw $.ioore(14);
    t39 = te[14];
    if (typeof t39 !== "number")
      return this.multiplyVector3$1$bailout(21, v, null, null, null, null, t39, null, null, null, null, d, null, null, null, null, null, null, null, t33);
    v.set$z((t33 + t39) * d);
    return v;
  },
  multiplyVector3$1$bailout: function(state0, v, te, vx, vy, vz, t5, t6, t8, t10, t12, d, t15, t17, t19, t21, t23, t25, t27, t29, t31, t33) {
    switch (state0) {
      case 0:
        te = this.elements;
      case 1:
        state0 = 0;
        vx = v.get$x();
      case 2:
        state0 = 0;
        vy = v.get$y();
      case 3:
        state0 = 0;
        vz = v.get$z();
      case 4:
        state0 = 0;
        t5 = $.getInterceptor$JSStringJSArray(te);
        t6 = t5.$index(te, 3);
      case 5:
        state0 = 0;
        t6 = $.$$mul(t6, vx);
        t8 = t5.$index(te, 7);
      case 6:
        state0 = 0;
        t6 = $.$$add(t6, $.$$mul(t8, vy));
        t10 = t5.$index(te, 11);
      case 7:
        state0 = 0;
        t6 = $.$$add(t6, $.$$mul(t10, vz));
        t12 = t5.$index(te, 15);
      case 8:
        state0 = 0;
        t12 = $.$$add(t6, t12);
        if (typeof t12 !== "number")
          throw $.iae(t12);
        d = 1 / t12;
      case 9:
        state0 = 0;
        t6 = t5.$index(te, 0);
      case 10:
        state0 = 0;
        t6 = $.$$mul(t6, vx);
        t15 = t5.$index(te, 4);
      case 11:
        state0 = 0;
        t6 = $.$$add(t6, $.$$mul(t15, vy));
        t17 = t5.$index(te, 8);
      case 12:
        state0 = 0;
        t6 = $.$$add(t6, $.$$mul(t17, vz));
        t19 = t5.$index(te, 12);
      case 13:
        state0 = 0;
        v.set$x($.$$mul($.$$add(t6, t19), d));
        t21 = t5.$index(te, 1);
      case 14:
        state0 = 0;
        t21 = $.$$mul(t21, vx);
        t23 = t5.$index(te, 5);
      case 15:
        state0 = 0;
        t21 = $.$$add(t21, $.$$mul(t23, vy));
        t25 = t5.$index(te, 9);
      case 16:
        state0 = 0;
        t21 = $.$$add(t21, $.$$mul(t25, vz));
        t27 = t5.$index(te, 13);
      case 17:
        state0 = 0;
        v.set$y($.$$mul($.$$add(t21, t27), d));
        t29 = t5.$index(te, 2);
      case 18:
        state0 = 0;
        t29 = $.$$mul(t29, vx);
        t31 = t5.$index(te, 6);
      case 19:
        state0 = 0;
        t29 = $.$$add(t29, $.$$mul(t31, vy));
        t33 = t5.$index(te, 10);
      case 20:
        state0 = 0;
        t29 = $.$$add(t29, $.$$mul(t33, vz));
        t5 = t5.$index(te, 14);
      case 21:
        state0 = 0;
        v.set$z($.$$mul($.$$add(t29, t5), d));
        return v;
    }
  },
  multiplyVector4$1: function(v) {
    var te, vx, vy, vz, vw, t6, t7, t8, t10, t12, t14, t16, t17, t19, t21, t23, t25, t26, t28, t30, t32, t34, t35, t37, t39, t41;
    te = this.elements;
    if (typeof te !== "string" && (typeof te !== "object" || te === null || te.constructor !== Array && !te.$isJavaScriptIndexingBehavior()))
      return this.multiplyVector4$1$bailout(1, v, te);
    vx = v.get$x();
    if (typeof vx !== "number")
      return this.multiplyVector4$1$bailout(2, v, te, vx);
    vy = v.get$y();
    if (typeof vy !== "number")
      return this.multiplyVector4$1$bailout(3, v, te, vx, vy);
    vz = v.get$z();
    if (typeof vz !== "number")
      return this.multiplyVector4$1$bailout(4, v, te, vx, vy, vz);
    vw = v.get$w();
    if (typeof vw !== "number")
      return this.multiplyVector4$1$bailout(5, v, te, vx, vy, vz, vw);
    t6 = $.getInterceptor$JSStringJSArray(te);
    t7 = te.length;
    if (0 >= t7)
      throw $.ioore(0);
    t8 = te[0];
    if (typeof t8 !== "number")
      return this.multiplyVector4$1$bailout(6, v, te, vx, vy, vz, vw, t6, t8);
    t8 *= vx;
    if (4 >= t7)
      throw $.ioore(4);
    t10 = te[4];
    if (typeof t10 !== "number")
      return this.multiplyVector4$1$bailout(7, v, te, vx, vy, vz, vw, t6, t8, t10);
    t8 += t10 * vy;
    if (8 >= t7)
      throw $.ioore(8);
    t12 = te[8];
    if (typeof t12 !== "number")
      return this.multiplyVector4$1$bailout(8, v, te, vx, vy, vz, vw, t6, t8, null, t12);
    t8 += t12 * vz;
    if (12 >= t7)
      throw $.ioore(12);
    t14 = te[12];
    if (typeof t14 !== "number")
      return this.multiplyVector4$1$bailout(9, v, te, vx, vy, vz, vw, t6, t8, null, null, t14);
    v.set$x(t8 + t14 * vw);
    t16 = te.length;
    if (1 >= t16)
      throw $.ioore(1);
    t17 = te[1];
    if (typeof t17 !== "number")
      return this.multiplyVector4$1$bailout(10, v, te, vx, vy, vz, vw, t6, null, null, null, null, t17);
    t17 *= vx;
    if (5 >= t16)
      throw $.ioore(5);
    t19 = te[5];
    if (typeof t19 !== "number")
      return this.multiplyVector4$1$bailout(11, v, te, vx, vy, vz, vw, t6, null, null, null, null, t17, t19);
    t17 += t19 * vy;
    if (9 >= t16)
      throw $.ioore(9);
    t21 = te[9];
    if (typeof t21 !== "number")
      return this.multiplyVector4$1$bailout(12, v, te, vx, vy, vz, vw, t6, null, null, null, null, t17, null, t21);
    t17 += t21 * vz;
    if (13 >= t16)
      throw $.ioore(13);
    t23 = te[13];
    if (typeof t23 !== "number")
      return this.multiplyVector4$1$bailout(13, v, te, vx, vy, vz, vw, t6, null, null, null, null, t17, null, null, t23);
    v.set$y(t17 + t23 * vw);
    t25 = te.length;
    if (2 >= t25)
      throw $.ioore(2);
    t26 = te[2];
    if (typeof t26 !== "number")
      return this.multiplyVector4$1$bailout(14, v, te, vx, vy, vz, vw, t6, null, null, null, null, null, null, null, null, t26);
    t26 *= vx;
    if (6 >= t25)
      throw $.ioore(6);
    t28 = te[6];
    if (typeof t28 !== "number")
      return this.multiplyVector4$1$bailout(15, v, te, vx, vy, vz, vw, t6, null, null, null, null, null, null, null, null, t26, t28);
    t26 += t28 * vy;
    if (10 >= t25)
      throw $.ioore(10);
    t30 = te[10];
    if (typeof t30 !== "number")
      return this.multiplyVector4$1$bailout(16, v, te, vx, vy, vz, vw, t6, null, null, null, null, null, null, null, null, t26, null, t30);
    t26 += t30 * vz;
    if (14 >= t25)
      throw $.ioore(14);
    t32 = te[14];
    if (typeof t32 !== "number")
      return this.multiplyVector4$1$bailout(17, v, te, vx, vy, vz, vw, t6, null, null, null, null, null, null, null, null, t26, null, null, t32);
    v.set$z(t26 + t32 * vw);
    t34 = te.length;
    if (3 >= t34)
      throw $.ioore(3);
    t35 = te[3];
    if (typeof t35 !== "number")
      return this.multiplyVector4$1$bailout(18, v, te, vx, vy, vz, vw, t6, null, null, null, null, null, null, null, null, null, null, null, null, t35);
    t35 *= vx;
    if (7 >= t34)
      throw $.ioore(7);
    t37 = te[7];
    if (typeof t37 !== "number")
      return this.multiplyVector4$1$bailout(19, v, te, null, vy, vz, vw, t6, null, null, null, null, null, null, null, null, null, null, null, null, t35, t37);
    t35 += t37 * vy;
    if (11 >= t34)
      throw $.ioore(11);
    t39 = te[11];
    if (typeof t39 !== "number")
      return this.multiplyVector4$1$bailout(20, v, te, null, null, vz, vw, t6, null, null, null, null, null, null, null, null, null, null, null, null, t35, null, t39);
    t35 += t39 * vz;
    if (15 >= t34)
      throw $.ioore(15);
    t41 = te[15];
    if (typeof t41 !== "number")
      return this.multiplyVector4$1$bailout(21, v, null, null, null, null, vw, t41, null, null, null, null, null, null, null, null, null, null, null, null, t35);
    v.set$w(t35 + t41 * vw);
    return v;
  },
  multiplyVector4$1$bailout: function(state0, v, te, vx, vy, vz, vw, t6, t7, t9, t11, t13, t15, t17, t19, t21, t23, t25, t27, t29, t31, t33, t35) {
    switch (state0) {
      case 0:
        te = this.elements;
      case 1:
        state0 = 0;
        vx = v.get$x();
      case 2:
        state0 = 0;
        vy = v.get$y();
      case 3:
        state0 = 0;
        vz = v.get$z();
      case 4:
        state0 = 0;
        vw = v.get$w();
      case 5:
        state0 = 0;
        t6 = $.getInterceptor$JSStringJSArray(te);
        t7 = t6.$index(te, 0);
      case 6:
        state0 = 0;
        t7 = $.$$mul(t7, vx);
        t9 = t6.$index(te, 4);
      case 7:
        state0 = 0;
        t7 = $.$$add(t7, $.$$mul(t9, vy));
        t11 = t6.$index(te, 8);
      case 8:
        state0 = 0;
        t7 = $.$$add(t7, $.$$mul(t11, vz));
        t13 = t6.$index(te, 12);
      case 9:
        state0 = 0;
        v.set$x($.$$add(t7, $.$$mul(t13, vw)));
        t15 = t6.$index(te, 1);
      case 10:
        state0 = 0;
        t15 = $.$$mul(t15, vx);
        t17 = t6.$index(te, 5);
      case 11:
        state0 = 0;
        t15 = $.$$add(t15, $.$$mul(t17, vy));
        t19 = t6.$index(te, 9);
      case 12:
        state0 = 0;
        t15 = $.$$add(t15, $.$$mul(t19, vz));
        t21 = t6.$index(te, 13);
      case 13:
        state0 = 0;
        v.set$y($.$$add(t15, $.$$mul(t21, vw)));
        t23 = t6.$index(te, 2);
      case 14:
        state0 = 0;
        t23 = $.$$mul(t23, vx);
        t25 = t6.$index(te, 6);
      case 15:
        state0 = 0;
        t23 = $.$$add(t23, $.$$mul(t25, vy));
        t27 = t6.$index(te, 10);
      case 16:
        state0 = 0;
        t23 = $.$$add(t23, $.$$mul(t27, vz));
        t29 = t6.$index(te, 14);
      case 17:
        state0 = 0;
        v.set$z($.$$add(t23, $.$$mul(t29, vw)));
        t31 = t6.$index(te, 3);
      case 18:
        state0 = 0;
        t31 = $.$$mul(t31, vx);
        t33 = t6.$index(te, 7);
      case 19:
        state0 = 0;
        t31 = $.$$add(t31, $.$$mul(t33, vy));
        t35 = t6.$index(te, 11);
      case 20:
        state0 = 0;
        t31 = $.$$add(t31, $.$$mul(t35, vz));
        t6 = t6.$index(te, 15);
      case 21:
        state0 = 0;
        v.set$w($.$$add(t31, $.$$mul(t6, vw)));
        return v;
    }
  },
  rotateAxis$1: function(v) {
    var te, vx, vy, vz, t1, t2, t3, t4;
    te = this.elements;
    vx = v.get$x();
    vy = v.get$y();
    vz = v.get$z();
    t1 = $.getInterceptor$JSStringJSArray(te);
    t2 = $.getInterceptor$JSNumber(vx);
    t3 = $.getInterceptor$JSNumber(vy);
    t4 = $.getInterceptor$JSNumber(vz);
    v.set$x($.$$add($.$$add(t2.$mul(vx, t1.$index(te, 0)), t3.$mul(vy, t1.$index(te, 4))), t4.$mul(vz, t1.$index(te, 8))));
    v.set$y($.$$add($.$$add(t2.$mul(vx, t1.$index(te, 1)), t3.$mul(vy, t1.$index(te, 5))), t4.$mul(vz, t1.$index(te, 9))));
    v.set$z($.$$add($.$$add(t2.$mul(vx, t1.$index(te, 2)), t3.$mul(vy, t1.$index(te, 6))), t4.$mul(vz, t1.$index(te, 10))));
    v.normalize$0();
    return v;
  },
  determinant$0: function() {
    var te, t1, n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44, t2, t3, t4;
    te = this.elements;
    t1 = $.getInterceptor$JSStringJSArray(te);
    n11 = t1.$index(te, 0);
    n12 = t1.$index(te, 4);
    n13 = t1.$index(te, 8);
    n14 = t1.$index(te, 12);
    n21 = t1.$index(te, 1);
    n22 = t1.$index(te, 5);
    n23 = t1.$index(te, 9);
    n24 = t1.$index(te, 13);
    n31 = t1.$index(te, 2);
    n32 = t1.$index(te, 6);
    n33 = t1.$index(te, 10);
    n34 = t1.$index(te, 14);
    n41 = t1.$index(te, 3);
    n42 = t1.$index(te, 7);
    n43 = t1.$index(te, 11);
    n44 = t1.$index(te, 15);
    t1 = $.getInterceptor$JSNumber(n14);
    t2 = $.getInterceptor$JSNumber(n13);
    t3 = $.getInterceptor$JSNumber(n12);
    t4 = $.getInterceptor$JSNumber(n11);
    return $.$$add($.$$sub($.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul($.$$mul(t1.$mul(n14, n23), n32), n41), $.$$mul($.$$mul(t2.$mul(n13, n24), n32), n41)), $.$$mul($.$$mul(t1.$mul(n14, n22), n33), n41)), $.$$mul($.$$mul(t3.$mul(n12, n24), n33), n41)), $.$$mul($.$$mul(t2.$mul(n13, n22), n34), n41)), $.$$mul($.$$mul(t3.$mul(n12, n23), n34), n41)), $.$$mul($.$$mul(t1.$mul(n14, n23), n31), n42)), $.$$mul($.$$mul(t2.$mul(n13, n24), n31), n42)), $.$$mul($.$$mul(t1.$mul(n14, n21), n33), n42)), $.$$mul($.$$mul(t4.$mul(n11, n24), n33), n42)), $.$$mul($.$$mul(t2.$mul(n13, n21), n34), n42)), $.$$mul($.$$mul(t4.$mul(n11, n23), n34), n42)), $.$$mul($.$$mul(t1.$mul(n14, n22), n31), n43)), $.$$mul($.$$mul(t3.$mul(n12, n24), n31), n43)), $.$$mul($.$$mul(t1.$mul(n14, n21), n32), n43)), $.$$mul($.$$mul(t4.$mul(n11, n24), n32), n43)), $.$$mul($.$$mul(t3.$mul(n12, n21), n34), n43)), $.$$mul($.$$mul(t4.$mul(n11, n22), n34), n43)), $.$$mul($.$$mul(t2.$mul(n13, n22), n31), n44)), $.$$mul($.$$mul(t3.$mul(n12, n23), n31), n44)), $.$$mul($.$$mul(t2.$mul(n13, n21), n32), n44)), $.$$mul($.$$mul(t4.$mul(n11, n23), n32), n44)), $.$$mul($.$$mul(t3.$mul(n12, n21), n33), n44)), $.$$mul($.$$mul(t4.$mul(n11, n22), n33), n44));
  },
  getPosition$0: function() {
    if ($.Matrix4____v1 == null)
      $.Matrix4____v1 = $.Vector3$(0, 0, 0);
    return $.Matrix4____v1.setValues$3($.$$index(this.elements, 12), $.$$index(this.elements, 13), $.$$index(this.elements, 14));
  },
  setPosition$1: function(v) {
    var te, t1;
    te = this.elements;
    t1 = $.getInterceptor$JSArray(te);
    t1.$indexSet(te, 12, v.get$x());
    t1.$indexSet(te, 13, v.get$y());
    t1.$indexSet(te, 14, v.get$z());
    return this;
  },
  getColumnX$0: function() {
    if ($.Matrix4____v1 == null)
      $.Matrix4____v1 = $.Vector3$(0, 0, 0);
    return $.Matrix4____v1.setValues$3($.$$index(this.elements, 0), $.$$index(this.elements, 1), $.$$index(this.elements, 2));
  },
  getColumnY$0: function() {
    if ($.Matrix4____v1 == null)
      $.Matrix4____v1 = $.Vector3$(0, 0, 0);
    return $.Matrix4____v1.setValues$3($.$$index(this.elements, 4), $.$$index(this.elements, 5), $.$$index(this.elements, 6));
  },
  getColumnZ$0: function() {
    if ($.Matrix4____v1 == null)
      $.Matrix4____v1 = $.Vector3$(0, 0, 0);
    return $.Matrix4____v1.setValues$3($.$$index(this.elements, 8), $.$$index(this.elements, 9), $.$$index(this.elements, 10));
  },
  getInverse$1: function(m) {
    var te, me, t1, n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44, t2, t3, t4, t5, t6, t7, t8, t9;
    te = this.elements;
    me = m.get$elements();
    t1 = $.getInterceptor$JSStringJSArray(me);
    n11 = t1.$index(me, 0);
    n12 = t1.$index(me, 4);
    n13 = t1.$index(me, 8);
    n14 = t1.$index(me, 12);
    n21 = t1.$index(me, 1);
    n22 = t1.$index(me, 5);
    n23 = t1.$index(me, 9);
    n24 = t1.$index(me, 13);
    n31 = t1.$index(me, 2);
    n32 = t1.$index(me, 6);
    n33 = t1.$index(me, 10);
    n34 = t1.$index(me, 14);
    n41 = t1.$index(me, 3);
    n42 = t1.$index(me, 7);
    n43 = t1.$index(me, 11);
    n44 = t1.$index(me, 15);
    t1 = $.getInterceptor$JSNumber(n23);
    t2 = $.getInterceptor$JSNumber(n24);
    t3 = $.getInterceptor$JSNumber(n22);
    t4 = $.getInterceptor$JSArray(te);
    t4.$indexSet(te, 0, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t1.$mul(n23, n34), n42), $.$$mul(t2.$mul(n24, n33), n42)), $.$$mul(t2.$mul(n24, n32), n43)), $.$$mul(t3.$mul(n22, n34), n43)), $.$$mul(t1.$mul(n23, n32), n44)), $.$$mul(t3.$mul(n22, n33), n44)));
    t5 = $.getInterceptor$JSNumber(n14);
    t6 = $.getInterceptor$JSNumber(n13);
    t7 = $.getInterceptor$JSNumber(n12);
    t4.$indexSet(te, 4, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t5.$mul(n14, n33), n42), $.$$mul(t6.$mul(n13, n34), n42)), $.$$mul(t5.$mul(n14, n32), n43)), $.$$mul(t7.$mul(n12, n34), n43)), $.$$mul(t6.$mul(n13, n32), n44)), $.$$mul(t7.$mul(n12, n33), n44)));
    t4.$indexSet(te, 8, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t6.$mul(n13, n24), n42), $.$$mul(t5.$mul(n14, n23), n42)), $.$$mul(t5.$mul(n14, n22), n43)), $.$$mul(t7.$mul(n12, n24), n43)), $.$$mul(t6.$mul(n13, n22), n44)), $.$$mul(t7.$mul(n12, n23), n44)));
    t4.$indexSet(te, 12, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t5.$mul(n14, n23), n32), $.$$mul(t6.$mul(n13, n24), n32)), $.$$mul(t5.$mul(n14, n22), n33)), $.$$mul(t7.$mul(n12, n24), n33)), $.$$mul(t6.$mul(n13, n22), n34)), $.$$mul(t7.$mul(n12, n23), n34)));
    t8 = $.getInterceptor$JSNumber(n21);
    t4.$indexSet(te, 1, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t2.$mul(n24, n33), n41), $.$$mul(t1.$mul(n23, n34), n41)), $.$$mul(t2.$mul(n24, n31), n43)), $.$$mul(t8.$mul(n21, n34), n43)), $.$$mul(t1.$mul(n23, n31), n44)), $.$$mul(t8.$mul(n21, n33), n44)));
    t9 = $.getInterceptor$JSNumber(n11);
    t4.$indexSet(te, 5, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t6.$mul(n13, n34), n41), $.$$mul(t5.$mul(n14, n33), n41)), $.$$mul(t5.$mul(n14, n31), n43)), $.$$mul(t9.$mul(n11, n34), n43)), $.$$mul(t6.$mul(n13, n31), n44)), $.$$mul(t9.$mul(n11, n33), n44)));
    t4.$indexSet(te, 9, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t5.$mul(n14, n23), n41), $.$$mul(t6.$mul(n13, n24), n41)), $.$$mul(t5.$mul(n14, n21), n43)), $.$$mul(t9.$mul(n11, n24), n43)), $.$$mul(t6.$mul(n13, n21), n44)), $.$$mul(t9.$mul(n11, n23), n44)));
    t4.$indexSet(te, 13, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t6.$mul(n13, n24), n31), $.$$mul(t5.$mul(n14, n23), n31)), $.$$mul(t5.$mul(n14, n21), n33)), $.$$mul(t9.$mul(n11, n24), n33)), $.$$mul(t6.$mul(n13, n21), n34)), $.$$mul(t9.$mul(n11, n23), n34)));
    t4.$indexSet(te, 2, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t3.$mul(n22, n34), n41), $.$$mul(t2.$mul(n24, n32), n41)), $.$$mul(t2.$mul(n24, n31), n42)), $.$$mul(t8.$mul(n21, n34), n42)), $.$$mul(t3.$mul(n22, n31), n44)), $.$$mul(t8.$mul(n21, n32), n44)));
    t4.$indexSet(te, 6, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t5.$mul(n14, n32), n41), $.$$mul(t7.$mul(n12, n34), n41)), $.$$mul(t5.$mul(n14, n31), n42)), $.$$mul(t9.$mul(n11, n34), n42)), $.$$mul(t7.$mul(n12, n31), n44)), $.$$mul(t9.$mul(n11, n32), n44)));
    t4.$indexSet(te, 10, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t7.$mul(n12, n24), n41), $.$$mul(t5.$mul(n14, n22), n41)), $.$$mul(t5.$mul(n14, n21), n42)), $.$$mul(t9.$mul(n11, n24), n42)), $.$$mul(t7.$mul(n12, n21), n44)), $.$$mul(t9.$mul(n11, n22), n44)));
    t4.$indexSet(te, 14, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t5.$mul(n14, n22), n31), $.$$mul(t7.$mul(n12, n24), n31)), $.$$mul(t5.$mul(n14, n21), n32)), $.$$mul(t9.$mul(n11, n24), n32)), $.$$mul(t7.$mul(n12, n21), n34)), $.$$mul(t9.$mul(n11, n22), n34)));
    t4.$indexSet(te, 3, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t1.$mul(n23, n32), n41), $.$$mul(t3.$mul(n22, n33), n41)), $.$$mul(t1.$mul(n23, n31), n42)), $.$$mul(t8.$mul(n21, n33), n42)), $.$$mul(t3.$mul(n22, n31), n43)), $.$$mul(t8.$mul(n21, n32), n43)));
    t4.$indexSet(te, 7, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t7.$mul(n12, n33), n41), $.$$mul(t6.$mul(n13, n32), n41)), $.$$mul(t6.$mul(n13, n31), n42)), $.$$mul(t9.$mul(n11, n33), n42)), $.$$mul(t7.$mul(n12, n31), n43)), $.$$mul(t9.$mul(n11, n32), n43)));
    t4.$indexSet(te, 11, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t6.$mul(n13, n22), n41), $.$$mul(t7.$mul(n12, n23), n41)), $.$$mul(t6.$mul(n13, n21), n42)), $.$$mul(t9.$mul(n11, n23), n42)), $.$$mul(t7.$mul(n12, n21), n43)), $.$$mul(t9.$mul(n11, n22), n43)));
    t4.$indexSet(te, 15, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t7.$mul(n12, n23), n31), $.$$mul(t6.$mul(n13, n22), n31)), $.$$mul(t6.$mul(n13, n21), n32)), $.$$mul(t9.$mul(n11, n23), n32)), $.$$mul(t7.$mul(n12, n21), n33)), $.$$mul(t9.$mul(n11, n22), n33)));
    t4 = m.determinant$0();
    if (typeof t4 !== "number")
      throw $.iae(t4);
    this.multiplyScalar$1(1 / t4);
    return this;
  },
  setRotationFromEuler$2: function(v, order) {
    var te, x, y, z, a, b, c, d, e, f, t1, t2, t3, ce, cf, de, df, t4, af, be, bf, ad, bc, bd;
    te = this.elements;
    x = v.get$x();
    y = v.get$y();
    z = v.get$z();
    a = Math.cos($.checkNum(x));
    b = Math.sin($.checkNum(x));
    c = Math.cos($.checkNum(y));
    d = Math.sin($.checkNum(y));
    e = Math.cos($.checkNum(z));
    f = Math.sin($.checkNum(z));
    t1 = a * e;
    t2 = $.getInterceptor$JSArray(te);
    t3 = a * c;
    ce = c * e;
    switch (order) {
      case "YXZ":
        cf = c * f;
        de = d * e;
        df = d * f;
        t2.$indexSet(te, 0, ce + df * b);
        t2.$indexSet(te, 4, de * b - cf);
        t2.$indexSet(te, 8, a * d);
        t2.$indexSet(te, 1, a * f);
        t2.$indexSet(te, 5, t1);
        t2.$indexSet(te, 9, -b);
        t2.$indexSet(te, 2, cf * b - de);
        t2.$indexSet(te, 6, df + ce * b);
        t2.$indexSet(te, 10, t3);
        break;
      case "ZXY":
        cf = c * f;
        de = d * e;
        df = d * f;
        t2.$indexSet(te, 0, ce - df * b);
        t4 = -a;
        t2.$indexSet(te, 4, t4 * f);
        t2.$indexSet(te, 8, de + cf * b);
        t2.$indexSet(te, 1, cf + de * b);
        t2.$indexSet(te, 5, t1);
        t2.$indexSet(te, 9, df - ce * b);
        t2.$indexSet(te, 2, t4 * d);
        t2.$indexSet(te, 6, b);
        t2.$indexSet(te, 10, t3);
        break;
      case "ZYX":
        af = a * f;
        be = b * e;
        bf = b * f;
        t2.$indexSet(te, 0, ce);
        t2.$indexSet(te, 4, be * d - af);
        t2.$indexSet(te, 8, t1 * d + bf);
        t2.$indexSet(te, 1, c * f);
        t2.$indexSet(te, 5, bf * d + t1);
        t2.$indexSet(te, 9, af * d - be);
        t2.$indexSet(te, 2, -d);
        t2.$indexSet(te, 6, b * c);
        t2.$indexSet(te, 10, t3);
        break;
      case "YZX":
        ad = a * d;
        bc = b * c;
        bd = b * d;
        t2.$indexSet(te, 0, ce);
        t2.$indexSet(te, 4, bd - t3 * f);
        t2.$indexSet(te, 8, bc * f + ad);
        t2.$indexSet(te, 1, f);
        t2.$indexSet(te, 5, t1);
        t2.$indexSet(te, 9, -b * e);
        t2.$indexSet(te, 2, -d * e);
        t2.$indexSet(te, 6, ad * f + bc);
        t2.$indexSet(te, 10, t3 - bd * f);
        break;
      case "XZY":
        ad = a * d;
        bc = b * c;
        bd = b * d;
        t2.$indexSet(te, 0, ce);
        t2.$indexSet(te, 4, -f);
        t2.$indexSet(te, 8, d * e);
        t2.$indexSet(te, 1, t3 * f + bd);
        t2.$indexSet(te, 5, t1);
        t2.$indexSet(te, 9, ad * f - bc);
        t2.$indexSet(te, 2, bc * f - ad);
        t2.$indexSet(te, 6, b * e);
        t2.$indexSet(te, 10, bd * f + t3);
        break;
      default:
        af = a * f;
        be = b * e;
        bf = b * f;
        t2.$indexSet(te, 0, ce);
        t2.$indexSet(te, 4, -c * f);
        t2.$indexSet(te, 8, d);
        t2.$indexSet(te, 1, af + be * d);
        t2.$indexSet(te, 5, t1 - bf * d);
        t2.$indexSet(te, 9, -b * c);
        t2.$indexSet(te, 2, bf - t1 * d);
        t2.$indexSet(te, 6, be + af * d);
        t2.$indexSet(te, 10, t3);
        break;
    }
    return this;
  },
  setRotationFromQuaternion$1: function(q) {
    var te, x, y, z, w, t1, x2, t2, y2, t3, z2, xx, xy, xz, yy, yz, zz, wx, wy, wz, t4, t5, t6, t7;
    te = this.elements;
    x = q.x;
    y = q.y;
    z = q.z;
    w = q.w;
    t1 = $.getInterceptor$JSNumber(x);
    x2 = t1.$add(x, x);
    t2 = $.getInterceptor$JSNumber(y);
    y2 = t2.$add(y, y);
    t3 = $.getInterceptor$JSNumber(z);
    z2 = t3.$add(z, z);
    xx = t1.$mul(x, x2);
    xy = t1.$mul(x, y2);
    xz = t1.$mul(x, z2);
    yy = t2.$mul(y, y2);
    yz = t2.$mul(y, z2);
    zz = t3.$mul(z, z2);
    t3 = $.getInterceptor$JSNumber(w);
    wx = t3.$mul(w, x2);
    wy = t3.$mul(w, y2);
    wz = t3.$mul(w, z2);
    t3 = $.$$add(yy, zz);
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t2 = $.getInterceptor$JSArray(te);
    t2.$indexSet(te, 0, 1 - t3);
    t1 = $.getInterceptor$JSNumber(xy);
    t2.$indexSet(te, 4, t1.$sub(xy, wz));
    t4 = $.getInterceptor$JSNumber(xz);
    t2.$indexSet(te, 8, t4.$add(xz, wy));
    t2.$indexSet(te, 1, t1.$add(xy, wz));
    t5 = $.getInterceptor$JSNumber(xx);
    t6 = t5.$add(xx, zz);
    if (typeof t6 !== "number")
      throw $.iae(t6);
    t2.$indexSet(te, 5, 1 - t6);
    t7 = $.getInterceptor$JSNumber(yz);
    t2.$indexSet(te, 9, t7.$sub(yz, wx));
    t2.$indexSet(te, 2, t4.$sub(xz, wy));
    t2.$indexSet(te, 6, t7.$add(yz, wx));
    t5 = t5.$add(xx, yy);
    if (typeof t5 !== "number")
      throw $.iae(t5);
    t2.$indexSet(te, 10, 1 - t5);
    return this;
  },
  extractRotation$1: function(m) {
    var te, me, vector, t1, t2, scaleX, scaleY, scaleZ;
    te = this.elements;
    me = m.get$elements();
    if ($.Matrix4____v1 == null)
      $.Matrix4____v1 = $.Vector3$(0, 0, 0);
    vector = $.Matrix4____v1;
    t1 = $.getInterceptor$JSStringJSArray(me);
    t2 = $.length0(vector.setValues$3(t1.$index(me, 0), t1.$index(me, 1), t1.$index(me, 2)));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    scaleX = 1 / t2;
    t2 = $.length0(vector.setValues$3(t1.$index(me, 4), t1.$index(me, 5), t1.$index(me, 6)));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    scaleY = 1 / t2;
    t2 = $.length0(vector.setValues$3(t1.$index(me, 8), t1.$index(me, 9), t1.$index(me, 10)));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    scaleZ = 1 / t2;
    t2 = $.getInterceptor$JSArray(te);
    t2.$indexSet(te, 0, $.$$mul(t1.$index(me, 0), scaleX));
    t2.$indexSet(te, 1, $.$$mul(t1.$index(me, 1), scaleX));
    t2.$indexSet(te, 2, $.$$mul(t1.$index(me, 2), scaleX));
    t2.$indexSet(te, 4, $.$$mul(t1.$index(me, 4), scaleY));
    t2.$indexSet(te, 5, $.$$mul(t1.$index(me, 5), scaleY));
    t2.$indexSet(te, 6, $.$$mul(t1.$index(me, 6), scaleY));
    t2.$indexSet(te, 8, $.$$mul(t1.$index(me, 8), scaleZ));
    t2.$indexSet(te, 9, $.$$mul(t1.$index(me, 9), scaleZ));
    t2.$indexSet(te, 10, $.$$mul(t1.$index(me, 10), scaleZ));
    return this;
  },
  scale$1: function(v) {
    var te, x, y, z, t1;
    te = this.elements;
    x = v.get$x();
    y = v.get$y();
    z = v.get$z();
    t1 = $.getInterceptor$JSStringJSArray(te);
    t1.$indexSet(te, 0, $.$$mul(t1.$index(te, 0), x));
    t1.$indexSet(te, 4, $.$$mul(t1.$index(te, 4), y));
    t1.$indexSet(te, 8, $.$$mul(t1.$index(te, 8), z));
    t1.$indexSet(te, 1, $.$$mul(t1.$index(te, 1), x));
    t1.$indexSet(te, 5, $.$$mul(t1.$index(te, 5), y));
    t1.$indexSet(te, 9, $.$$mul(t1.$index(te, 9), z));
    t1.$indexSet(te, 2, $.$$mul(t1.$index(te, 2), x));
    t1.$indexSet(te, 6, $.$$mul(t1.$index(te, 6), y));
    t1.$indexSet(te, 10, $.$$mul(t1.$index(te, 10), z));
    t1.$indexSet(te, 3, $.$$mul(t1.$index(te, 3), x));
    t1.$indexSet(te, 7, $.$$mul(t1.$index(te, 7), y));
    t1.$indexSet(te, 11, $.$$mul(t1.$index(te, 11), z));
    return this;
  },
  get$scale: function() {
    return new $.BoundClosure(this, "scale$1");
  },
  getMaxScaleOnAxis$0: function() {
    var te, t1;
    te = this.elements;
    t1 = $.getInterceptor$JSStringJSArray(te);
    return Math.sqrt($.checkNum($.max($.$$add($.$$add($.$$mul(t1.$index(te, 0), t1.$index(te, 0)), $.$$mul(t1.$index(te, 1), t1.$index(te, 1))), $.$$mul(t1.$index(te, 2), t1.$index(te, 2))), $.max($.$$add($.$$add($.$$mul(t1.$index(te, 4), t1.$index(te, 4)), $.$$mul(t1.$index(te, 5), t1.$index(te, 5))), $.$$mul(t1.$index(te, 6), t1.$index(te, 6))), $.$$add($.$$add($.$$mul(t1.$index(te, 8), t1.$index(te, 8)), $.$$mul(t1.$index(te, 9), t1.$index(te, 9))), $.$$mul(t1.$index(te, 10), t1.$index(te, 10)))))));
  },
  makeFrustum$6: function(left, right, bottom, top, near, far) {
    var te, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
    te = this.elements;
    if (typeof near !== "number")
      throw $.iae(near);
    t1 = 2 * near;
    t2 = $.getInterceptor$JSNumber(right);
    t3 = t2.$sub(right, left);
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t4 = $.getInterceptor$JSNumber(top);
    t5 = t4.$sub(top, bottom);
    if (typeof t5 !== "number")
      throw $.iae(t5);
    t6 = $.$$div(t2.$add(right, left), t2.$sub(right, left));
    t7 = $.$$div(t4.$add(top, bottom), t4.$sub(top, bottom));
    t8 = $.getInterceptor$JSNumber(far);
    t9 = $.$$div($.$$negate(t8.$add(far, near)), t8.$sub(far, near));
    if (typeof far !== "number")
      throw $.iae(far);
    t10 = $.getInterceptor$JSArray(te);
    t10.$indexSet(te, 0, t1 / t3);
    t10.$indexSet(te, 4, 0);
    t10.$indexSet(te, 8, t6);
    t10.$indexSet(te, 12, 0);
    t10.$indexSet(te, 1, 0);
    t10.$indexSet(te, 5, t1 / t5);
    t10.$indexSet(te, 9, t7);
    t10.$indexSet(te, 13, 0);
    t10.$indexSet(te, 2, 0);
    t10.$indexSet(te, 6, 0);
    t10.$indexSet(te, 10, t9);
    t10.$indexSet(te, 14, -2 * far * near / (far - near));
    t10.$indexSet(te, 3, 0);
    t10.$indexSet(te, 7, 0);
    t10.$indexSet(te, 11, -1);
    t10.$indexSet(te, 15, 0);
    return this;
  },
  makePerspective$4: function(fov, aspect, near, far) {
    var t1, t2, ymin;
    t1 = $.$$mul(near, Math.tan($.checkNum($.$$div($.$$mul(fov, 3.141592653589793), 360))));
    t2 = $.getInterceptor$JSNumber(t1);
    ymin = t2.$negate(t1);
    return this.makeFrustum$6($.$$mul(ymin, aspect), t2.$mul(t1, aspect), ymin, t1, near, far);
  },
  Matrix4$16: function(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
    this.setValues$16(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44);
  }
};

$$.Quaternion = {"": "Object;x=,y=,z=,w=",
  setValues$4: function(newX, newY, newZ, newW) {
    this.x = newX;
    this.y = newY;
    this.z = newZ;
    this.w = newW;
    return this;
  },
  copy$1: function(q) {
    this.x = q.get$x();
    this.y = q.get$y();
    this.z = q.get$z();
    this.w = q.get$w();
    return this;
  },
  length$0: function() {
    var t1, t3, t5, t7;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.length$0$bailout1(1, t1);
    t1 *= t1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.length$0$bailout1(2, t1, t3);
    t1 += t3 * t3;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.length$0$bailout1(3, t1, null, t5);
    t1 += t5 * t5;
    t7 = this.w;
    if (typeof t7 !== "number")
      return this.length$0$bailout1(4, t1, null, null, t7);
    return Math.sqrt($.checkNum(t1 + t7 * t7));
  },
  length$0$bailout1: function(state0, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t1 = $.$$mul(t1, t1);
        t3 = this.y;
      case 2:
        state0 = 0;
        t1 = $.$$add(t1, $.$$mul(t3, t3));
        t5 = this.z;
      case 3:
        state0 = 0;
        t1 = $.$$add(t1, $.$$mul(t5, t5));
        t7 = this.w;
      case 4:
        state0 = 0;
        return Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t7, t7))));
    }
  },
  get$length: function() {
    return new $.BoundClosure3(this, "length$0");
  },
  normalize$0: function() {
    var t1, t2, t3, t4, l;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    t1 = $.$$add(t1, $.$$mul(t3, t3));
    t4 = this.w;
    l = Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t4, t4))));
    if (l === 0) {
      this.x = 0;
      this.y = 0;
      this.z = 0;
      this.w = 0;
    } else {
      l = 1 / l;
      this.x = $.$$mul(this.x, l);
      this.y = $.$$mul(this.y, l);
      this.z = $.$$mul(this.z, l);
      this.w = $.$$mul(this.w, l);
    }
    return this;
  },
  multiply$2: function(q1, q2) {
    this.x = $.$$add($.$$sub($.$$add($.$$mul(q1.get$x(), q2.get$w()), $.$$mul(q1.get$y(), q2.get$z())), $.$$mul(q1.get$z(), q2.get$y())), $.$$mul(q1.get$w(), q2.get$x()));
    this.y = $.$$add($.$$add($.$$add($.$$mul($.$$negate(q1.get$x()), q2.get$z()), $.$$mul(q1.get$y(), q2.get$w())), $.$$mul(q1.get$z(), q2.get$x())), $.$$mul(q1.get$w(), q2.get$y()));
    this.z = $.$$add($.$$add($.$$sub($.$$mul(q1.get$x(), q2.get$y()), $.$$mul(q1.get$y(), q2.get$x())), $.$$mul(q1.get$z(), q2.get$w())), $.$$mul(q1.get$w(), q2.get$z()));
    this.w = $.$$add($.$$sub($.$$sub($.$$mul($.$$negate(q1.get$x()), q2.get$x()), $.$$mul(q1.get$y(), q2.get$y())), $.$$mul(q1.get$z(), q2.get$z())), $.$$mul(q1.get$w(), q2.get$w()));
    return this;
  },
  multiplyVector3$2$dest: function(vec, dest) {
    var _x, _y, _z, qx, qy, qz, qw, t8, t9, t10, t11, t12, t13, t14;
    if (dest == null)
      dest = vec;
    _x = vec.get$x();
    if (typeof _x !== "number")
      return this.multiplyVector3$2$dest$bailout(1, vec, dest, _x);
    _y = vec.get$y();
    if (typeof _y !== "number")
      return this.multiplyVector3$2$dest$bailout(2, vec, dest, _x, _y);
    _z = vec.get$z();
    if (typeof _z !== "number")
      return this.multiplyVector3$2$dest$bailout(3, null, dest, _x, _y, _z);
    qx = this.x;
    if (typeof qx !== "number")
      return this.multiplyVector3$2$dest$bailout(4, null, dest, _x, _y, _z, qx);
    qy = this.y;
    if (typeof qy !== "number")
      return this.multiplyVector3$2$dest$bailout(5, null, dest, _x, _y, _z, qx, qy);
    qz = this.z;
    if (typeof qz !== "number")
      return this.multiplyVector3$2$dest$bailout(6, null, dest, _x, _y, _z, qx, qy, qz);
    qw = this.w;
    if (typeof qw !== "number")
      return this.multiplyVector3$2$dest$bailout(7, null, dest, _x, _y, _z, qx, qy, qz, qw);
    t8 = qw * _x + qy * _z - qz * _y;
    t9 = qw * _y + qz * _x - qx * _z;
    t10 = qw * _z + qx * _y - qy * _x;
    t11 = -qx;
    t12 = t11 * _x - qy * _y - qz * _z;
    t13 = -qz;
    t14 = -qy;
    dest.set$x(t8 * qw + t12 * t11 + t9 * t13 - t10 * t14);
    dest.set$y(t9 * qw + t12 * t14 + t10 * t11 - t8 * t13);
    dest.set$z(t10 * qw + t12 * t13 + t8 * t14 - t9 * t11);
    return dest;
  },
  multiplyVector3$2$dest$bailout: function(state0, vec, dest, _x, _y, _z, qx, qy, qz, qw) {
    switch (state0) {
      case 0:
        if (dest == null)
          dest = vec;
        _x = vec.get$x();
      case 1:
        state0 = 0;
        _y = vec.get$y();
      case 2:
        state0 = 0;
        _z = vec.get$z();
      case 3:
        state0 = 0;
        qx = this.x;
      case 4:
        state0 = 0;
        qy = this.y;
      case 5:
        state0 = 0;
        qz = this.z;
      case 6:
        state0 = 0;
        qw = this.w;
      case 7:
        var t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19;
        state0 = 0;
        t8 = $.getInterceptor$JSNumber(qw);
        t9 = $.getInterceptor$JSNumber(qy);
        t10 = $.getInterceptor$JSNumber(qz);
        t11 = $.$$sub($.$$add(t8.$mul(qw, _x), t9.$mul(qy, _z)), t10.$mul(qz, _y));
        t12 = $.getInterceptor$JSNumber(qx);
        t13 = $.$$sub($.$$add(t8.$mul(qw, _y), t10.$mul(qz, _x)), t12.$mul(qx, _z));
        t14 = $.$$sub($.$$add(t8.$mul(qw, _z), t12.$mul(qx, _y)), t9.$mul(qy, _x));
        t15 = $.$$sub($.$$sub($.$$mul(t12.$negate(qx), _x), t9.$mul(qy, _y)), t10.$mul(qz, _z));
        t16 = $.getInterceptor$JSNumber(t11);
        t17 = $.getInterceptor$JSNumber(t15);
        t18 = $.getInterceptor$JSNumber(t13);
        t19 = $.getInterceptor$JSNumber(t14);
        dest.set$x($.$$sub($.$$add($.$$add(t16.$mul(t11, qw), t17.$mul(t15, t12.$negate(qx))), t18.$mul(t13, t10.$negate(qz))), t19.$mul(t14, t9.$negate(qy))));
        dest.set$y($.$$sub($.$$add($.$$add(t18.$mul(t13, qw), t17.$mul(t15, t9.$negate(qy))), t19.$mul(t14, t12.$negate(qx))), t16.$mul(t11, t10.$negate(qz))));
        dest.set$z($.$$sub($.$$add($.$$add(t19.$mul(t14, qw), t17.$mul(t15, t10.$negate(qz))), t16.$mul(t11, t9.$negate(qy))), t18.$mul(t13, t12.$negate(qx))));
        return dest;
    }
  },
  multiplyVector3$1: function(vec) {
    return this.multiplyVector3$2$dest(vec, null);
  },
  $isIVector4: true
};

$$.Vector4 = {"": "Object;x=,y=,z=,w=",
  setValues$4: function(x, y, z, w) {
    this.x = x;
    this.y = y;
    this.z = z;
    this.w = w;
    return this;
  },
  copy$1: function(v) {
    this.x = v.get$x();
    this.y = v.get$y();
    this.z = v.get$z();
    if (typeof v === "object" && v !== null && !!v.$isIVector4)
      this.w = v.get$w();
    else
      this.w = 1;
  },
  add$2: function(v1, v2) {
    this.x = $.$$add(v1.get$x(), v2.get$x());
    this.y = $.$$add(v1.get$y(), v2.get$y());
    this.z = $.$$add(v1.get$z(), v2.get$z());
    this.w = $.$$add(v1.get$w(), v2.get$w());
    return this;
  },
  addSelf$1: function(v) {
    this.x = $.$$add(this.x, v.get$x());
    this.y = $.$$add(this.y, v.get$y());
    this.z = $.$$add(this.z, v.get$z());
    this.w = $.$$add(this.w, v.get$w());
    return this;
  },
  sub$2: function(v1, v2) {
    this.x = $.$$sub(v1.get$x(), v2.get$x());
    this.y = $.$$sub(v1.get$y(), v2.get$y());
    this.z = $.$$sub(v1.get$z(), v2.get$z());
    this.w = $.$$sub(v1.get$w(), v2.get$w());
    return this;
  },
  subSelf$1: function(v) {
    var t1, t3, t5, t7, t9, t11, t13, t15;
    t1 = this.x;
    t3 = v.x;
    if (typeof t1 !== "number")
      return this.subSelf$1$bailout0(1, v, t1);
    if (typeof t3 !== "number")
      return this.subSelf$1$bailout0(2, v, t1, t3);
    this.x = t1 - t3;
    t5 = this.y;
    t7 = v.y;
    if (typeof t5 !== "number")
      return this.subSelf$1$bailout0(3, v, null, null, t5);
    if (typeof t7 !== "number")
      return this.subSelf$1$bailout0(4, v, null, null, t5, t7);
    this.y = t5 - t7;
    t9 = this.z;
    t11 = v.z;
    if (typeof t9 !== "number")
      return this.subSelf$1$bailout0(5, v, null, null, null, null, t9);
    if (typeof t11 !== "number")
      return this.subSelf$1$bailout0(6, v, null, null, null, null, t9, t11);
    this.z = t9 - t11;
    t13 = this.w;
    t15 = v.get$w();
    if (typeof t13 !== "number")
      return this.subSelf$1$bailout0(7, v, null, null, null, null, null, null, t13);
    if (typeof t15 !== "number")
      return this.subSelf$1$bailout0(8, null, null, null, null, null, null, null, t13, t15);
    this.w = t13 - t15;
    return this;
  },
  subSelf$1$bailout0: function(state0, v, t1, t3, t5, t7, t9, t11, t13, t15) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = v.x;
      case 2:
        state0 = 0;
        this.x = $.$$sub(t1, t3);
        t5 = this.y;
      case 3:
        state0 = 0;
        t7 = v.y;
      case 4:
        state0 = 0;
        this.y = $.$$sub(t5, t7);
        t9 = this.z;
      case 5:
        state0 = 0;
        t11 = v.z;
      case 6:
        state0 = 0;
        this.z = $.$$sub(t9, t11);
        t13 = this.w;
      case 7:
        state0 = 0;
        t15 = v.get$w();
      case 8:
        state0 = 0;
        this.w = $.$$sub(t13, t15);
        return this;
    }
  },
  multiplyScalar$1: function(s) {
    this.x = $.$$mul(this.x, s);
    this.y = $.$$mul(this.y, s);
    this.z = $.$$mul(this.z, s);
    this.w = $.$$mul(this.w, s);
    return this;
  },
  divideScalar$1: function(s) {
    var t1, t3, t5, t7;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.divideScalar$1$bailout0(1, s, t1);
    this.x = t1 / s;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.divideScalar$1$bailout0(2, s, null, t3);
    this.y = t3 / s;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.divideScalar$1$bailout0(3, s, null, null, t5);
    this.z = t5 / s;
    t7 = this.w;
    if (typeof t7 !== "number")
      return this.divideScalar$1$bailout0(4, s, null, null, null, t7);
    this.w = t7 / s;
    return this;
  },
  divideScalar$1$bailout0: function(state0, s, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        this.x = $.$$div(t1, s);
        t3 = this.y;
      case 2:
        state0 = 0;
        this.y = $.$$div(t3, s);
        t5 = this.z;
      case 3:
        state0 = 0;
        this.z = $.$$div(t5, s);
        t7 = this.w;
      case 4:
        state0 = 0;
        this.w = $.$$div(t7, s);
        return this;
    }
  },
  negate$0: function() {
    var t1, t3, t5, t7;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.negate$0$bailout0(1, t1);
    this.x = t1 * -1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.negate$0$bailout0(2, null, t3);
    this.y = t3 * -1;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.negate$0$bailout0(3, null, null, t5);
    this.z = t5 * -1;
    t7 = this.w;
    if (typeof t7 !== "number")
      return this.negate$0$bailout0(4, null, null, null, t7);
    this.w = t7 * -1;
    return this;
  },
  negate$0$bailout0: function(state0, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        this.x = $.$$mul(t1, -1);
        t3 = this.y;
      case 2:
        state0 = 0;
        this.y = $.$$mul(t3, -1);
        t5 = this.z;
      case 3:
        state0 = 0;
        this.z = $.$$mul(t5, -1);
        t7 = this.w;
      case 4:
        state0 = 0;
        this.w = $.$$mul(t7, -1);
        return this;
    }
  },
  dot$1: function(v) {
    var t1, t3, t6, t8, t10, t12, t14;
    t1 = this.x;
    t3 = v.get$x();
    if (typeof t1 !== "number")
      return this.dot$1$bailout0(1, v, t1);
    if (typeof t3 !== "number")
      return this.dot$1$bailout0(2, v, t1, t3);
    t3 = t1 * t3;
    t1 = this.y;
    t6 = v.get$y();
    if (typeof t1 !== "number")
      return this.dot$1$bailout0(3, v, t1, t3);
    if (typeof t6 !== "number")
      return this.dot$1$bailout0(4, v, t1, t3, t6);
    t3 += t1 * t6;
    t8 = this.z;
    t10 = v.get$z();
    if (typeof t8 !== "number")
      return this.dot$1$bailout0(5, v, null, t3, null, t8);
    if (typeof t10 !== "number")
      return this.dot$1$bailout0(6, v, null, t3, null, t8, t10);
    t3 += t8 * t10;
    t12 = this.w;
    t14 = v.get$w();
    if (typeof t12 !== "number")
      return this.dot$1$bailout0(7, v, null, t3, null, null, null, t12);
    if (typeof t14 !== "number")
      return this.dot$1$bailout0(8, null, null, t3, null, null, null, t12, t14);
    return t3 + t12 * t14;
  },
  dot$1$bailout0: function(state0, v, t1, t3, t6, t8, t10, t12, t14) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = v.get$x();
      case 2:
        state0 = 0;
        t3 = $.$$mul(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t6 = v.get$y();
      case 4:
        state0 = 0;
        t3 = $.$$add(t3, $.$$mul(t1, t6));
        t8 = this.z;
      case 5:
        state0 = 0;
        t10 = v.get$z();
      case 6:
        state0 = 0;
        t3 = $.$$add(t3, $.$$mul(t8, t10));
        t12 = this.w;
      case 7:
        state0 = 0;
        t14 = v.get$w();
      case 8:
        state0 = 0;
        return $.$$add(t3, $.$$mul(t12, t14));
    }
  },
  lengthSq$0: function() {
    var t1, t2, t3, t4;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    t1 = $.$$add(t1, $.$$mul(t3, t3));
    t4 = this.w;
    return $.$$add(t1, $.$$mul(t4, t4));
  },
  length$0: function() {
    var t1, t3, t5, t7;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.length$0$bailout0(1, t1);
    t1 *= t1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.length$0$bailout0(2, t1, t3);
    t1 += t3 * t3;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.length$0$bailout0(3, t1, null, t5);
    t1 += t5 * t5;
    t7 = this.w;
    if (typeof t7 !== "number")
      return this.length$0$bailout0(4, t1, null, null, t7);
    return Math.sqrt($.checkNum(t1 + t7 * t7));
  },
  length$0$bailout0: function(state0, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t1 = $.$$mul(t1, t1);
        t3 = this.y;
      case 2:
        state0 = 0;
        t1 = $.$$add(t1, $.$$mul(t3, t3));
        t5 = this.z;
      case 3:
        state0 = 0;
        t1 = $.$$add(t1, $.$$mul(t5, t5));
        t7 = this.w;
      case 4:
        state0 = 0;
        return Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t7, t7))));
    }
  },
  get$length: function() {
    return new $.BoundClosure3(this, "length$0");
  },
  normalize$0: function() {
    var t1, t2, t3, t4;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    t1 = $.$$add(t1, $.$$mul(t3, t3));
    t4 = this.w;
    return this.divideScalar$1(Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t4, t4)))));
  },
  lerpSelf$2: function(v, alpha) {
    var t1, t2, t3, t4;
    t1 = this.x;
    this.x = $.$$add(t1, $.$$mul($.$$sub(v.get$x(), t1), alpha));
    t2 = this.y;
    this.y = $.$$add(t2, $.$$mul($.$$sub(v.get$y(), t2), alpha));
    t3 = this.z;
    this.z = $.$$add(t3, $.$$mul($.$$sub(v.get$z(), t3), alpha));
    t4 = this.w;
    this.w = $.$$add(t4, $.$$mul($.$$sub(v.get$w(), t4), alpha));
    return this;
  },
  $isIVector4: true
};

$$.Object3D = {"": "Object;id>,name>,parent=,children>,position=,rotation=,scale>,renderDepth>,matrixWorld>,matrixRotationWorld>,visible=,frustumCulled>",
  scale$2: function(arg0, arg1) {
    return this.scale.call$2(arg0, arg1);
  },
  translate$2: function(distance, axis) {
    this.matrix.rotateAxis$1(axis);
    this.position.addSelf$1(axis.multiplyScalar$1(distance));
  },
  lookAt$1: function(vector) {
    var t1 = this.matrix;
    t1.lookAt$3(vector, this.position, this.up);
    if (this.rotationAutoUpdate)
      this.rotation.setEulerFromRotationMatrix$2(t1, this.eulerOrder);
  },
  add$1: function(object) {
    var scene;
    if ($.$$eq(object, this) === true) {
      $.print("THREE.Object3D.add: An object can't be added as a child of itself.");
      return;
    }
    if (!(object.get$parent() == null))
      $.remove(object.get$parent(), object);
    object.set$parent(this);
    $.add(this.children, object);
    for (scene = this; !(scene.get$parent() == null);)
      scene = scene.get$parent();
    if (typeof scene === "object" && scene !== null && !!scene.$isScene)
      scene.addObject$1(object);
  },
  remove$1: function(object) {
    var t1, scene;
    t1 = $.indexOf0(this.children, object);
    if (typeof t1 !== "number")
      return this.remove$1$bailout0(1, object, t1);
    if (!(t1 === -1)) {
      object.set$parent(null);
      $.removeRange(this.children, t1, 1);
      for (scene = this; !(scene.get$parent() == null);)
        scene = scene.get$parent();
      if (typeof scene === "object" && scene !== null && !!scene.$isScene)
        scene.removeObject$1(object);
    }
  },
  remove$1$bailout0: function(state0, object, t1) {
    var scene;
    if ($.$$eq(t1, -1) !== true) {
      object.set$parent(null);
      $.removeRange(this.children, t1, 1);
      for (scene = this; !(scene.get$parent() == null);)
        scene = scene.get$parent();
      if (typeof scene === "object" && scene !== null && !!scene.$isScene)
        scene.removeObject$1(object);
    }
  },
  updateMatrix$0: function() {
    var t1, t2;
    t1 = this.matrix;
    t1.setPosition$1(this.position);
    if (this.useQuaternion)
      t1.setRotationFromQuaternion$1(this.quaternion);
    else
      t1.setRotationFromEuler$2(this.rotation, this.eulerOrder);
    t2 = this.scale;
    if ($.$$eq(t2.x, 1) !== true || $.$$eq(t2.y, 1) !== true || $.$$eq(t2.z, 1) !== true) {
      t1.scale$1(t2);
      this.boundRadiusScale = $.max(t2.x, $.max(t2.y, t2.z));
    }
    this.matrixWorldNeedsUpdate = true;
  },
  updateMatrixWorld$1$force: function(force) {
    var t1, t2, t3, t4;
    t1 = {};
    t1.force_0 = force;
    if (this.matrixAutoUpdate === true)
      this.updateMatrix$0();
    if (this.matrixWorldNeedsUpdate || t1.force_0 === true) {
      t2 = this.parent;
      t3 = this.matrixWorld;
      t4 = this.matrix;
      if (!(t2 == null))
        t3.multiply$2(t2.get$matrixWorld(), t4);
      else
        t3.copy$1(t4);
      this.matrixWorldNeedsUpdate = false;
      t1.force_0 = true;
    }
    $.forEach(this.children, new $.Object3D_updateMatrixWorld_anon(t1));
  },
  updateMatrixWorld$0: function() {
    return this.updateMatrixWorld$1$force(false);
  },
  get$_data: function() {
    if (this.__data == null)
      this.__data = $.makeLiteralMap([]);
    return this.__data;
  },
  $index: function(key) {
    var t1 = this.get$_data();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout1(1, key, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    return t1[key];
  },
  $$index$bailout1: function(state0, key, t1) {
    return $.$$index(t1, key);
  },
  $indexSet: function(key, value) {
    var t1 = this.get$_data();
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.$$indexSet$bailout(1, key, value, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    t1[key] = value;
    return value;
  },
  $$indexSet$bailout: function(state0, key, value, t1) {
    $.$$indexSet(t1, key, value);
    return value;
  }
};

$$.Color = {"": "Object;r>,g>,b>",
  get$_rr: function() {
    return $.toInt($.floor($.$$mul(this.r, 255)));
  },
  get$_gg: function() {
    return $.toInt($.floor($.$$mul(this.g, 255)));
  },
  get$_bb: function() {
    return $.toInt($.floor($.$$mul(this.b, 255)));
  },
  copy$1: function(color) {
    this.r = color.get$r();
    this.g = color.get$g();
    this.b = color.get$b();
    return this;
  },
  setRGB$3: function(newR, newG, newB) {
    this.r = newR;
    this.g = newG;
    this.b = newB;
    return this;
  },
  setHex$1: function(hex) {
    var t1, t2;
    t1 = $.toInt($.floor(hex));
    t2 = $.getInterceptor$JSNumber(t1);
    this.r = $.$$div($.$$shr(t2.$and(t1, 16711680), 16), 255);
    this.g = $.$$div($.$$shr(t2.$and(t1, 65280), 8), 255);
    this.b = $.$$div(t2.$and(t1, 255), 255);
    return this;
  },
  getContextStyle$0: function() {
    return "rgb(" + $.S(this.get$_rr()) + "," + $.S(this.get$_gg()) + "," + $.S(this.get$_bb()) + ")";
  },
  Color$1: function(hex) {
    if (typeof hex === "number")
      this.setHex$1(hex);
  },
  $isColor: true
};

$$.Face4 = {"": "Object;a>,b>,c>,d>,normal>,vertexNormals>,vertexColors,vertexTangents,color>,materialIndex>,centroid>",
  Face4$7: function(a, b, c, d, normalOrVertexNormals, colorOrVertexColors, materialIndex) {
    this.normal = typeof normalOrVertexNormals === "object" && normalOrVertexNormals !== null && !!normalOrVertexNormals.$isVector3 ? normalOrVertexNormals : $.Vector3$(0, 0, 0);
    this.vertexNormals = typeof normalOrVertexNormals === "object" && normalOrVertexNormals !== null && (normalOrVertexNormals.constructor === Array || normalOrVertexNormals.$isList()) ? normalOrVertexNormals : [];
    this.color = typeof colorOrVertexColors === "object" && colorOrVertexColors !== null && !!colorOrVertexColors.$isColor ? colorOrVertexColors : $.Color$(null);
    this.vertexColors = typeof colorOrVertexColors === "object" && colorOrVertexColors !== null && (colorOrVertexColors.constructor === Array || colorOrVertexColors.$isList()) ? colorOrVertexColors : [];
    this.vertexTangents = [];
    this.materialIndex = this.materialIndex;
    this.centroid = $.Vector3$(0, 0, 0);
  },
  $isFace4: true
};

$$.Frustum = {"": "Object;planes",
  setFromMatrix$1: function(m) {
    var me, t1, me0, me1, me2, me3, me4, me5, me6, me7, me8, me9, me10, me11, me12, me13, me14, me15, t2, t3, t4, t5, i, plane;
    me = m.elements;
    t1 = $.getInterceptor$JSStringJSArray(me);
    me0 = t1.$index(me, 0);
    me1 = t1.$index(me, 1);
    me2 = t1.$index(me, 2);
    me3 = t1.$index(me, 3);
    me4 = t1.$index(me, 4);
    me5 = t1.$index(me, 5);
    me6 = t1.$index(me, 6);
    me7 = t1.$index(me, 7);
    me8 = t1.$index(me, 8);
    me9 = t1.$index(me, 9);
    me10 = t1.$index(me, 10);
    me11 = t1.$index(me, 11);
    me12 = t1.$index(me, 12);
    me13 = t1.$index(me, 13);
    me14 = t1.$index(me, 14);
    me15 = t1.$index(me, 15);
    t1 = this.planes;
    if (0 >= t1.length)
      throw $.ioore(0);
    t2 = $.getInterceptor$JSNumber(me3);
    t3 = $.getInterceptor$JSNumber(me7);
    t4 = $.getInterceptor$JSNumber(me11);
    t5 = $.getInterceptor$JSNumber(me15);
    t1[0].setValues$4(t2.$sub(me3, me0), t3.$sub(me7, me4), t4.$sub(me11, me8), t5.$sub(me15, me12));
    if (1 >= t1.length)
      throw $.ioore(1);
    t1[1].setValues$4(t2.$add(me3, me0), t3.$add(me7, me4), t4.$add(me11, me8), t5.$add(me15, me12));
    if (2 >= t1.length)
      throw $.ioore(2);
    t1[2].setValues$4(t2.$add(me3, me1), t3.$add(me7, me5), t4.$add(me11, me9), t5.$add(me15, me13));
    if (3 >= t1.length)
      throw $.ioore(3);
    t1[3].setValues$4(t2.$sub(me3, me1), t3.$sub(me7, me5), t4.$sub(me11, me9), t5.$sub(me15, me13));
    if (4 >= t1.length)
      throw $.ioore(4);
    t1[4].setValues$4(t2.$sub(me3, me2), t3.$sub(me7, me6), t4.$sub(me11, me10), t5.$sub(me15, me14));
    if (5 >= t1.length)
      throw $.ioore(5);
    t1[5].setValues$4(t2.$add(me3, me2), t3.$add(me7, me6), t4.$add(me11, me10), t5.$add(me15, me14));
    for (i = 0; i < 6; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      plane = t1[i];
      t2 = plane.get$x();
      t2 = $.$$mul(t2, t2);
      t3 = plane.get$y();
      t2 = $.$$add(t2, $.$$mul(t3, t3));
      t4 = plane.get$z();
      plane.divideScalar$1(Math.sqrt($.checkNum($.$$add(t2, $.$$mul(t4, t4)))));
    }
  },
  contains$1: function(object) {
    var matrix, me, t2, t1, i, t3, t4, t5;
    matrix = object.get$matrixWorld();
    me = matrix.get$elements();
    if (typeof me !== "string" && (typeof me !== "object" || me === null || me.constructor !== Array && !me.$isJavaScriptIndexingBehavior()))
      return this.contains$1$bailout(1, object, matrix, me);
    t2 = $.$$mul($.$$negate(object.get$geometry().get$boundingSphere().get$radius()), matrix.getMaxScaleOnAxis$0());
    if (typeof t2 !== "number")
      return this.contains$1$bailout(2, null, null, me, t2);
    for (t1 = this.planes, i = 0; i < 6; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      t3 = t1[i].get$x();
      if (12 >= me.length)
        throw $.ioore(12);
      t3 = $.$$mul(t3, me[12]);
      if (i >= t1.length)
        throw $.ioore(i);
      t4 = t1[i].get$y();
      if (13 >= me.length)
        throw $.ioore(13);
      t3 = $.$$add(t3, $.$$mul(t4, me[13]));
      if (i >= t1.length)
        throw $.ioore(i);
      t5 = t1[i].get$z();
      if (14 >= me.length)
        throw $.ioore(14);
      t3 = $.$$add(t3, $.$$mul(t5, me[14]));
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$$le($.$$add(t3, t1[i].get$w()), t2) === true)
        return false;
    }
    return true;
  },
  contains$1$bailout: function(state0, object, matrix, me, t2) {
    switch (state0) {
      case 0:
        matrix = object.get$matrixWorld();
        me = matrix.get$elements();
      case 1:
        state0 = 0;
        t2 = $.$$mul($.$$negate(object.get$geometry().get$boundingSphere().get$radius()), matrix.getMaxScaleOnAxis$0());
      case 2:
        var t1, t3, i, t4;
        state0 = 0;
        for (t1 = this.planes, t3 = $.getInterceptor$JSStringJSArray(me), i = 0; i < 6; ++i) {
          if (i >= t1.length)
            throw $.ioore(i);
          t4 = $.$$mul(t1[i].get$x(), t3.$index(me, 12));
          if (i >= t1.length)
            throw $.ioore(i);
          t4 = $.$$add(t4, $.$$mul(t1[i].get$y(), t3.$index(me, 13)));
          if (i >= t1.length)
            throw $.ioore(i);
          t4 = $.$$add(t4, $.$$mul(t1[i].get$z(), t3.$index(me, 14)));
          if (i >= t1.length)
            throw $.ioore(i);
          if ($.$$le($.$$add(t4, t1[i].get$w()), t2) === true)
            return false;
        }
        return true;
    }
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  }
};

$$.Geometry = {"": "Object;id>,name>,vertices>,materials>,faces>,faceVertexUvs>,morphTargets>,boundingSphere>",
  computeCentroids$0: function() {
    $.CONSTANT2.forEach$1(this.faces, new $.Geometry_computeCentroids_anon(this));
  },
  computeBoundingSphere$0: function() {
    var t1 = {};
    t1.radiusSq_0 = null;
    this.boundingSphere = $.BoundingSphere$(Math.sqrt($.checkNum($.CONSTANT2.reduce$2(this.vertices, 0, new $.Geometry_computeBoundingSphere_anon(t1)))));
  },
  mergeVertices$0: function() {
    var verticesMap, unique, changes, precision, il, t1, i, t2, v, key, face, t3, t4;
    verticesMap = $.makeLiteralMap([]);
    unique = [];
    changes = [];
    $.checkNum(10);
    $.checkNum(4);
    precision = Math.pow(10, 4);
    il = this.vertices.length;
    for (t1 = $.getInterceptor$JSStringJSArray(verticesMap), i = 0; i < il; ++i) {
      t2 = this.vertices;
      if (i >= t2.length)
        throw $.ioore(i);
      v = t2[i];
      key = $.Strings_join([$.toStringAsFixed($.round($.$$mul(v.get$x(), precision)), 0), $.toStringAsFixed($.round($.$$mul(v.get$y(), precision)), 0), $.toStringAsFixed($.round($.$$mul(v.get$z(), precision)), 0)], "_");
      if (t1.$index(verticesMap, key) == null) {
        t1.$indexSet(verticesMap, key, i);
        unique.push(v);
        changes.push(unique.length - 1);
      } else {
        t2 = t1.$index(verticesMap, key);
        if (t2 !== (t2 | 0))
          throw $.iae(t2);
        if (t2 < 0 || t2 >= changes.length)
          throw $.ioore(t2);
        changes.push(changes[t2]);
      }
    }
    il = this.faces.length;
    for (i = 0; i < il; ++i) {
      t1 = this.faces;
      if (i >= t1.length)
        throw $.ioore(i);
      face = t1[i];
      if (typeof face === "object" && face !== null && !!face.$isFace3) {
        t1 = face.a;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= changes.length)
          throw $.ioore(t1);
        face.a = changes[t1];
        t2 = face.b;
        if (t2 !== (t2 | 0))
          throw $.iae(t2);
        if (t2 < 0 || t2 >= changes.length)
          throw $.ioore(t2);
        face.b = changes[t2];
        t3 = face.c;
        if (t3 !== (t3 | 0))
          throw $.iae(t3);
        if (t3 < 0 || t3 >= changes.length)
          throw $.ioore(t3);
        face.c = changes[t3];
      } else if (typeof face === "object" && face !== null && !!face.$isFace4) {
        t1 = face.a;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= changes.length)
          throw $.ioore(t1);
        face.a = changes[t1];
        t2 = face.b;
        if (t2 !== (t2 | 0))
          throw $.iae(t2);
        if (t2 < 0 || t2 >= changes.length)
          throw $.ioore(t2);
        face.b = changes[t2];
        t3 = face.c;
        if (t3 !== (t3 | 0))
          throw $.iae(t3);
        if (t3 < 0 || t3 >= changes.length)
          throw $.ioore(t3);
        face.c = changes[t3];
        t4 = face.d;
        if (t4 !== (t4 | 0))
          throw $.iae(t4);
        if (t4 < 0 || t4 >= changes.length)
          throw $.ioore(t4);
        face.d = changes[t4];
      }
    }
    t1 = this.vertices.length;
    t2 = unique.length;
    this.vertices = unique;
    return t1 - t2;
  },
  get$_data: function() {
    if (this.__data == null)
      this.__data = $.makeLiteralMap([]);
    return this.__data;
  },
  $index: function(key) {
    var t1 = this.get$_data();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout2(1, key, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    return t1[key];
  },
  $$index$bailout2: function(state0, key, t1) {
    return $.$$index(t1, key);
  },
  $indexSet: function(key, value) {
    var t1 = this.get$_data();
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.$$indexSet$bailout2(1, key, value, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    t1[key] = value;
    return value;
  },
  $$indexSet$bailout2: function(state0, key, value, t1) {
    $.$$indexSet(t1, key, value);
    return value;
  }
};

$$.BoundingSphere = {"": "Object;radius>"};

$$.Projector = {"": "Object;_objectPool,_vertexPool>,_face4Pool,_face3Pool,_linePool,_particlePool,_objectCount,_vertexCount=,_face3Count,_face4Count,_lineCount,_particleCount,_object,_vertex=,_line=,_particle=,_vector3,_vector4>,_clippedVertex1PositionScreen>,_clippedVertex2PositionScreen>,_renderData>,_viewProjectionMatrix>,_modelViewProjectionMatrix>,_frustum",
  unprojectVector$2: function(vector, camera) {
    var t1;
    camera.get$projectionMatrixInverse().getInverse$1(camera.get$projectionMatrix());
    t1 = this._viewProjectionMatrix;
    t1.multiply$2(camera.get$matrixWorld(), camera.get$projectionMatrixInverse());
    t1.multiplyVector3$1(vector);
    return vector;
  },
  _projectObject$1: function(parent) {
    var t1, t2, t3, c, t4, t5;
    t1 = $.length(parent.get$children());
    if (typeof t1 !== "number")
      return this._projectObject$1$bailout(1, parent, t1);
    for (t2 = this._frustum, t3 = this._viewProjectionMatrix, c = 0; c < t1; ++c) {
      t4 = parent.get$children();
      if (typeof t4 !== "string" && (typeof t4 !== "object" || t4 === null || t4.constructor !== Array && !t4.$isJavaScriptIndexingBehavior()))
        return this._projectObject$1$bailout(2, parent, t1, t4, t3, c, t2);
      if (c >= t4.length)
        throw $.ioore(c);
      t4 = t4[c];
      if (t4.get$visible() !== true)
        continue;
      if (typeof t4 === "object" && t4 !== null && !!t4.$isLight)
        $.add(this._renderData.get$lights(), t4);
      else if (typeof t4 === "object" && t4 !== null && !!t4.$isMesh || typeof t4 === "object" && t4 !== null && !!t4.$isLine) {
        if (t4.get$frustumCulled() !== true || t2.contains$1(t4) === true) {
          this._object = this.getNextObjectInPool$0();
          this._object.set$object(t4);
          t5 = t4.get$renderDepth();
          if (!(t5 == null))
            this._object.set$z(t5);
          else {
            this._vector3.copy$1(t4.get$matrixWorld().getPosition$0());
            t3.multiplyVector3$1(this._vector3);
            t5 = this._vector3.z;
            this._object.set$z(t5);
          }
          $.add(this._renderData.get$objects(), this._object);
        }
      } else if (typeof t4 === "object" && t4 !== null && !!t4.$isSprite || typeof t4 === "object" && t4 !== null && !!t4.$isParticle) {
        this._object = this.getNextObjectInPool$0();
        this._object.set$object(t4);
        t5 = t4.get$renderDepth();
        if (!(t5 == null))
          this._object.set$z(t5);
        else {
          this._vector3.copy$1(t4.get$matrixWorld().getPosition$0());
          t3.multiplyVector3$1(this._vector3);
          t5 = this._vector3.z;
          this._object.set$z(t5);
        }
        $.add(this._renderData.get$sprites(), this._object);
      } else {
        this._object = this.getNextObjectInPool$0();
        this._object.set$object(t4);
        t5 = t4.get$renderDepth();
        if (!(t5 == null))
          this._object.set$z(t5);
        else {
          this._vector3.copy$1(t4.get$matrixWorld().getPosition$0());
          t3.multiplyVector3$1(this._vector3);
          t5 = this._vector3.z;
          this._object.set$z(t5);
        }
        $.add(this._renderData.get$objects(), this._object);
      }
      this._projectObject$1(t4);
    }
  },
  _projectObject$1$bailout: function(state0, parent, t1, t4, t3, c, t2) {
    switch (state0) {
      case 0:
        t1 = $.length(parent.get$children());
      case 1:
        state0 = 0;
        t2 = this._frustum;
        t3 = this._viewProjectionMatrix;
        c = 0;
      case 2:
        var t5;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!$.CONSTANT0.$lt(c, t1))
                  break L0;
              case 2:
                c$0: {
                  switch (state0) {
                    case 0:
                      t4 = parent.get$children();
                    case 2:
                      state0 = 0;
                      t4 = $.$$index(t4, c);
                      if (t4.get$visible() !== true)
                        break c$0;
                      if (typeof t4 === "object" && t4 !== null && !!t4.$isLight)
                        $.add(this._renderData.get$lights(), t4);
                      else if (typeof t4 === "object" && t4 !== null && !!t4.$isMesh || typeof t4 === "object" && t4 !== null && !!t4.$isLine) {
                        if (t4.get$frustumCulled() !== true || t2.contains$1(t4) === true) {
                          this._object = this.getNextObjectInPool$0();
                          this._object.set$object(t4);
                          t5 = t4.get$renderDepth();
                          if (!(t5 == null))
                            this._object.set$z(t5);
                          else {
                            this._vector3.copy$1(t4.get$matrixWorld().getPosition$0());
                            t3.multiplyVector3$1(this._vector3);
                            t5 = this._vector3.z;
                            this._object.set$z(t5);
                          }
                          $.add(this._renderData.get$objects(), this._object);
                        }
                      } else if (typeof t4 === "object" && t4 !== null && !!t4.$isSprite || typeof t4 === "object" && t4 !== null && !!t4.$isParticle) {
                        this._object = this.getNextObjectInPool$0();
                        this._object.set$object(t4);
                        t5 = t4.get$renderDepth();
                        if (!(t5 == null))
                          this._object.set$z(t5);
                        else {
                          this._vector3.copy$1(t4.get$matrixWorld().getPosition$0());
                          t3.multiplyVector3$1(this._vector3);
                          t5 = this._vector3.z;
                          this._object.set$z(t5);
                        }
                        $.add(this._renderData.get$sprites(), this._object);
                      } else {
                        this._object = this.getNextObjectInPool$0();
                        this._object.set$object(t4);
                        t5 = t4.get$renderDepth();
                        if (!(t5 == null))
                          this._object.set$z(t5);
                        else {
                          this._vector3.copy$1(t4.get$matrixWorld().getPosition$0());
                          t3.multiplyVector3$1(this._vector3);
                          t5 = this._vector3.z;
                          this._object.set$z(t5);
                        }
                        $.add(this._renderData.get$objects(), this._object);
                      }
                      this._projectObject$1(t4);
                  }
                }
                ++c;
            }
    }
  },
  projectGraph$2: function(root, sort) {
    this._objectCount = 0;
    this._renderData.set$objects([]);
    this._renderData.set$sprites([]);
    this._renderData.set$lights([]);
    this._projectObject$1(root);
    if (sort)
      $.sort(this._renderData.get$objects(), this.get$painterSort());
    return this._renderData;
  },
  projectScene$3: function(scene, camera, sort) {
    var t1, near, far, t2;
    t1 = {};
    near = camera.get$near();
    far = camera.get$far();
    t1.visible_0 = false;
    t1.v_1 = null;
    t1.vl_2 = null;
    t1.f_3 = null;
    t1.fl_4 = null;
    t1.n_5 = null;
    t1.nl_6 = null;
    t1.c_7 = null;
    t1.cl_8 = null;
    t1.u_9 = null;
    t1.ul_10 = null;
    t1.object_11 = null;
    t1.modelMatrix_12 = null;
    t1.rotationMatrix_13 = null;
    t1.geometry_14 = null;
    t1.geometryMaterials_15 = null;
    t1.vertices_16 = null;
    t1.normal_17 = null;
    t1.faces_18 = null;
    t1.face_19 = null;
    t1._face_20 = null;
    t1.faceVertexNormals_21 = null;
    t1.faceVertexUvs_22 = null;
    t1.v1_23 = null;
    t1.v2_24 = null;
    t1.v3_25 = null;
    t1.v4_26 = null;
    t1.isFaceMaterial_27 = null;
    t1.material_28 = null;
    t1.side_29 = null;
    this._face3Count = 0;
    this._face4Count = 0;
    this._lineCount = 0;
    this._particleCount = 0;
    this._renderData.set$elements([]);
    scene.updateMatrixWorld$0();
    if (camera.get$parent() == null)
      camera.updateMatrixWorld$0();
    camera.get$matrixWorldInverse().getInverse$1(camera.get$matrixWorld());
    t2 = this._viewProjectionMatrix;
    t2.multiply$2(camera.get$projectionMatrix(), camera.get$matrixWorldInverse());
    this._frustum.setFromMatrix$1(t2);
    this._renderData = this.projectGraph$2(scene, false);
    $.forEach(this._renderData.get$objects(), new $.Projector_projectScene_anon(t1, this, near, far));
    $.forEach(this._renderData.get$sprites(), new $.Projector_projectScene_anon0(t1, this, camera));
    if (sort)
      $.sort(this._renderData.get$elements(), this.get$painterSort());
    return this._renderData;
  },
  getNextObjectInPool$0: function() {
    var t1, t3, t4, object;
    t1 = this._objectCount;
    t3 = this._objectPool;
    t4 = t3.length;
    if (typeof t1 !== "number")
      return this.getNextObjectInPool$0$bailout(1, t1);
    if (t1 < t4) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      object = !(t3[t1] == null) ? t3[t1] : $.RenderableObject$();
    } else {
      object = $.RenderableObject$();
      t3.push(object);
    }
    t1 = this._objectCount;
    if (typeof t1 !== "number")
      return this.getNextObjectInPool$0$bailout(2, t1, object);
    this._objectCount = t1 + 1;
    return object;
  },
  getNextObjectInPool$0$bailout: function(state0, t1, object) {
    switch (state0) {
      case 0:
        t1 = this._objectCount;
      case 1:
        state0 = 0;
        t3 = this._objectPool;
        if ($.$$lt(t1, t3.length) === true) {
          t1 = this._objectCount;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          object = !(t3[t1] == null) ? t3[t1] : $.RenderableObject$();
        } else {
          object = $.RenderableObject$();
          t3.push(object);
        }
        t1 = this._objectCount;
      case 2:
        var t3;
        state0 = 0;
        this._objectCount = $.$$add(t1, 1);
        return object;
    }
  },
  getNextVertexInPool$0: function() {
    var t1, t3, t4, vertex;
    t1 = this._vertexCount;
    t3 = this._vertexPool;
    t4 = t3.length;
    if (typeof t1 !== "number")
      return this.getNextVertexInPool$0$bailout(1, t1);
    if (t1 < t4) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      vertex = !(t3[t1] == null) ? t3[t1] : $.RenderableVertex$();
    } else {
      vertex = $.RenderableVertex$();
      t3.push(vertex);
    }
    t1 = this._vertexCount;
    if (typeof t1 !== "number")
      return this.getNextVertexInPool$0$bailout(2, t1, vertex);
    this._vertexCount = t1 + 1;
    return vertex;
  },
  getNextVertexInPool$0$bailout: function(state0, t1, vertex) {
    switch (state0) {
      case 0:
        t1 = this._vertexCount;
      case 1:
        state0 = 0;
        t3 = this._vertexPool;
        if ($.$$lt(t1, t3.length) === true) {
          t1 = this._vertexCount;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          vertex = !(t3[t1] == null) ? t3[t1] : $.RenderableVertex$();
        } else {
          vertex = $.RenderableVertex$();
          t3.push(vertex);
        }
        t1 = this._vertexCount;
      case 2:
        var t3;
        state0 = 0;
        this._vertexCount = $.$$add(t1, 1);
        return vertex;
    }
  },
  getNextFace3InPool$0: function() {
    var t1, t3, t4, face;
    t1 = this._face3Count;
    t3 = this._face3Pool;
    t4 = t3.length;
    if (typeof t1 !== "number")
      return this.getNextFace3InPool$0$bailout(1, t1);
    if (t1 < t4) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace3$();
    } else {
      face = $.RenderableFace3$();
      t3.push(face);
    }
    t1 = this._face3Count;
    if (typeof t1 !== "number")
      return this.getNextFace3InPool$0$bailout(2, t1, face);
    this._face3Count = t1 + 1;
    return face;
  },
  getNextFace3InPool$0$bailout: function(state0, t1, face) {
    switch (state0) {
      case 0:
        t1 = this._face3Count;
      case 1:
        state0 = 0;
        t3 = this._face3Pool;
        if ($.$$lt(t1, t3.length) === true) {
          t1 = this._face3Count;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace3$();
        } else {
          face = $.RenderableFace3$();
          t3.push(face);
        }
        t1 = this._face3Count;
      case 2:
        var t3;
        state0 = 0;
        this._face3Count = $.$$add(t1, 1);
        return face;
    }
  },
  getNextFace4InPool$0: function() {
    var t1, t3, t4, face;
    t1 = this._face4Count;
    t3 = this._face4Pool;
    t4 = t3.length;
    if (typeof t1 !== "number")
      return this.getNextFace4InPool$0$bailout(1, t1);
    if (t1 < t4) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace4$();
    } else {
      face = $.RenderableFace4$();
      t3.push(face);
    }
    t1 = this._face4Count;
    if (typeof t1 !== "number")
      return this.getNextFace4InPool$0$bailout(2, t1, face);
    this._face4Count = t1 + 1;
    return face;
  },
  getNextFace4InPool$0$bailout: function(state0, t1, face) {
    switch (state0) {
      case 0:
        t1 = this._face4Count;
      case 1:
        state0 = 0;
        t3 = this._face4Pool;
        if ($.$$lt(t1, t3.length) === true) {
          t1 = this._face4Count;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace4$();
        } else {
          face = $.RenderableFace4$();
          t3.push(face);
        }
        t1 = this._face4Count;
      case 2:
        var t3;
        state0 = 0;
        this._face4Count = $.$$add(t1, 1);
        return face;
    }
  },
  getNextLineInPool$0: function() {
    var t1, t3, t4, line;
    t1 = this._lineCount;
    t3 = this._linePool;
    t4 = t3.length;
    if (typeof t1 !== "number")
      return this.getNextLineInPool$0$bailout(1, t1);
    if (t1 < t4) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      line = !(t3[t1] == null) ? t3[t1] : $.RenderableLine$();
    } else {
      line = $.RenderableLine$();
      t3.push(line);
    }
    t1 = this._lineCount;
    if (typeof t1 !== "number")
      return this.getNextLineInPool$0$bailout(2, t1, line);
    this._lineCount = t1 + 1;
    return line;
  },
  getNextLineInPool$0$bailout: function(state0, t1, line) {
    switch (state0) {
      case 0:
        t1 = this._lineCount;
      case 1:
        state0 = 0;
        t3 = this._linePool;
        if ($.$$lt(t1, t3.length) === true) {
          t1 = this._lineCount;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          line = !(t3[t1] == null) ? t3[t1] : $.RenderableLine$();
        } else {
          line = $.RenderableLine$();
          t3.push(line);
        }
        t1 = this._lineCount;
      case 2:
        var t3;
        state0 = 0;
        this._lineCount = $.$$add(t1, 1);
        return line;
    }
  },
  getNextParticleInPool$0: function() {
    var t1, t2, particle;
    t1 = this._particleCount;
    t2 = this._particlePool;
    if ($.$$lt(t1, t2.length) === true) {
      t1 = this._particleCount;
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t2.length)
        throw $.ioore(t1);
      particle = !(t2[t1] == null) ? t2[t1] : $.RenderableParticle$();
    } else {
      particle = $.RenderableParticle$();
      t2.push(particle);
    }
    this._particleCount = $.$$add(this._particleCount, 1);
    return particle;
  },
  painterSort$2: function(a, b) {
    return $.compareTo(b.get$z(), a.get$z());
  },
  get$painterSort: function() {
    return new $.BoundClosure2(this, "painterSort$2");
  },
  clipLine$2: function(s1, s2) {
    var t1, t3, t5, t6, t8, t10, t2, alpha1, alpha2;
    t1 = s1.get$z();
    t3 = s1.get$w();
    if (typeof t1 !== "number")
      return this.clipLine$2$bailout(1, s1, s2, t1);
    if (typeof t3 !== "number")
      return this.clipLine$2$bailout(2, s1, s2, t1, t3);
    t5 = t1 + t3;
    t6 = s2.get$z();
    t8 = s2.get$w();
    if (typeof t6 !== "number")
      return this.clipLine$2$bailout(3, s1, s2, t6, t5);
    if (typeof t8 !== "number")
      return this.clipLine$2$bailout(4, s1, s2, t6, t5, t8);
    t10 = t6 + t8;
    t3 = -t1 + t3;
    t8 = -t6 + t8;
    if (t5 >= 0 && t10 >= 0 && t3 >= 0 && t8 >= 0)
      return true;
    else {
      t1 = t5 < 0;
      if (!(t1 && t10 < 0))
        t2 = t3 < 0 && t8 < 0;
      else
        t2 = true;
      if (t2)
        return false;
      else {
        if (t1) {
          alpha1 = $.max(0, t5 / (t5 - t10));
          alpha2 = 1;
        } else {
          if (t10 < 0) {
            alpha2 = $.min(1, t5 / (t5 - t10));
            if (typeof alpha2 !== "number")
              return this.clipLine$2$bailout(9, s1, s2, null, null, null, t3, t8, alpha2);
          } else
            alpha2 = 1;
          alpha1 = 0;
        }
        if (t3 < 0)
          alpha1 = $.max(alpha1, t3 / (t3 - t8));
        else if (t8 < 0) {
          alpha2 = $.min(alpha2, t3 / (t3 - t8));
          if (typeof alpha2 !== "number")
            return this.clipLine$2$bailout(10, s1, s2, null, null, null, null, null, alpha2, alpha1);
        }
        if (alpha2 < alpha1)
          return false;
        else {
          s1.lerpSelf$2(s2, alpha1);
          s2.lerpSelf$2(s1, 1 - alpha2);
          return true;
        }
      }
    }
  },
  clipLine$2$bailout: function(state0, s1, s2, t1, t3, t6, t9, t12, alpha2, alpha1) {
    switch (state0) {
      case 0:
        t1 = s1.get$z();
      case 1:
        state0 = 0;
        t3 = s1.get$w();
      case 2:
        state0 = 0;
        t3 = $.$$add(t1, t3);
        t1 = s2.get$z();
      case 3:
        state0 = 0;
        t6 = s2.get$w();
      case 4:
        state0 = 0;
        t6 = $.$$add(t1, t6);
        t1 = s1.get$z();
      case 5:
        state0 = 0;
        t1 = $.$$negate(t1);
        t9 = s1.get$w();
      case 6:
        state0 = 0;
        t9 = $.$$add(t1, t9);
        t1 = s2.get$z();
      case 7:
        state0 = 0;
        t1 = $.$$negate(t1);
        t12 = s2.get$w();
      case 8:
        state0 = 0;
        t12 = $.$$add(t1, t12);
        t1 = $.getInterceptor$JSNumber(t3);
      default:
        var t2;
        if (state0 === 0 && t1.$ge(t3, 0) === true && $.$$ge(t6, 0) === true && $.$$ge(t9, 0) === true && $.$$ge(t12, 0) === true)
          return true;
        else
          switch (state0) {
            case 0:
              if (!(t1.$lt(t3, 0) === true && $.$$lt(t6, 0) === true))
                t2 = $.$$lt(t9, 0) === true && $.$$lt(t12, 0) === true;
              else
                t2 = true;
            default:
              if (state0 === 0 && t2)
                return false;
              else
                switch (state0) {
                  case 0:
                  case 9:
                    if (state0 === 0 && t1.$lt(t3, 0) === true) {
                      alpha1 = $.max(0, t1.$div(t3, t1.$sub(t3, t6)));
                      alpha2 = 1;
                    } else
                      switch (state0) {
                        case 0:
                        case 9:
                          if (state0 === 9 || state0 === 0 && $.$$lt(t6, 0) === true)
                            switch (state0) {
                              case 0:
                                alpha2 = $.min(1, t1.$div(t3, t1.$sub(t3, t6)));
                              case 9:
                                state0 = 0;
                            }
                          else
                            alpha2 = 1;
                          alpha1 = 0;
                      }
                    t1 = $.getInterceptor$JSNumber(t9);
                  case 10:
                    if (state0 === 0 && t1.$lt(t9, 0) === true)
                      alpha1 = $.max(alpha1, t1.$div(t9, t1.$sub(t9, t12)));
                    else
                      switch (state0) {
                        case 0:
                        case 10:
                          if (state0 === 10 || state0 === 0 && $.$$lt(t12, 0) === true)
                            switch (state0) {
                              case 0:
                                alpha2 = $.min(alpha2, t1.$div(t9, t1.$sub(t9, t12)));
                              case 10:
                                state0 = 0;
                            }
                      }
                    if ($.$$lt(alpha2, alpha1) === true)
                      return false;
                    else {
                      s1.lerpSelf$2(s2, alpha1);
                      if (typeof alpha2 !== "number")
                        throw $.iae(alpha2);
                      s2.lerpSelf$2(s1, 1 - alpha2);
                      return true;
                    }
                }
          }
    }
  }
};

$$.ProjectorRenderData = {"": "Object;objects=,sprites=,lights=,elements="};

$$.Ray = {"": "Object;origin,direction,near>,far>,_v0,_v1,_v2,precision",
  _distanceFromIntersection$3: function(origin, direction, position) {
    var v0, v1, v2, dot;
    v0 = this._v0;
    v1 = this._v1;
    v2 = this._v2;
    v0.sub$2(position, origin);
    dot = v0.dot$1(direction);
    return position.distanceTo$1(v1.add$2(origin, v2.copy$1(direction).multiplyScalar$1(dot)));
  },
  _pointInFace3$4: function(p, a, b, c) {
    var v0, v1, v2, dot00, dot01, dot02, dot11, dot12, invDenom, t6, t7;
    v0 = this._v0;
    v1 = this._v1;
    v2 = this._v2;
    v0.sub$2(c, a);
    v1.sub$2(b, a);
    v2.sub$2(p, a);
    dot00 = v0.dot$1(v0);
    if (typeof dot00 !== "number")
      return this._pointInFace3$4$bailout(1, v1, v2, dot00, v0);
    dot01 = v0.dot$1(v1);
    if (typeof dot01 !== "number")
      return this._pointInFace3$4$bailout(2, v1, v2, dot00, v0, dot01);
    dot02 = v0.dot$1(v2);
    if (typeof dot02 !== "number")
      return this._pointInFace3$4$bailout(3, v1, v2, dot00, null, dot01, dot02);
    dot11 = v1.dot$1(v1);
    if (typeof dot11 !== "number")
      return this._pointInFace3$4$bailout(4, v1, v2, dot00, null, dot01, dot02, dot11);
    dot12 = v1.dot$1(v2);
    if (typeof dot12 !== "number")
      return this._pointInFace3$4$bailout(5, null, null, dot00, null, dot01, dot02, dot11, dot12);
    invDenom = 1 / (dot00 * dot11 - dot01 * dot01);
    t6 = (dot11 * dot02 - dot01 * dot12) * invDenom;
    t7 = (dot00 * dot12 - dot01 * dot02) * invDenom;
    return t6 >= 0 && t7 >= 0 && t6 + t7 < 1;
  },
  _pointInFace3$4$bailout: function(state0, v1, v2, dot00, v0, dot01, dot02, dot11, dot12, t6, t7, invDenom) {
    switch (state0) {
      case 0:
        v0 = this._v0;
        v1 = this._v1;
        v2 = this._v2;
        v0.sub$2(c, a);
        v1.sub$2(b, a);
        v2.sub$2(p, a);
        dot00 = v0.dot$1(v0);
      case 1:
        state0 = 0;
        dot01 = v0.dot$1(v1);
      case 2:
        state0 = 0;
        dot02 = v0.dot$1(v2);
      case 3:
        state0 = 0;
        dot11 = v1.dot$1(v1);
      case 4:
        state0 = 0;
        dot12 = v1.dot$1(v2);
      case 5:
        state0 = 0;
        t6 = $.getInterceptor$JSNumber(dot00);
        t7 = $.getInterceptor$JSNumber(dot01);
        t8 = $.$$sub(t6.$mul(dot00, dot11), t7.$mul(dot01, dot01));
        if (typeof t8 !== "number")
          throw $.iae(t8);
        invDenom = 1 / t8;
      case 6:
        var t8, t9, t10, t1;
        state0 = 0;
        t9 = $.$$mul($.$$sub($.$$mul(dot11, dot02), t7.$mul(dot01, dot12)), invDenom);
        t10 = $.$$mul($.$$sub(t6.$mul(dot00, dot12), t7.$mul(dot01, dot02)), invDenom);
        t1 = $.getInterceptor$JSNumber(t9);
        return t1.$ge(t9, 0) === true && $.$$ge(t10, 0) === true && $.$$lt(t1.$add(t9, t10), 1) === true;
    }
  },
  intersectObject$2$recursive: function(object, recursive) {
    var a, b, c, d, originCopy, directionCopy, vector, normal, intersectPoint, intersects, distance, t1, t2, objMatrix, scale, vertices, geometryMaterials, t4, isFaceMaterial, side, t5, t6, dot, objMatrix0, scalar, intersect, f, t3, material, vector0, normal0, a0, b0, t7, c0, t8, d0;
    a = $.Vector3$(0, 0, 0);
    b = $.Vector3$(0, 0, 0);
    c = $.Vector3$(0, 0, 0);
    d = $.Vector3$(0, 0, 0);
    originCopy = $.Vector3$(0, 0, 0);
    directionCopy = $.Vector3$(0, 0, 0);
    vector = $.Vector3$(0, 0, 0);
    normal = $.Vector3$(0, 0, 0);
    intersectPoint = $.Vector3$(0, 0, 0);
    intersects = [];
    $.length(object.get$children());
    if (recursive === true)
      $.forEach(object.get$children(), new $.Ray_intersectObject_anon(this, intersects));
    if (typeof object === "object" && object !== null && !!object.$isParticle) {
      distance = this._distanceFromIntersection$3(this.origin, this.direction, object.matrixWorld.getPosition$0());
      if ($.$$gt(distance, object.scale.x) === true)
        return [];
      intersects.push($.Intersect$(distance, null, object, object.position));
    } else if (typeof object === "object" && object !== null && !!object.$isMesh) {
      t1 = this.origin;
      t2 = this.direction;
      objMatrix = object.matrixWorld;
      distance = this._distanceFromIntersection$3(t1, t2, objMatrix.getPosition$0());
      if ($.Frustum____v1 == null)
        $.Frustum____v1 = $.Vector3$(0, 0, 0);
      scale = $.Frustum____v1.setValues$3($.length0(objMatrix.getColumnX$0()), $.length0(objMatrix.getColumnY$0()), $.length0(objMatrix.getColumnZ$0()));
      t1 = object.geometry;
      if ($.$$gt(distance, $.$$mul(t1.get$boundingSphere().get$radius(), $.max(scale.get$x(), $.max(scale.get$y(), scale.get$z())))) === true)
        return intersects;
      vertices = t1.get$vertices();
      if (typeof vertices !== "string" && (typeof vertices !== "object" || vertices === null || vertices.constructor !== Array && !vertices.$isJavaScriptIndexingBehavior()))
        return this.intersectObject$2$recursive$bailout(1, object, a, b, c, d, originCopy, directionCopy, vector, vertices, normal, intersectPoint, intersects, objMatrix, t1);
      geometryMaterials = t1.get$materials();
      if (typeof geometryMaterials !== "string" && (typeof geometryMaterials !== "object" || geometryMaterials === null || geometryMaterials.constructor !== Array && !geometryMaterials.$isJavaScriptIndexingBehavior()))
        return this.intersectObject$2$recursive$bailout(2, object, a, b, c, d, originCopy, directionCopy, vector, vertices, normal, intersectPoint, intersects, objMatrix, t1, geometryMaterials);
      t4 = object.material;
      isFaceMaterial = typeof t4 === "object" && t4 !== null && !!t4.$isMeshFaceMaterial;
      side = t4.get$side();
      if (typeof side !== "number")
        return this.intersectObject$2$recursive$bailout(3, object, a, b, c, d, originCopy, directionCopy, vector, vertices, normal, intersectPoint, intersects, objMatrix, t1, geometryMaterials, side, isFaceMaterial);
      t5 = object.matrixRotationWorld;
      t5.extractRotation$1(objMatrix);
      t6 = $.length(t1.get$faces());
      if (typeof t6 !== "number")
        return this.intersectObject$2$recursive$bailout(4, object, a, b, c, d, originCopy, directionCopy, vector, vertices, normal, intersectPoint, intersects, objMatrix, t1, geometryMaterials, side, isFaceMaterial, t5, t6);
      for (dot = null, objMatrix0 = null, scalar = null, intersect = null, f = 0; f < t6; ++f) {
        t2 = $.$$index(t1.get$faces(), f);
        if (isFaceMaterial) {
          t3 = t2.get$materialIndex();
          if (t3 !== (t3 | 0))
            throw $.iae(t3);
          if (t3 < 0 || t3 >= geometryMaterials.length)
            throw $.ioore(t3);
          material = geometryMaterials[t3];
        } else
          material = object.material;
        if (material == null)
          continue;
        side = material.get$side();
        originCopy.copy$1(this.origin);
        directionCopy.copy$1(this.direction);
        vector0 = objMatrix.multiplyVector3$1(vector.copy$1(t2.get$centroid())).subSelf$1(originCopy);
        normal0 = t5.multiplyVector3$1(normal.copy$1(t2.get$normal()));
        dot = directionCopy.dot$1(normal0);
        t3 = $.getInterceptor$JSNumber(dot);
        if ($.$$lt(t3.abs$0(dot), 0.0001) === true) {
          normal = normal0;
          vector = vector0;
          objMatrix0 = objMatrix;
          continue;
        }
        scalar = $.$$div(normal0.dot$1(vector0), dot);
        if ($.$$lt(scalar, 0) === true) {
          normal = normal0;
          vector = vector0;
          objMatrix0 = objMatrix;
          continue;
        }
        t4 = $.getInterceptor(side);
        if (t4.$eq(side, 2) !== true)
          t3 = (t4.$eq(side, 0) === true ? t3.$lt(dot, 0) : t3.$gt(dot, 0)) === true;
        else
          t3 = true;
        if (t3) {
          intersectPoint.add$2(originCopy, directionCopy.multiplyScalar$1(scalar));
          if (typeof t2 === "object" && t2 !== null && !!t2.$isFace3) {
            t3 = t2.a;
            if (t3 !== (t3 | 0))
              throw $.iae(t3);
            if (t3 < 0 || t3 >= vertices.length)
              throw $.ioore(t3);
            a0 = objMatrix.multiplyVector3$1(a.copy$1(vertices[t3]));
            t4 = t2.b;
            if (t4 !== (t4 | 0))
              throw $.iae(t4);
            if (t4 < 0 || t4 >= vertices.length)
              throw $.ioore(t4);
            b0 = objMatrix.multiplyVector3$1(b.copy$1(vertices[t4]));
            t7 = t2.c;
            if (t7 !== (t7 | 0))
              throw $.iae(t7);
            if (t7 < 0 || t7 >= vertices.length)
              throw $.ioore(t7);
            c0 = objMatrix.multiplyVector3$1(c.copy$1(vertices[t7]));
            if (this._pointInFace3$4(intersectPoint, a0, b0, c0) === true) {
              intersect = $.Intersect$(originCopy.distanceTo$1(intersectPoint), t2, object, intersectPoint.clone$0());
              intersects.push(intersect);
            }
            c = c0;
            b = b0;
            a = a0;
          } else if (typeof t2 === "object" && t2 !== null && !!t2.$isFace4) {
            t3 = t2.a;
            if (t3 !== (t3 | 0))
              throw $.iae(t3);
            if (t3 < 0 || t3 >= vertices.length)
              throw $.ioore(t3);
            a0 = objMatrix.multiplyVector3$1(a.copy$1(vertices[t3]));
            t4 = t2.b;
            if (t4 !== (t4 | 0))
              throw $.iae(t4);
            if (t4 < 0 || t4 >= vertices.length)
              throw $.ioore(t4);
            b0 = objMatrix.multiplyVector3$1(b.copy$1(vertices[t4]));
            t7 = t2.c;
            if (t7 !== (t7 | 0))
              throw $.iae(t7);
            if (t7 < 0 || t7 >= vertices.length)
              throw $.ioore(t7);
            c0 = objMatrix.multiplyVector3$1(c.copy$1(vertices[t7]));
            t8 = t2.d;
            if (t8 !== (t8 | 0))
              throw $.iae(t8);
            if (t8 < 0 || t8 >= vertices.length)
              throw $.ioore(t8);
            d0 = objMatrix.multiplyVector3$1(d.copy$1(vertices[t8]));
            if (this._pointInFace3$4(intersectPoint, a0, b0, d0) === true || this._pointInFace3$4(intersectPoint, b0, c0, d0) === true) {
              intersect = $.Intersect$(originCopy.distanceTo$1(intersectPoint), t2, object, intersectPoint.clone$0());
              intersects.push(intersect);
            }
            d = d0;
            c = c0;
            b = b0;
            a = a0;
          }
        }
        normal = normal0;
        vector = vector0;
        objMatrix0 = objMatrix;
      }
    }
    return intersects;
  },
  intersectObject$2$recursive$bailout: function(state0, object, a, b, c, d, originCopy, directionCopy, vector, vertices, normal, intersectPoint, intersects, objMatrix, t1, geometryMaterials, side, isFaceMaterial, t5, t6) {
    switch (state0) {
      case 0:
        a = $.Vector3$(0, 0, 0);
        b = $.Vector3$(0, 0, 0);
        c = $.Vector3$(0, 0, 0);
        d = $.Vector3$(0, 0, 0);
        originCopy = $.Vector3$(0, 0, 0);
        directionCopy = $.Vector3$(0, 0, 0);
        vector = $.Vector3$(0, 0, 0);
        normal = $.Vector3$(0, 0, 0);
        intersectPoint = $.Vector3$(0, 0, 0);
        intersects = [];
        $.length(object.get$children());
        if (recursive === true)
          $.forEach(object.get$children(), new $.Ray_intersectObject_anon(this, intersects));
      default:
        var distance, t2, scale, t4, t3, dot, objMatrix0, scalar, intersect, f, material, vector0, normal0, t7, t8, a0, b0, c0, d0;
        if (state0 === 0 && typeof object === "object" && object !== null && !!object.$isParticle) {
          distance = this._distanceFromIntersection$3(this.origin, this.direction, object.matrixWorld.getPosition$0());
          if ($.$$gt(distance, object.scale.x) === true)
            return [];
          intersects.push($.Intersect$(distance, null, object, object.position));
        } else
          switch (state0) {
            case 0:
            default:
              if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof object === "object" && object !== null && !!object.$isMesh)
                switch (state0) {
                  case 0:
                    t1 = this.origin;
                    t2 = this.direction;
                    objMatrix = object.matrixWorld;
                    distance = this._distanceFromIntersection$3(t1, t2, objMatrix.getPosition$0());
                    if ($.Frustum____v1 == null)
                      $.Frustum____v1 = $.Vector3$(0, 0, 0);
                    scale = $.Frustum____v1.setValues$3($.length0(objMatrix.getColumnX$0()), $.length0(objMatrix.getColumnY$0()), $.length0(objMatrix.getColumnZ$0()));
                    t1 = object.geometry;
                    if ($.$$gt(distance, $.$$mul(t1.get$boundingSphere().get$radius(), $.max(scale.get$x(), $.max(scale.get$y(), scale.get$z())))) === true)
                      return intersects;
                    vertices = t1.get$vertices();
                  case 1:
                    state0 = 0;
                    geometryMaterials = t1.get$materials();
                  case 2:
                    state0 = 0;
                    t4 = object.material;
                    isFaceMaterial = typeof t4 === "object" && t4 !== null && !!t4.$isMeshFaceMaterial;
                    side = t4.get$side();
                  case 3:
                    state0 = 0;
                    t5 = object.matrixRotationWorld;
                    t5.extractRotation$1(objMatrix);
                    t6 = $.length(t1.get$faces());
                  case 4:
                    state0 = 0;
                    for (t2 = $.getInterceptor$JSStringJSArray(geometryMaterials), t3 = $.getInterceptor$JSStringJSArray(vertices), dot = null, objMatrix0 = null, scalar = null, intersect = null, f = 0; $.CONSTANT0.$lt(f, t6); ++f) {
                      t4 = $.$$index(t1.get$faces(), f);
                      material = isFaceMaterial ? t2.$index(geometryMaterials, t4.get$materialIndex()) : object.material;
                      if (material == null)
                        continue;
                      side = material.get$side();
                      originCopy.copy$1(this.origin);
                      directionCopy.copy$1(this.direction);
                      vector0 = objMatrix.multiplyVector3$1(vector.copy$1(t4.get$centroid())).subSelf$1(originCopy);
                      normal0 = t5.multiplyVector3$1(normal.copy$1(t4.get$normal()));
                      dot = directionCopy.dot$1(normal0);
                      t7 = $.getInterceptor$JSNumber(dot);
                      if ($.$$lt(t7.abs$0(dot), 0.0001) === true) {
                        normal = normal0;
                        vector = vector0;
                        objMatrix0 = objMatrix;
                        continue;
                      }
                      scalar = $.$$div(normal0.dot$1(vector0), dot);
                      if ($.$$lt(scalar, 0) === true) {
                        normal = normal0;
                        vector = vector0;
                        objMatrix0 = objMatrix;
                        continue;
                      }
                      t8 = $.getInterceptor(side);
                      if (t8.$eq(side, 2) !== true)
                        t7 = (t8.$eq(side, 0) === true ? t7.$lt(dot, 0) : t7.$gt(dot, 0)) === true;
                      else
                        t7 = true;
                      if (t7) {
                        intersectPoint.add$2(originCopy, directionCopy.multiplyScalar$1(scalar));
                        if (typeof t4 === "object" && t4 !== null && !!t4.$isFace3) {
                          a0 = objMatrix.multiplyVector3$1(a.copy$1(t3.$index(vertices, t4.a)));
                          b0 = objMatrix.multiplyVector3$1(b.copy$1(t3.$index(vertices, t4.b)));
                          c0 = objMatrix.multiplyVector3$1(c.copy$1(t3.$index(vertices, t4.c)));
                          if (this._pointInFace3$4(intersectPoint, a0, b0, c0) === true) {
                            intersect = $.Intersect$(originCopy.distanceTo$1(intersectPoint), t4, object, intersectPoint.clone$0());
                            intersects.push(intersect);
                          }
                          c = c0;
                          b = b0;
                          a = a0;
                        } else if (typeof t4 === "object" && t4 !== null && !!t4.$isFace4) {
                          a0 = objMatrix.multiplyVector3$1(a.copy$1(t3.$index(vertices, t4.a)));
                          b0 = objMatrix.multiplyVector3$1(b.copy$1(t3.$index(vertices, t4.b)));
                          c0 = objMatrix.multiplyVector3$1(c.copy$1(t3.$index(vertices, t4.c)));
                          d0 = objMatrix.multiplyVector3$1(d.copy$1(t3.$index(vertices, t4.d)));
                          if (this._pointInFace3$4(intersectPoint, a0, b0, d0) === true || this._pointInFace3$4(intersectPoint, b0, c0, d0) === true) {
                            intersect = $.Intersect$(originCopy.distanceTo$1(intersectPoint), t4, object, intersectPoint.clone$0());
                            intersects.push(intersect);
                          }
                          d = d0;
                          c = c0;
                          b = b0;
                          a = a0;
                        }
                      }
                      normal = normal0;
                      vector = vector0;
                      objMatrix0 = objMatrix;
                    }
                }
          }
        return intersects;
    }
  },
  intersectObject$1: function(object) {
    return this.intersectObject$2$recursive(object, false);
  },
  intersectObjects$1: function(objects) {
    var t1, intersects;
    t1 = $.getInterceptor$JSStringJSArray(objects);
    t1.get$length(objects);
    intersects = [];
    t1.forEach$1(objects, new $.Ray_intersectObjects_anon(this, intersects));
    $.CONSTANT2.sort$1(intersects, new $.Ray_intersectObjects_anon0());
    return intersects;
  },
  Ray$4: function(origin, direction, near, far) {
    if (this.origin == null)
      this.origin = $.Vector3$(0, 0, 0);
    if (this.direction == null)
      this.direction = $.Vector3$(0, 0, 0);
  }
};

$$.Intersect = {"": "Object;distance>,point>,face,object="};

$$.Vector2 = {"": "Object;x=,y=",
  copy$1: function(v) {
    this.x = v.get$x();
    this.y = v.get$y();
    return this;
  },
  add$2: function(v1, v2) {
    this.x = $.$$add(v1.get$x(), v2.get$x());
    this.y = $.$$add(v1.get$y(), v2.get$y());
    return this;
  },
  addSelf$1: function(v) {
    this.x = $.$$add(this.x, v.get$x());
    this.y = $.$$add(this.y, v.get$y());
    return this;
  },
  sub$2: function(v1, v2) {
    this.x = $.$$sub(v1.get$x(), v2.get$x());
    this.y = $.$$sub(v1.get$y(), v2.get$y());
    return this;
  },
  subSelf$1: function(v) {
    var t1, t3, t5, t7;
    t1 = this.x;
    t3 = v.x;
    if (typeof t1 !== "number")
      return this.subSelf$1$bailout1(1, v, t1);
    if (typeof t3 !== "number")
      return this.subSelf$1$bailout1(2, v, t1, t3);
    this.x = t1 - t3;
    t5 = this.y;
    t7 = v.y;
    if (typeof t5 !== "number")
      return this.subSelf$1$bailout1(3, v, null, null, t5);
    if (typeof t7 !== "number")
      return this.subSelf$1$bailout1(4, null, null, null, t5, t7);
    this.y = t5 - t7;
    return this;
  },
  subSelf$1$bailout1: function(state0, v, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = v.x;
      case 2:
        state0 = 0;
        this.x = $.$$sub(t1, t3);
        t5 = this.y;
      case 3:
        state0 = 0;
        t7 = v.y;
      case 4:
        state0 = 0;
        this.y = $.$$sub(t5, t7);
        return this;
    }
  },
  multiplyScalar$1: function(s) {
    this.x = $.$$mul(this.x, s);
    this.y = $.$$mul(this.y, s);
    return this;
  },
  divideScalar$1: function(s) {
    var t1, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.divideScalar$1$bailout(1, s, t1);
    this.x = t1 / s;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.divideScalar$1$bailout(2, s, null, t3);
    this.y = t3 / s;
    return this;
  },
  divideScalar$1$bailout: function(state0, s, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        this.x = $.$$div(t1, s);
        t3 = this.y;
      case 2:
        state0 = 0;
        this.y = $.$$div(t3, s);
        return this;
    }
  },
  negate$0: function() {
    var t1, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.negate$0$bailout1(1, t1);
    this.x = t1 * -1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.negate$0$bailout1(2, null, t3);
    this.y = t3 * -1;
    return this;
  },
  negate$0$bailout1: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        this.x = $.$$mul(t1, -1);
        t3 = this.y;
      case 2:
        state0 = 0;
        this.y = $.$$mul(t3, -1);
        return this;
    }
  },
  dot$1: function(v) {
    var t1, t3, t6;
    t1 = this.x;
    t3 = v.get$x();
    if (typeof t1 !== "number")
      return this.dot$1$bailout1(1, v, t1);
    if (typeof t3 !== "number")
      return this.dot$1$bailout1(2, v, t1, t3);
    t3 = t1 * t3;
    t1 = this.y;
    t6 = v.get$y();
    if (typeof t1 !== "number")
      return this.dot$1$bailout1(3, v, t1, t3);
    if (typeof t6 !== "number")
      return this.dot$1$bailout1(4, null, t1, t3, t6);
    return t3 + t1 * t6;
  },
  dot$1$bailout1: function(state0, v, t1, t3, t6) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = v.get$x();
      case 2:
        state0 = 0;
        t3 = $.$$mul(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t6 = v.get$y();
      case 4:
        state0 = 0;
        return $.$$add(t3, $.$$mul(t1, t6));
    }
  },
  lengthSq$0: function() {
    var t1, t2;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    return $.$$add(t1, $.$$mul(t2, t2));
  },
  length$0: function() {
    var t1, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.length$0$bailout2(1, t1);
    t1 *= t1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.length$0$bailout2(2, t1, t3);
    return Math.sqrt($.checkNum(t1 + t3 * t3));
  },
  length$0$bailout2: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t1 = $.$$mul(t1, t1);
        t3 = this.y;
      case 2:
        state0 = 0;
        return Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t3, t3))));
    }
  },
  get$length: function() {
    return new $.BoundClosure3(this, "length$0");
  },
  normalize$0: function() {
    var t1, t2;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    return this.divideScalar$1(Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t2, t2)))));
  },
  distanceTo$1: function(v) {
    var t1, t2;
    t1 = $.$$sub(this.x, v.get$x());
    t2 = $.$$sub(this.y, v.get$y());
    return Math.sqrt($.checkNum($.$$add($.$$mul(t1, t1), $.$$mul(t2, t2))));
  },
  lerpSelf$2: function(v, alpha) {
    var t1, t2;
    t1 = this.x;
    this.x = $.$$add(t1, $.$$mul($.$$sub(v.get$x(), t1), alpha));
    t2 = this.y;
    this.y = $.$$add(t2, $.$$mul($.$$sub(v.get$y(), t2), alpha));
    return this;
  }
};

$$.UV = {"": "Object;u>,v>",
  copy$1: function(uv) {
    this.u = uv.get$u();
    this.v = uv.get$v();
    return this;
  },
  lerpSelf$2: function(uv, alpha) {
    var t1, t2;
    t1 = this.u;
    this.u = $.$$add(t1, $.$$mul($.$$sub(uv.get$u(), t1), alpha));
    t2 = this.v;
    this.v = $.$$add(t2, $.$$mul($.$$sub(uv.get$v(), t2), alpha));
    return this;
  }
};

$$.Rectangle = {"": "Object;_left,_top,_right,_bottom,_width,_height,_isEmpty",
  getX$0: function() {
    return this._left;
  },
  getY$0: function() {
    return this._top;
  },
  getWidth$0: function() {
    return this._width;
  },
  getHeight$0: function() {
    return this._height;
  },
  getLeft$0: function() {
    return this._left;
  },
  getTop$0: function() {
    return this._top;
  },
  getRight$0: function() {
    return this._right;
  },
  getBottom$0: function() {
    return this._bottom;
  },
  setValues$4: function(left, top, right, bottom) {
    this._isEmpty = false;
    this._left = left;
    this._top = top;
    this._right = right;
    this._bottom = bottom;
    this._width = $.$$sub(this._right, this._left);
    this._height = $.$$sub(this._bottom, this._top);
  },
  addPoint$2: function(x, y) {
    var t1, t3, t5, t7;
    if (typeof x !== "number")
      return this.addPoint$2$bailout(1, x, y);
    if (typeof y !== "number")
      return this.addPoint$2$bailout(1, x, y);
    if (this._isEmpty) {
      this._isEmpty = false;
      this._left = x;
      this._top = y;
      this._right = x;
      this._bottom = y;
      t1 = this._right;
      t3 = this._left;
      if (typeof t1 !== "number")
        return this.addPoint$2$bailout(2, null, null, t1);
      if (typeof t3 !== "number")
        return this.addPoint$2$bailout(3, null, null, t1, t3);
      this._width = t1 - t3;
      t5 = this._bottom;
      t7 = this._top;
      if (typeof t5 !== "number")
        return this.addPoint$2$bailout(4, null, null, null, null, t5);
      if (typeof t7 !== "number")
        return this.addPoint$2$bailout(5, null, null, null, null, t5, t7);
      this._height = t5 - t7;
    } else {
      t1 = this._left;
      if (typeof t1 !== "number")
        return this.addPoint$2$bailout(6, x, y, t1);
      if (t1 < x)
        ;
      else
        t1 = x;
      this._left = t1;
      t1 = this._top;
      if (typeof t1 !== "number")
        return this.addPoint$2$bailout(8, x, y, t1);
      if (t1 < y)
        ;
      else
        t1 = y;
      this._top = t1;
      t1 = this._right;
      if (typeof t1 !== "number")
        return this.addPoint$2$bailout(10, x, y, t1);
      if (t1 > x)
        ;
      else
        t1 = x;
      this._right = t1;
      t1 = this._bottom;
      if (typeof t1 !== "number")
        return this.addPoint$2$bailout(12, null, y, t1);
      if (t1 > y)
        ;
      else
        t1 = y;
      this._bottom = t1;
      t1 = this._right;
      t3 = this._left;
      if (typeof t1 !== "number")
        return this.addPoint$2$bailout(14, null, null, t1);
      if (typeof t3 !== "number")
        return this.addPoint$2$bailout(15, null, null, t1, t3);
      this._width = t1 - t3;
      t5 = this._bottom;
      t7 = this._top;
      if (typeof t5 !== "number")
        return this.addPoint$2$bailout(16, null, null, null, null, t5);
      if (typeof t7 !== "number")
        return this.addPoint$2$bailout(17, null, null, null, null, t5, t7);
      this._height = t5 - t7;
    }
  },
  addPoint$2$bailout: function(state0, x, y, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
      default:
        if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && this._isEmpty)
          switch (state0) {
            case 0:
              this._isEmpty = false;
              this._left = x;
              this._top = y;
              this._right = x;
              this._bottom = y;
              t1 = this._right;
            case 2:
              state0 = 0;
              t3 = this._left;
            case 3:
              state0 = 0;
              this._width = $.$$sub(t1, t3);
              t5 = this._bottom;
            case 4:
              state0 = 0;
              t7 = this._top;
            case 5:
              state0 = 0;
              this._height = $.$$sub(t5, t7);
          }
        else
          switch (state0) {
            case 0:
              t1 = this._left;
            case 6:
              state0 = 0;
            case 7:
              if (state0 === 7 || state0 === 0 && $.$$lt(t1, x) === true)
                switch (state0) {
                  case 0:
                    t1 = this._left;
                  case 7:
                    state0 = 0;
                }
              else
                t1 = x;
              this._left = t1;
              t1 = this._top;
            case 8:
              state0 = 0;
            case 9:
              if (state0 === 9 || state0 === 0 && $.$$lt(t1, y) === true)
                switch (state0) {
                  case 0:
                    t1 = this._top;
                  case 9:
                    state0 = 0;
                }
              else
                t1 = y;
              this._top = t1;
              t1 = this._right;
            case 10:
              state0 = 0;
            case 11:
              if (state0 === 11 || state0 === 0 && $.$$gt(t1, x) === true)
                switch (state0) {
                  case 0:
                    t1 = this._right;
                  case 11:
                    state0 = 0;
                }
              else
                t1 = x;
              this._right = t1;
              t1 = this._bottom;
            case 12:
              state0 = 0;
            case 13:
              if (state0 === 13 || state0 === 0 && $.$$gt(t1, y) === true)
                switch (state0) {
                  case 0:
                    t1 = this._bottom;
                  case 13:
                    state0 = 0;
                }
              else
                t1 = y;
              this._bottom = t1;
              t1 = this._right;
            case 14:
              state0 = 0;
              t3 = this._left;
            case 15:
              state0 = 0;
              this._width = $.$$sub(t1, t3);
              t5 = this._bottom;
            case 16:
              state0 = 0;
              t7 = this._top;
            case 17:
              state0 = 0;
              this._height = $.$$sub(t5, t7);
          }
    }
  },
  add3Points$6: function(x1, y1, x2, y2, x3, y3) {
    var t1, t3, t5, t7;
    if (typeof x1 !== "number")
      return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
    if (typeof y1 !== "number")
      return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
    if (typeof x2 !== "number")
      return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
    if (typeof y2 !== "number")
      return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
    if (typeof x3 !== "number")
      return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
    if (typeof y3 !== "number")
      return this.add3Points$6$bailout(1, x1, y1, x2, y2, x3, y3);
    if (this._isEmpty) {
      this._isEmpty = false;
      if (x1 < x2)
        if (x1 < x3)
          t1 = x1;
        else
          t1 = x3;
      else if (x2 < x3)
        t1 = x2;
      else
        t1 = x3;
      this._left = t1;
      if (y1 < y2)
        if (y1 < y3)
          t1 = y1;
        else
          t1 = y3;
      else if (y2 < y3)
        t1 = y2;
      else
        t1 = y3;
      this._top = t1;
      if (x1 > x2)
        if (x1 > x3)
          t1 = x1;
        else
          t1 = x3;
      else if (x2 > x3)
        t1 = x2;
      else
        t1 = x3;
      this._right = t1;
      if (y1 > y2)
        if (y1 > y3)
          t1 = y1;
        else
          t1 = y3;
      else if (y2 > y3)
        t1 = y2;
      else
        t1 = y3;
      this._bottom = t1;
      t1 = this._right;
      t3 = this._left;
      if (typeof t1 !== "number")
        return this.add3Points$6$bailout(2, null, null, null, null, null, null, t1);
      if (typeof t3 !== "number")
        return this.add3Points$6$bailout(3, null, null, null, null, null, null, t1, t3);
      this._width = t1 - t3;
      t5 = this._bottom;
      t7 = this._top;
      if (typeof t5 !== "number")
        return this.add3Points$6$bailout(4, null, null, null, null, null, null, null, null, t5);
      if (typeof t7 !== "number")
        return this.add3Points$6$bailout(5, null, null, null, null, null, null, null, null, t5, t7);
      this._height = t5 - t7;
    } else {
      if (x1 < x2)
        if (x1 < x3) {
          t1 = this._left;
          if (typeof t1 !== "number")
            return this.add3Points$6$bailout(6, x1, y1, x2, y2, x3, y3, $.CONSTANT1, null, null, null, t1);
          if (x1 < t1)
            t1 = x1;
        } else {
          t1 = this._left;
          if (typeof t1 !== "number")
            return this.add3Points$6$bailout(8, x1, y1, x2, y2, x3, y3, $.CONSTANT1, null, null, null, t1);
          if (x3 < t1)
            t1 = x3;
        }
      else if (x2 < x3) {
        t1 = this._left;
        if (typeof t1 !== "number")
          return this.add3Points$6$bailout(10, x1, y1, x2, y2, x3, y3, $.CONSTANT1, t1, null, null, $.CONSTANT1);
        if (x2 < t1)
          t1 = x2;
      } else {
        t1 = this._left;
        if (typeof t1 !== "number")
          return this.add3Points$6$bailout(12, x1, y1, x2, y2, x3, y3, $.CONSTANT1, null, null, null, t1);
        if (x3 < t1)
          t1 = x3;
      }
      this._left = t1;
      if (y1 < y2)
        if (y1 < y3) {
          t1 = this._top;
          if (typeof t1 !== "number")
            return this.add3Points$6$bailout(14, x1, y1, x2, y2, x3, y3, $.CONSTANT1, t1, null, null, $.CONSTANT1);
          if (y1 < t1)
            t1 = y1;
        } else {
          t1 = this._top;
          if (typeof t1 !== "number")
            return this.add3Points$6$bailout(16, x1, y1, x2, y2, x3, y3, $.CONSTANT1, t1, null, null, $.CONSTANT1);
          if (y3 < t1)
            t1 = y3;
        }
      else if (y2 < y3) {
        t1 = this._top;
        if (typeof t1 !== "number")
          return this.add3Points$6$bailout(18, x1, y1, x2, y2, x3, y3, $.CONSTANT1, $.CONSTANT1, null, null, $.CONSTANT1, t1);
        if (y2 < t1)
          t1 = y2;
      } else {
        t1 = this._top;
        if (typeof t1 !== "number")
          return this.add3Points$6$bailout(20, x1, y1, x2, y2, x3, y3, $.CONSTANT1, t1, null, null, $.CONSTANT1);
        if (y3 < t1)
          t1 = y3;
      }
      this._top = t1;
      if (x1 > x2)
        if (x1 > x3) {
          t1 = this._right;
          if (typeof t1 !== "number")
            return this.add3Points$6$bailout(22, x1, y1, null, y2, null, y3, $.CONSTANT1, t1, null, null, $.CONSTANT1);
          if (x1 > t1)
            t1 = x1;
        } else {
          t1 = this._right;
          if (typeof t1 !== "number")
            return this.add3Points$6$bailout(24, null, y1, null, y2, x3, y3, t1, null, null, null, $.CONSTANT1);
          if (x3 > t1)
            t1 = x3;
        }
      else if (x2 > x3) {
        t1 = this._right;
        if (typeof t1 !== "number")
          return this.add3Points$6$bailout(26, null, y1, x2, y2, null, y3, $.CONSTANT1, t1, null, null, $.CONSTANT1);
        if (x2 > t1)
          t1 = x2;
      } else {
        t1 = this._right;
        if (typeof t1 !== "number")
          return this.add3Points$6$bailout(28, null, y1, null, y2, x3, y3, t1, null, null, null, $.CONSTANT1);
        if (x3 > t1)
          t1 = x3;
      }
      this._right = t1;
      if (y1 > y2)
        if (y1 > y3) {
          t1 = this._bottom;
          if (typeof t1 !== "number")
            return this.add3Points$6$bailout(30, null, y1, null, null, null, null, t1, null, null, null, $.CONSTANT1);
          if (y1 > t1)
            t1 = y1;
        } else {
          t1 = this._bottom;
          if (typeof t1 !== "number")
            return this.add3Points$6$bailout(32, null, null, null, null, null, y3, t1);
          if (y3 > t1)
            t1 = y3;
        }
      else if (y2 > y3) {
        t1 = this._bottom;
        if (typeof t1 !== "number")
          return this.add3Points$6$bailout(34, null, null, null, y2, null, null, $.CONSTANT1, null, null, null, t1);
        if (y2 > t1)
          t1 = y2;
      } else {
        t1 = this._bottom;
        if (typeof t1 !== "number")
          return this.add3Points$6$bailout(36, null, null, null, null, null, y3, t1);
        if (y3 > t1)
          t1 = y3;
      }
      this._bottom = t1;
      t1 = this._right;
      t3 = this._left;
      if (typeof t1 !== "number")
        return this.add3Points$6$bailout(38, null, null, null, null, null, null, t1);
      if (typeof t3 !== "number")
        return this.add3Points$6$bailout(39, null, null, null, null, null, null, t1, t3);
      this._width = t1 - t3;
      t5 = this._bottom;
      t7 = this._top;
      if (typeof t5 !== "number")
        return this.add3Points$6$bailout(40, null, null, null, null, null, null, null, null, t5);
      if (typeof t7 !== "number")
        return this.add3Points$6$bailout(41, null, null, null, null, null, null, null, null, t5, t7);
      this._height = t5 - t7;
    }
  },
  add3Points$6$bailout: function(state0, x1, y1, x2, y2, x3, y3, t1, t3, t5, t7, t2, t4) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
      default:
        if (state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && this._isEmpty)
          switch (state0) {
            case 0:
              this._isEmpty = false;
              t1 = $.getInterceptor$JSNumber(x1);
              if (t1.$lt(x1, x2) === true)
                t2 = t1.$lt(x1, x3) === true ? x1 : x3;
              else
                t2 = $.$$lt(x2, x3) === true ? x2 : x3;
              this._left = t2;
              t2 = $.getInterceptor$JSNumber(y1);
              if (t2.$lt(y1, y2) === true)
                t3 = t2.$lt(y1, y3) === true ? y1 : y3;
              else
                t3 = $.$$lt(y2, y3) === true ? y2 : y3;
              this._top = t3;
              if (t1.$gt(x1, x2) === true)
                t1 = t1.$gt(x1, x3) === true ? x1 : x3;
              else
                t1 = $.$$gt(x2, x3) === true ? x2 : x3;
              this._right = t1;
              if (t2.$gt(y1, y2) === true)
                t1 = t2.$gt(y1, y3) === true ? y1 : y3;
              else
                t1 = $.$$gt(y2, y3) === true ? y2 : y3;
              this._bottom = t1;
              t1 = this._right;
            case 2:
              state0 = 0;
              t3 = this._left;
            case 3:
              state0 = 0;
              this._width = $.$$sub(t1, t3);
              t5 = this._bottom;
            case 4:
              state0 = 0;
              t7 = this._top;
            case 5:
              state0 = 0;
              this._height = $.$$sub(t5, t7);
          }
        else
          switch (state0) {
            case 0:
              t1 = $.getInterceptor$JSNumber(x1);
            default:
              if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 0 && t1.$lt(x1, x2) === true)
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 7 || state0 === 6 || state0 === 0 && t1.$lt(x1, x3) === true)
                      switch (state0) {
                        case 0:
                          t2 = this._left;
                        case 6:
                          state0 = 0;
                        case 7:
                          if (state0 === 0 && t1.$lt(x1, t2) === true)
                            t2 = x1;
                          else
                            switch (state0) {
                              case 0:
                                t2 = this._left;
                              case 7:
                                state0 = 0;
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t2 = this._left;
                        case 8:
                          state0 = 0;
                        case 9:
                          if (state0 === 0 && $.$$lt(x3, t2) === true)
                            t2 = x3;
                          else
                            switch (state0) {
                              case 0:
                                t2 = this._left;
                              case 9:
                                state0 = 0;
                            }
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t2 = $.getInterceptor$JSNumber(x2);
                  default:
                    if (state0 === 11 || state0 === 10 || state0 === 0 && t2.$lt(x2, x3) === true)
                      switch (state0) {
                        case 0:
                          t3 = this._left;
                        case 10:
                          state0 = 0;
                        case 11:
                          if (state0 === 0 && t2.$lt(x2, t3) === true)
                            t2 = x2;
                          else
                            switch (state0) {
                              case 0:
                                t2 = this._left;
                              case 11:
                                state0 = 0;
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t2 = this._left;
                        case 12:
                          state0 = 0;
                        case 13:
                          if (state0 === 0 && $.$$lt(x3, t2) === true)
                            t2 = x3;
                          else
                            switch (state0) {
                              case 0:
                                t2 = this._left;
                              case 13:
                                state0 = 0;
                            }
                      }
                }
              this._left = t2;
              t2 = $.getInterceptor$JSNumber(y1);
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
              if (state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 0 && t2.$lt(y1, y2) === true)
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 15 || state0 === 14 || state0 === 0 && t2.$lt(y1, y3) === true)
                      switch (state0) {
                        case 0:
                          t3 = this._top;
                        case 14:
                          state0 = 0;
                        case 15:
                          if (state0 === 0 && t2.$lt(y1, t3) === true)
                            t3 = y1;
                          else
                            switch (state0) {
                              case 0:
                                t3 = this._top;
                              case 15:
                                state0 = 0;
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t3 = this._top;
                        case 16:
                          state0 = 0;
                        case 17:
                          if (state0 === 0 && $.$$lt(y3, t3) === true)
                            t3 = y3;
                          else
                            switch (state0) {
                              case 0:
                                t3 = this._top;
                              case 17:
                                state0 = 0;
                            }
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t3 = $.getInterceptor$JSNumber(y2);
                  default:
                    if (state0 === 19 || state0 === 18 || state0 === 0 && t3.$lt(y2, y3) === true)
                      switch (state0) {
                        case 0:
                          t4 = this._top;
                        case 18:
                          state0 = 0;
                        case 19:
                          if (state0 === 0 && t3.$lt(y2, t4) === true)
                            t3 = y2;
                          else
                            switch (state0) {
                              case 0:
                                t3 = this._top;
                              case 19:
                                state0 = 0;
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t3 = this._top;
                        case 20:
                          state0 = 0;
                        case 21:
                          if (state0 === 0 && $.$$lt(y3, t3) === true)
                            t3 = y3;
                          else
                            switch (state0) {
                              case 0:
                                t3 = this._top;
                              case 21:
                                state0 = 0;
                            }
                      }
                }
              this._top = t3;
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
              if (state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 0 && t1.$gt(x1, x2) === true)
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 23 || state0 === 22 || state0 === 0 && t1.$gt(x1, x3) === true)
                      switch (state0) {
                        case 0:
                          t3 = this._right;
                        case 22:
                          state0 = 0;
                        case 23:
                          if (state0 === 0 && t1.$gt(x1, t3) === true)
                            t1 = x1;
                          else
                            switch (state0) {
                              case 0:
                                t1 = this._right;
                              case 23:
                                state0 = 0;
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t1 = this._right;
                        case 24:
                          state0 = 0;
                        case 25:
                          if (state0 === 0 && $.$$gt(x3, t1) === true)
                            t1 = x3;
                          else
                            switch (state0) {
                              case 0:
                                t1 = this._right;
                              case 25:
                                state0 = 0;
                            }
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t1 = $.getInterceptor$JSNumber(x2);
                  default:
                    if (state0 === 27 || state0 === 26 || state0 === 0 && t1.$gt(x2, x3) === true)
                      switch (state0) {
                        case 0:
                          t3 = this._right;
                        case 26:
                          state0 = 0;
                        case 27:
                          if (state0 === 0 && t1.$gt(x2, t3) === true)
                            t1 = x2;
                          else
                            switch (state0) {
                              case 0:
                                t1 = this._right;
                              case 27:
                                state0 = 0;
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t1 = this._right;
                        case 28:
                          state0 = 0;
                        case 29:
                          if (state0 === 0 && $.$$gt(x3, t1) === true)
                            t1 = x3;
                          else
                            switch (state0) {
                              case 0:
                                t1 = this._right;
                              case 29:
                                state0 = 0;
                            }
                      }
                }
              this._right = t1;
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
              if (state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 0 && t2.$gt(y1, y2) === true)
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 31 || state0 === 30 || state0 === 0 && t2.$gt(y1, y3) === true)
                      switch (state0) {
                        case 0:
                          t1 = this._bottom;
                        case 30:
                          state0 = 0;
                        case 31:
                          if (state0 === 0 && t2.$gt(y1, t1) === true)
                            t1 = y1;
                          else
                            switch (state0) {
                              case 0:
                                t1 = this._bottom;
                              case 31:
                                state0 = 0;
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t1 = this._bottom;
                        case 32:
                          state0 = 0;
                        case 33:
                          if (state0 === 0 && $.$$gt(y3, t1) === true)
                            t1 = y3;
                          else
                            switch (state0) {
                              case 0:
                                t1 = this._bottom;
                              case 33:
                                state0 = 0;
                            }
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t1 = $.getInterceptor$JSNumber(y2);
                  default:
                    if (state0 === 35 || state0 === 34 || state0 === 0 && t1.$gt(y2, y3) === true)
                      switch (state0) {
                        case 0:
                          t2 = this._bottom;
                        case 34:
                          state0 = 0;
                        case 35:
                          if (state0 === 0 && t1.$gt(y2, t2) === true)
                            t1 = y2;
                          else
                            switch (state0) {
                              case 0:
                                t1 = this._bottom;
                              case 35:
                                state0 = 0;
                            }
                      }
                    else
                      switch (state0) {
                        case 0:
                          t1 = this._bottom;
                        case 36:
                          state0 = 0;
                        case 37:
                          if (state0 === 0 && $.$$gt(y3, t1) === true)
                            t1 = y3;
                          else
                            switch (state0) {
                              case 0:
                                t1 = this._bottom;
                              case 37:
                                state0 = 0;
                            }
                      }
                }
              this._bottom = t1;
              t1 = this._right;
            case 38:
              state0 = 0;
              t3 = this._left;
            case 39:
              state0 = 0;
              this._width = $.$$sub(t1, t3);
              t5 = this._bottom;
            case 40:
              state0 = 0;
              t7 = this._top;
            case 41:
              state0 = 0;
              this._height = $.$$sub(t5, t7);
          }
    }
  },
  addRectangle$1: function(r) {
    var t1, t3, t5, t7;
    if (this._isEmpty) {
      this._isEmpty = false;
      this._left = r.getLeft$0();
      this._top = r.getTop$0();
      this._right = r.getRight$0();
      this._bottom = r.getBottom$0();
      t1 = this._right;
      t3 = this._left;
      if (typeof t1 !== "number")
        return this.addRectangle$1$bailout(1, t1);
      if (typeof t3 !== "number")
        return this.addRectangle$1$bailout(2, t1, t3);
      this._width = t1 - t3;
      t5 = this._bottom;
      t7 = this._top;
      if (typeof t5 !== "number")
        return this.addRectangle$1$bailout(3, null, null, t5);
      if (typeof t7 !== "number")
        return this.addRectangle$1$bailout(4, null, null, t5, t7);
      this._height = t5 - t7;
    } else {
      t1 = this._left;
      t3 = r.getLeft$0();
      if (typeof t1 !== "number")
        return this.addRectangle$1$bailout(5, t1, null, null, null, r);
      if (typeof t3 !== "number")
        return this.addRectangle$1$bailout(6, t1, t3, null, null, r);
      this._left = t1 < t3 ? this._left : r.getLeft$0();
      t1 = this._top;
      t3 = r.getTop$0();
      if (typeof t1 !== "number")
        return this.addRectangle$1$bailout(7, t1, null, null, null, r);
      if (typeof t3 !== "number")
        return this.addRectangle$1$bailout(8, t1, t3, null, null, r);
      this._top = t1 < t3 ? this._top : r.getTop$0();
      t1 = this._right;
      t3 = r.getRight$0();
      if (typeof t1 !== "number")
        return this.addRectangle$1$bailout(9, t1, null, null, null, r);
      if (typeof t3 !== "number")
        return this.addRectangle$1$bailout(10, t1, t3, null, null, r);
      this._right = t1 > t3 ? this._right : r.getRight$0();
      t1 = this._bottom;
      t3 = r.getBottom$0();
      if (typeof t1 !== "number")
        return this.addRectangle$1$bailout(11, t1, null, null, null, r);
      if (typeof t3 !== "number")
        return this.addRectangle$1$bailout(12, t1, t3, null, null, r);
      this._bottom = t1 > t3 ? this._bottom : r.getBottom$0();
      t1 = this._right;
      t3 = this._left;
      if (typeof t1 !== "number")
        return this.addRectangle$1$bailout(13, t1);
      if (typeof t3 !== "number")
        return this.addRectangle$1$bailout(14, t1, t3);
      this._width = t1 - t3;
      t5 = this._bottom;
      t7 = this._top;
      if (typeof t5 !== "number")
        return this.addRectangle$1$bailout(15, null, null, t5);
      if (typeof t7 !== "number")
        return this.addRectangle$1$bailout(16, null, null, t5, t7);
      this._height = t5 - t7;
    }
  },
  addRectangle$1$bailout: function(state0, t1, t3, t5, t7, r) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && this._isEmpty)
          switch (state0) {
            case 0:
              this._isEmpty = false;
              this._left = r.getLeft$0();
              this._top = r.getTop$0();
              this._right = r.getRight$0();
              this._bottom = r.getBottom$0();
              t1 = this._right;
            case 1:
              state0 = 0;
              t3 = this._left;
            case 2:
              state0 = 0;
              this._width = $.$$sub(t1, t3);
              t5 = this._bottom;
            case 3:
              state0 = 0;
              t7 = this._top;
            case 4:
              state0 = 0;
              this._height = $.$$sub(t5, t7);
          }
        else
          switch (state0) {
            case 0:
              t1 = this._left;
            case 5:
              state0 = 0;
              t3 = r.getLeft$0();
            case 6:
              state0 = 0;
              this._left = $.$$lt(t1, t3) === true ? this._left : r.getLeft$0();
              t1 = this._top;
            case 7:
              state0 = 0;
              t3 = r.getTop$0();
            case 8:
              state0 = 0;
              this._top = $.$$lt(t1, t3) === true ? this._top : r.getTop$0();
              t1 = this._right;
            case 9:
              state0 = 0;
              t3 = r.getRight$0();
            case 10:
              state0 = 0;
              this._right = $.$$gt(t1, t3) === true ? this._right : r.getRight$0();
              t1 = this._bottom;
            case 11:
              state0 = 0;
              t3 = r.getBottom$0();
            case 12:
              state0 = 0;
              this._bottom = $.$$gt(t1, t3) === true ? this._bottom : r.getBottom$0();
              t1 = this._right;
            case 13:
              state0 = 0;
              t3 = this._left;
            case 14:
              state0 = 0;
              this._width = $.$$sub(t1, t3);
              t5 = this._bottom;
            case 15:
              state0 = 0;
              t7 = this._top;
            case 16:
              state0 = 0;
              this._height = $.$$sub(t5, t7);
          }
    }
  },
  inflate$1: function(v) {
    this._left = $.$$sub(this._left, v);
    this._top = $.$$sub(this._top, v);
    this._right = $.$$add(this._right, v);
    this._bottom = $.$$add(this._bottom, v);
    this._width = $.$$sub(this._right, this._left);
    this._height = $.$$sub(this._bottom, this._top);
  },
  minSelf$1: function(r) {
    this._left = $.$$gt(this._left, r.getLeft$0()) === true ? this._left : r.getLeft$0();
    this._top = $.$$gt(this._top, r.getTop$0()) === true ? this._top : r.getTop$0();
    this._right = $.$$lt(this._right, r.getRight$0()) === true ? this._right : r.getRight$0();
    this._bottom = $.$$lt(this._bottom, r.getBottom$0()) === true ? this._bottom : r.getBottom$0();
    this._width = $.$$sub(this._right, this._left);
    this._height = $.$$sub(this._bottom, this._top);
  },
  intersects$1: function(r) {
    var t1, t3;
    t1 = this._right;
    t3 = r.getLeft$0();
    if (typeof t1 !== "number")
      return this.intersects$1$bailout(1, r, t1);
    if (typeof t3 !== "number")
      return this.intersects$1$bailout(2, r, t1, t3);
    if (t1 < t3)
      return false;
    t1 = this._left;
    t3 = r.getRight$0();
    if (typeof t1 !== "number")
      return this.intersects$1$bailout(3, r, t1);
    if (typeof t3 !== "number")
      return this.intersects$1$bailout(4, r, t1, t3);
    if (t1 > t3)
      return false;
    t1 = this._bottom;
    t3 = r.getTop$0();
    if (typeof t1 !== "number")
      return this.intersects$1$bailout(5, r, t1);
    if (typeof t3 !== "number")
      return this.intersects$1$bailout(6, r, t1, t3);
    if (t1 < t3)
      return false;
    t1 = this._top;
    t3 = r.getBottom$0();
    if (typeof t1 !== "number")
      return this.intersects$1$bailout(7, r, t1);
    if (typeof t3 !== "number")
      return this.intersects$1$bailout(8, null, t1, t3);
    if (t1 > t3)
      return false;
    return true;
  },
  intersects$1$bailout: function(state0, r, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this._right;
      case 1:
        state0 = 0;
        t3 = r.getLeft$0();
      case 2:
        state0 = 0;
        if ($.$$lt(t1, t3) === true)
          return false;
        t1 = this._left;
      case 3:
        state0 = 0;
        t3 = r.getRight$0();
      case 4:
        state0 = 0;
        if ($.$$gt(t1, t3) === true)
          return false;
        t1 = this._bottom;
      case 5:
        state0 = 0;
        t3 = r.getTop$0();
      case 6:
        state0 = 0;
        if ($.$$lt(t1, t3) === true)
          return false;
        t1 = this._top;
      case 7:
        state0 = 0;
        t3 = r.getBottom$0();
      case 8:
        state0 = 0;
        if ($.$$gt(t1, t3) === true)
          return false;
        return true;
    }
  },
  empty$0: function() {
    var t1, t3, t5, t7;
    this._isEmpty = true;
    this._left = 0;
    this._top = 0;
    this._right = 0;
    this._bottom = 0;
    t1 = this._right;
    t3 = this._left;
    if (typeof t1 !== "number")
      return this.empty$0$bailout(1, t1);
    if (typeof t3 !== "number")
      return this.empty$0$bailout(2, t1, t3);
    this._width = t1 - t3;
    t5 = this._bottom;
    t7 = this._top;
    if (typeof t5 !== "number")
      return this.empty$0$bailout(3, null, null, t5);
    if (typeof t7 !== "number")
      return this.empty$0$bailout(4, null, null, t5, t7);
    this._height = t5 - t7;
  },
  empty$0$bailout: function(state0, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
        this._isEmpty = true;
        this._left = 0;
        this._top = 0;
        this._right = 0;
        this._bottom = 0;
        t1 = this._right;
      case 1:
        state0 = 0;
        t3 = this._left;
      case 2:
        state0 = 0;
        this._width = $.$$sub(t1, t3);
        t5 = this._bottom;
      case 3:
        state0 = 0;
        t7 = this._top;
      case 4:
        state0 = 0;
        this._height = $.$$sub(t5, t7);
    }
  },
  get$isEmpty: function() {
    return this._isEmpty;
  }
};

$$.CubeGeometry = {"": "Geometry;_sides,segmentsWidth,segmentsHeight,segmentsDepth,id,name,vertices,colors,materials,faces,faceUvs,faceVertexUvs,morphTargets,morphColors,morphNormals,skinWeights,skinIndices,__tmpVertices,boundingBox,boundingSphere,hasTangents,_dynamic,bones,animation,__data",
  buildPlane$8: function(u, v, udir, vdir, width, height, depth, material) {
    var gridX, gridY, t2, width_half, t4, height_half, offset, t1, t3, w, t6, t7, segment_width, segment_height, normal, t5, t8, t9, t10, t11, iy, t12, ix, vector, iy0, ix0, face, faceVertexUV, newUVs;
    if (typeof depth !== "number")
      return this.buildPlane$8$bailout(1, u, v, udir, vdir, width, height, depth, material);
    gridX = this.segmentsWidth;
    gridX = !(gridX == null) ? gridX : 1;
    if (typeof gridX !== "number")
      return this.buildPlane$8$bailout(2, u, v, udir, vdir, width, height, depth, material, gridX);
    gridY = this.segmentsHeight;
    gridY = !(gridY == null) ? gridY : 1;
    if (typeof gridY !== "number")
      return this.buildPlane$8$bailout(3, u, v, udir, vdir, width, height, depth, material, gridX, gridY);
    t2 = $.getInterceptor$JSNumber(width);
    width_half = t2.$div(width, 2);
    if (typeof width_half !== "number")
      return this.buildPlane$8$bailout(4, u, v, udir, vdir, width, height, depth, material, gridX, gridY, t2, width_half);
    t4 = $.getInterceptor$JSNumber(height);
    height_half = t4.$div(height, 2);
    if (typeof height_half !== "number")
      return this.buildPlane$8$bailout(5, u, v, udir, vdir, width, height, depth, material, gridX, gridY, t2, width_half, height_half, t4);
    offset = this.vertices.length;
    t1 = u === "x";
    if (!(t1 && v === "y"))
      t3 = u === "y" && v === "x";
    else
      t3 = true;
    if (t3)
      w = "z";
    else {
      if (!(t1 && v === "z"))
        t3 = u === "z" && v === "x";
      else
        t3 = true;
      if (t3) {
        gridY = this.segmentsDepth;
        gridY = !(gridY == null) ? gridY : 1;
        w = "y";
      } else {
        if (!(u === "z" && v === "y"))
          t3 = u === "y" && v === "z";
        else
          t3 = true;
        if (t3) {
          gridX = this.segmentsDepth;
          gridX = !(gridX == null) ? gridX : 1;
          w = "x";
        } else
          w = null;
      }
    }
    if (typeof gridY !== "number")
      return this.buildPlane$8$bailout(7, u, v, udir, vdir, width, height, depth, material, gridX, gridY, t2, width_half, height_half, t4, w, offset, t1);
    if (typeof gridX !== "number")
      return this.buildPlane$8$bailout(6, u, v, udir, vdir, width, height, depth, material, gridX, gridY, t2, width_half, height_half, t4, w, offset, t1);
    t6 = gridX + 1;
    t7 = gridY + 1;
    segment_width = t2.$div(width, gridX);
    if (typeof segment_width !== "number")
      return this.buildPlane$8$bailout(8, u, v, udir, vdir, null, height, depth, material, gridX, gridY, null, width_half, height_half, t4, w, offset, t1, segment_width, t6, t7);
    segment_height = t4.$div(height, gridY);
    if (typeof segment_height !== "number")
      return this.buildPlane$8$bailout(9, u, v, udir, vdir, null, null, depth, material, gridX, gridY, null, width_half, height_half, null, w, offset, t1, segment_width, t6, t7, segment_height);
    normal = $.Vector3$(0, 0, 0);
    t2 = w === "x";
    if (t2)
      normal.x = depth > 0 ? 1 : -1;
    else if (w === "y")
      normal.y = depth > 0 ? 1 : -1;
    else if (w === "z")
      normal.z = depth > 0 ? 1 : -1;
    for (t3 = v === "x", t4 = u === "y", t5 = u === "z", t8 = v === "y", t9 = v === "z", t10 = w === "y", t11 = w === "z", iy = 0; iy < t7; ++iy)
      for (t12 = (iy * segment_height - height_half) * vdir, ix = 0; ix < t6; ++ix) {
        vector = $.Vector3$(0, 0, 0);
        if (t1)
          vector.x = (ix * segment_width - width_half) * udir;
        else if (t4)
          vector.y = (ix * segment_width - width_half) * udir;
        else if (t5)
          vector.z = (ix * segment_width - width_half) * udir;
        if (t3)
          vector.x = t12;
        else if (t8)
          vector.y = t12;
        else if (t9)
          vector.z = t12;
        if (t2)
          vector.x = depth;
        else if (t10)
          vector.y = depth;
        else if (t11)
          vector.z = depth;
        this.vertices.push(vector);
      }
    for (t1 = this.faceVertexUvs, iy = 0; iy < gridY; iy = iy0)
      for (iy0 = iy + 1, t2 = t6 * iy, t3 = t6 * iy0, t4 = iy / gridY, t5 = iy0 / gridY, ix = 0; ix < gridX; ix = ix0) {
        ix0 = ix + 1;
        face = $.Face4$(ix + t2 + offset, ix + t3 + offset, ix0 + t3 + offset, ix0 + t2 + offset, null, null, null);
        face.normal.copy$1(normal);
        $.addAll(face.vertexNormals, [normal.clone$0(), normal.clone$0(), normal.clone$0(), normal.clone$0()]);
        face.materialIndex = material;
        this.faces.push(face);
        if (0 >= t1.length)
          throw $.ioore(0);
        faceVertexUV = t1[0];
        newUVs = $.List_List(0);
        t7 = ix / gridX;
        t8 = ix0 / gridX;
        $.CONSTANT2.addAll$1(newUVs, [$.UV$(t7, t4), $.UV$(t7, t5), $.UV$(t8, t5), $.UV$(t8, t4)]);
        $.add(faceVertexUV, newUVs);
      }
  },
  buildPlane$8$bailout: function(state0, u, v, udir, vdir, width, height, depth, material, gridX, gridY, t2, width_half, height_half, t4, w, offset, t1, segment_width, t6, t7, segment_height) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        gridX = this.segmentsWidth;
        gridX = !(gridX == null) ? gridX : 1;
      case 2:
        state0 = 0;
        gridY = this.segmentsHeight;
        gridY = !(gridY == null) ? gridY : 1;
      case 3:
        state0 = 0;
        t2 = $.getInterceptor$JSNumber(width);
        width_half = t2.$div(width, 2);
      case 4:
        state0 = 0;
        t4 = $.getInterceptor$JSNumber(height);
        height_half = t4.$div(height, 2);
      case 5:
        state0 = 0;
        offset = this.vertices.length;
        t1 = u === "x";
        if (!(t1 && v === "y"))
          t3 = u === "y" && v === "x";
        else
          t3 = true;
        if (t3)
          w = "z";
        else {
          if (!(t1 && v === "z"))
            t3 = u === "z" && v === "x";
          else
            t3 = true;
          if (t3) {
            gridY = this.segmentsDepth;
            gridY = !(gridY == null) ? gridY : 1;
            w = "y";
          } else {
            if (!(u === "z" && v === "y"))
              t3 = u === "y" && v === "z";
            else
              t3 = true;
            if (t3) {
              gridX = this.segmentsDepth;
              gridX = !(gridX == null) ? gridX : 1;
              w = "x";
            } else
              w = null;
          }
        }
      case 7:
        state0 = 0;
      case 6:
        state0 = 0;
        t6 = $.$$add(gridX, 1);
        t7 = $.$$add(gridY, 1);
        segment_width = t2.$div(width, gridX);
      case 8:
        state0 = 0;
        segment_height = t4.$div(height, gridY);
      case 9:
        var t3, normal, t5, t8, t9, t10, t11, iy, ix, vector, iy0, ix0, face, faceVertexUV, newUVs;
        state0 = 0;
        normal = $.Vector3$(0, 0, 0);
        t2 = w === "x";
        if (t2)
          normal.x = $.$$gt(depth, 0) === true ? 1 : -1;
        else if (w === "y")
          normal.y = $.$$gt(depth, 0) === true ? 1 : -1;
        else if (w === "z")
          normal.z = $.$$gt(depth, 0) === true ? 1 : -1;
        for (t3 = v === "x", t4 = u === "y", t5 = u === "z", t8 = v === "y", t9 = v === "z", t10 = w === "y", t11 = w === "z", iy = 0; $.CONSTANT0.$lt(iy, t7); ++iy)
          for (ix = 0; $.CONSTANT0.$lt(ix, t6); ++ix) {
            vector = $.Vector3$(0, 0, 0);
            if (t1) {
              if (typeof segment_width !== "number")
                throw $.iae(segment_width);
              if (typeof width_half !== "number")
                throw $.iae(width_half);
              vector.x = (ix * segment_width - width_half) * udir;
            } else if (t4) {
              if (typeof segment_width !== "number")
                throw $.iae(segment_width);
              if (typeof width_half !== "number")
                throw $.iae(width_half);
              vector.y = (ix * segment_width - width_half) * udir;
            } else if (t5) {
              if (typeof segment_width !== "number")
                throw $.iae(segment_width);
              if (typeof width_half !== "number")
                throw $.iae(width_half);
              vector.z = (ix * segment_width - width_half) * udir;
            }
            if (t3) {
              if (typeof segment_height !== "number")
                throw $.iae(segment_height);
              if (typeof height_half !== "number")
                throw $.iae(height_half);
              vector.x = (iy * segment_height - height_half) * vdir;
            } else if (t8) {
              if (typeof segment_height !== "number")
                throw $.iae(segment_height);
              if (typeof height_half !== "number")
                throw $.iae(height_half);
              vector.y = (iy * segment_height - height_half) * vdir;
            } else if (t9) {
              if (typeof segment_height !== "number")
                throw $.iae(segment_height);
              if (typeof height_half !== "number")
                throw $.iae(height_half);
              vector.z = (iy * segment_height - height_half) * vdir;
            }
            if (t2)
              vector.x = depth;
            else if (t10)
              vector.y = depth;
            else if (t11)
              vector.z = depth;
            this.vertices.push(vector);
          }
        for (t1 = $.getInterceptor$JSNumber(t6), t2 = this.faceVertexUvs, iy = 0; $.CONSTANT0.$lt(iy, gridY); iy = iy0)
          for (iy0 = iy + 1, ix = 0; $.CONSTANT0.$lt(ix, gridX); ix = ix0) {
            t3 = t1.$mul(t6, iy);
            if (typeof t3 !== "number")
              throw $.iae(t3);
            t4 = t1.$mul(t6, iy0);
            if (typeof t4 !== "number")
              throw $.iae(t4);
            ix0 = ix + 1;
            t5 = t1.$mul(t6, iy0);
            if (typeof t5 !== "number")
              throw $.iae(t5);
            t7 = t1.$mul(t6, iy);
            if (typeof t7 !== "number")
              throw $.iae(t7);
            face = $.Face4$(ix + t3 + offset, ix + t4 + offset, ix0 + t5 + offset, ix0 + t7 + offset, null, null, null);
            face.normal.copy$1(normal);
            $.addAll(face.vertexNormals, [normal.clone$0(), normal.clone$0(), normal.clone$0(), normal.clone$0()]);
            face.materialIndex = material;
            this.faces.push(face);
            if (0 >= t2.length)
              throw $.ioore(0);
            faceVertexUV = t2[0];
            newUVs = $.List_List(0);
            if (typeof gridX !== "number")
              throw $.iae(gridX);
            t8 = ix / gridX;
            if (typeof gridY !== "number")
              throw $.iae(gridY);
            t9 = iy / gridY;
            t10 = iy0 / gridY;
            t11 = ix0 / gridX;
            $.CONSTANT2.addAll$1(newUVs, [$.UV$(t8, t9), $.UV$(t8, t10), $.UV$(t11, t10), $.UV$(t11, t9)]);
            $.add(faceVertexUV, newUVs);
          }
    }
  },
  CubeGeometry$8: function(width, height, depth, segmentsWidth, segmentsHeight, segmentsDepth, materialOrList, sides) {
    var t1, t2, t3, i, mpx, mpy, mpz, mnx, mny, mnz, t4, t5, t6;
    if (typeof sides !== "string" && (typeof sides !== "object" || sides === null || sides.constructor !== Array && !sides.$isJavaScriptIndexingBehavior()))
      return this.CubeGeometry$8$bailout(1, width, height, depth, materialOrList, sides);
    t1 = $.$$div(width, 2);
    t2 = $.$$div(height, 2);
    t3 = $.$$div(depth, 2);
    if (!(materialOrList == null)) {
      if (typeof materialOrList === "object" && materialOrList !== null && (materialOrList.constructor === Array || materialOrList.$isList()))
        this.materials = materialOrList;
      else {
        this.materials = [];
        for (i = 0; i < 6; ++i)
          $.add(this.materials, materialOrList);
      }
      mpx = 0;
      mpy = 2;
      mpz = 4;
      mnx = 1;
      mny = 3;
      mnz = 5;
    } else {
      this.materials = [];
      mpx = null;
      mpy = null;
      mpz = null;
      mnx = null;
      mny = null;
      mnz = null;
    }
    this._sides = $.CubeGeomSides$(true, true, true, true, true, true);
    for (t4 = $.iterator(sides); t4.moveNext$0() === true;) {
      t5 = t4.get$current();
      if (!($.$$index(this._sides, t5) == null)) {
        t6 = this._sides;
        if (t5 !== (t5 | 0))
          throw $.iae(t5);
        if (t5 < 0 || t5 >= sides.length)
          throw $.ioore(t5);
        $.$$indexSet(t6, t5, sides[t5]);
      }
    }
    if (this._sides.get$px() === true)
      this.buildPlane$8("z", "y", -1, -1, depth, height, t1, mpx);
    if (this._sides.get$nx() === true)
      this.buildPlane$8("z", "y", 1, -1, depth, height, $.$$negate(t1), mnx);
    if (this._sides.get$py() === true)
      this.buildPlane$8("x", "z", 1, 1, width, depth, t2, mpy);
    if (this._sides.get$ny() === true)
      this.buildPlane$8("x", "z", 1, -1, width, depth, $.$$negate(t2), mny);
    if (this._sides.get$pz() === true)
      this.buildPlane$8("x", "y", 1, -1, width, height, t3, mpz);
    if (this._sides.get$nz() === true)
      this.buildPlane$8("x", "y", -1, -1, width, height, $.$$negate(t3), mnz);
    this.computeCentroids$0();
    this.mergeVertices$0();
  },
  CubeGeometry$8$bailout: function(state0, width, height, depth, materialOrList, sides) {
    var t1, t2, t3, i, mpx, mpy, mpz, mnx, mny, mnz, t4, t5, t6;
    t1 = $.$$div(width, 2);
    t2 = $.$$div(height, 2);
    t3 = $.$$div(depth, 2);
    if (!(materialOrList == null)) {
      if (typeof materialOrList === "object" && materialOrList !== null && (materialOrList.constructor === Array || materialOrList.$isList()))
        this.materials = materialOrList;
      else {
        this.materials = [];
        for (i = 0; i < 6; ++i)
          $.add(this.materials, materialOrList);
      }
      mpx = 0;
      mpy = 2;
      mpz = 4;
      mnx = 1;
      mny = 3;
      mnz = 5;
    } else {
      this.materials = [];
      mpx = null;
      mpy = null;
      mpz = null;
      mnx = null;
      mny = null;
      mnz = null;
    }
    this._sides = $.CubeGeomSides$(true, true, true, true, true, true);
    t4 = $.getInterceptor(sides);
    if (!(sides == null))
      for (t5 = t4.get$iterator(sides); t5.moveNext$0() === true;) {
        t6 = t5.get$current();
        if (!($.$$index(this._sides, t6) == null))
          $.$$indexSet(this._sides, t6, t4.$index(sides, t6));
      }
    if (this._sides.get$px() === true)
      this.buildPlane$8("z", "y", -1, -1, depth, height, t1, mpx);
    if (this._sides.get$nx() === true)
      this.buildPlane$8("z", "y", 1, -1, depth, height, $.$$negate(t1), mnx);
    if (this._sides.get$py() === true)
      this.buildPlane$8("x", "z", 1, 1, width, depth, t2, mpy);
    if (this._sides.get$ny() === true)
      this.buildPlane$8("x", "z", 1, -1, width, depth, $.$$negate(t2), mny);
    if (this._sides.get$pz() === true)
      this.buildPlane$8("x", "y", 1, -1, width, height, t3, mpz);
    if (this._sides.get$nz() === true)
      this.buildPlane$8("x", "y", -1, -1, width, height, $.$$negate(t3), mnz);
    this.computeCentroids$0();
    this.mergeVertices$0();
  }
};

$$.CubeGeomSides = {"": "Object;px>,nx>,py>,ny>,pz>,nz>"};

$$.Material = {"": "Object;name>,id>,side>,opacity>,blending>,overdraw>,visible=,needsUpdate=",
  get$_data: function() {
    if (this.__data == null)
      this.__data = $.makeLiteralMap([]);
    return this.__data;
  },
  $index: function(key) {
    var t1 = this.get$_data();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout3(1, key, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    return t1[key];
  },
  $$index$bailout3: function(state0, key, t1) {
    return $.$$index(t1, key);
  },
  $indexSet: function(key, value) {
    var t1 = this.get$_data();
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.$$indexSet$bailout3(1, key, value, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    t1[key] = value;
    return value;
  },
  $$indexSet$bailout3: function(state0, key, value, t1) {
    $.$$indexSet(t1, key, value);
    return value;
  },
  $isMaterial: true
};

$$.MeshBasicMaterial = {"": "Material;color>,map,lightMap,specularMap,envMap,combine,reflectivity,refractionRatio,shading,wireframe,wireframeLinewidth,wireframeLinecap,wireframeLinejoin,skinning,morphTargets>,vertexColors,fog,name,id,side,opacity,blending,blendSrc,blendDst,blendEquation,alphaTest,polygonOffset,polygonOffsetFactor,polygonOffsetUnits,transparent,depthTest,depthWrite,overdraw,visible,needsUpdate,__data", $isMeshBasicMaterial: true, $isITextureMapMaterial: true};

$$.ParticleCanvasMaterial = {"": "Material;color>,program,name,id,side,opacity,blending,blendSrc,blendDst,blendEquation,alphaTest,polygonOffset,polygonOffsetFactor,polygonOffsetUnits,transparent,depthTest,depthWrite,overdraw,visible,needsUpdate,__data",
  program$1: function(arg0) {
    return this.program.call$1(arg0);
  },
  ParticleCanvasMaterial$18$alphaTest$blendDst$blendEquation$blendSrc$blending$color$depthTest$depthWrite$name$opacity$overdraw$polygonOffset$polygonOffsetFactor$polygonOffsetUnits$program$side$transparent$visible: function(alphaTest, blendDst, blendEquation, blendSrc, blending, color, depthTest, depthWrite, name, opacity, overdraw, polygonOffset, polygonOffsetFactor, polygonOffsetUnits, program, side, transparent, visible) {
    if (this.program == null)
      this.program = new $.anon();
  },
  $isParticleCanvasMaterial: true
};

$$.Mesh = {"": "Object3D;geometry>,material=,morphTargetBase,morphTargetForcedOrder,morphTargetInfluences,_morphTargetDictionary,id,name,properties,parent,children,up,position,rotation,scale,eulerOrder,_dynamic,doubleSided,flipSided,rotationAutoUpdate,renderDepth,matrix,matrixWorld,matrixRotationWorld,matrixAutoUpdate,matrixWorldNeedsUpdate,quaternion,useQuaternion,boundRadius,boundRadiusScale,visible,castShadow,receiveShadow,frustumCulled,_vector,__data",
  Mesh$2: function(geometry, material) {
    var t1, m;
    if (this.material == null)
      this.material = $.MeshBasicMaterial$(0, 205, 100, 204, 1, $.Random_Random(null).nextInt$1(16777215), 0, true, true, null, true, null, null, false, "", 1, false, false, 0, 0, 1, 0.98, 2, 0, false, null, false, 0, true, true, "round", "round", 1);
    t1 = this.geometry;
    if (!(t1 == null)) {
      if (t1.get$boundingSphere() == null)
        t1.computeBoundingSphere$0();
      this.boundRadius = t1.get$boundingSphere().get$radius();
      if ($.$$eq($.length(t1.get$morphTargets()), 0) !== true) {
        this.morphTargetBase = -1;
        this.morphTargetForcedOrder = [];
        this.morphTargetInfluences = [];
        this._morphTargetDictionary = $.makeLiteralMap([]);
        for (m = 0; $.CONSTANT0.$lt(m, $.length(t1.get$morphTargets())); ++m) {
          $.add(this.morphTargetInfluences, 0);
          $.$$indexSet(this._morphTargetDictionary, $.$$index(t1.get$morphTargets(), m).get$name(), m);
        }
      }
    }
  },
  $isMesh: true
};

$$.Particle = {"": "Object3D;material=,id,name,properties,parent,children,up,position,rotation,scale,eulerOrder,_dynamic,doubleSided,flipSided,rotationAutoUpdate,renderDepth,matrix,matrixWorld,matrixRotationWorld,matrixAutoUpdate,matrixWorldNeedsUpdate,quaternion,useQuaternion,boundRadius,boundRadiusScale,visible,castShadow,receiveShadow,frustumCulled,_vector,__data", $isParticle: true};

$$.RenderableObject = {"": "Object;object=,z="};

$$.RenderableVertex = {"": "Object;positionWorld>,positionScreen>,visible=",
  copy$1: function(vertex) {
    this.positionWorld.copy$1(vertex.get$positionWorld());
    this.positionScreen.copy$1(vertex.get$positionScreen());
  }
};

$$.RenderableFace3 = {"": "Object;v1>,v2>,v3>,centroidWorld>,centroidScreen>,normalWorld>,vertexNormalsWorld>,uvs>,material=,faceMaterial=,z=", $isRenderableFace3: true};

$$.RenderableFace4 = {"": "Object;v1>,v2>,v3>,v4>,centroidWorld>,centroidScreen>,normalWorld>,vertexNormalsWorld>,uvs>,material=,faceMaterial=,z=", $isRenderableFace4: true, $isIRenderableFace4: true};

$$.RenderableLine = {"": "Object;z=,v1>,v2>,material=", $isRenderableLine: true};

$$.RenderableParticle = {"": "Object;x=,y=,z=,rotation=,scale>,material=",
  scale$2: function(arg0, arg1) {
    return this.scale.call$2(arg0, arg1);
  },
  $isRenderableParticle: true
};

$$.CanvasRenderer = {"": "Object;domElement>,_autoClear,_sortObjects,_sortElements,_canvasWidth,_canvasHeight,_canvasWidthHalf,_canvasHeightHalf,_clearColor,_clearOpacity,_camera,_canvas,_context,_contextGlobalAlpha,_contextGlobalCompositeOperation,_contextStrokeStyle,_contextFillStyle,_contextLineCap,_contextLineJoin,_contextLineWidth,_clipRect,_clearRect,_bboxRect,_info,_renderData>,_elements,_lights,_projector,_v5,_v6,_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,_v4x,_v4y,_v5x,_v5y,_v6x,_v6y,_color,_color1,_color2,_color3,_color4,_patterns,_imagedatas,_near,_far,_image,_uvs,_uv1x,_uv1y,_uv2x,_uv2y,_uv3x,_uv3y,_enableLighting,_ambientLight,_directionalLights,_pointLights,_pi2,_vector3,_pixelMapImage,_pixelMapData,_gradientMapQuality,_pixelMap,_pixelMapContext,_gradientMap,_gradientMapContext,debug",
  setSize$2: function(width, height) {
    var t1;
    this._canvasWidth = width;
    this._canvasHeight = height;
    this._canvasWidthHalf = $.floor($.$$div(this._canvasWidth, 2));
    this._canvasHeightHalf = $.floor($.$$div(this._canvasHeight, 2));
    t1 = this._canvasWidth;
    this._canvas.set$width(t1);
    t1 = this._canvasHeight;
    this._canvas.set$height(t1);
    this._clipRect.setValues$4($.$$negate(this._canvasWidthHalf), $.$$negate(this._canvasHeightHalf), this._canvasWidthHalf, this._canvasHeightHalf);
    this._clearRect.setValues$4($.$$negate(this._canvasWidthHalf), $.$$negate(this._canvasHeightHalf), this._canvasWidthHalf, this._canvasHeightHalf);
    this._contextGlobalAlpha = 1;
    this._contextGlobalCompositeOperation = 0;
    this._contextStrokeStyle = null;
    this._contextFillStyle = null;
    this._contextLineWidth = null;
    this._contextLineCap = null;
    this._contextLineJoin = null;
  },
  clear$0: function() {
    this._context.setTransform$6(1, 0, 0, -1, this._canvasWidthHalf, this._canvasHeightHalf);
    if ($.isEmpty(this._clearRect) !== true) {
      this._clearRect.minSelf$1(this._clipRect);
      this._clearRect.inflate$1(2);
      if (this._clearOpacity < 1)
        this._context.clearRect$4($.floor(this._clearRect.getX$0()), $.floor(this._clearRect.getY$0()), $.floor(this._clearRect.getWidth$0()), $.floor(this._clearRect.getHeight$0()));
      if (this._clearOpacity > 0) {
        this.setBlending$1(1);
        this.setOpacity$1(1);
        this.setFillStyle$1("rgba(" + $.S($.floor($.$$mul(this._clearColor.r, 255))) + ", " + $.S($.floor($.$$mul(this._clearColor.g, 255))) + "," + $.S($.floor($.$$mul(this._clearColor.b, 255))) + "," + $.S(this._clearOpacity) + ")");
        this._context.fillRect$4($.floor(this._clearRect.getX$0()), $.floor(this._clearRect.getY$0()), $.floor(this._clearRect.getWidth$0()), $.floor(this._clearRect.getHeight$0()));
      }
      this._clearRect.empty$0();
    }
  },
  render$2: function(scene, camera) {
    var t1, e, t2, material, _v1, _v2, t3, t4, _v3, t5, _v4, t6;
    this._camera = camera;
    if (this._autoClear)
      this.clear$0();
    else
      this._context.setTransform$6(1, 0, 0, -1, this._canvasWidthHalf, this._canvasHeightHalf);
    this._info.render.reset$0();
    this._renderData = this._projector.projectScene$3(scene, camera, this._sortElements);
    this._elements = this._renderData.get$elements();
    this._lights = this._renderData.get$lights();
    if (this.debug === true) {
      this._context.set$fillStyle("rgba( 0, 255, 255, 0.5 )");
      this._context.fillRect$4(this._clipRect.getX$0(), this._clipRect.getY$0(), this._clipRect.getWidth$0(), this._clipRect.getHeight$0());
    }
    this._enableLighting = $.$$gt($.length(this._lights), 0);
    if (this._enableLighting === true)
      this.calculateLights$1(this._lights);
    t1 = $.length(this._elements);
    if (typeof t1 !== "number")
      return this.render$2$bailout(1, scene, t1);
    for (e = 0; e < t1; ++e) {
      t2 = $.$$index(this._elements, e);
      material = t2.get$material();
      if (typeof material === "object" && material !== null && !!material.$isMeshFaceMaterial)
        material = t2.get$faceMaterial();
      if (material == null || $.$$eq(material.get$opacity(), 0) === true)
        continue;
      this._bboxRect.empty$0();
      if (this.debug === true)
        $.print($.S(t2));
      if (typeof t2 === "object" && t2 !== null && !!t2.$isRenderableParticle) {
        t2.x = $.$$mul(t2.x, this._canvasWidthHalf);
        t2.y = $.$$mul(t2.y, this._canvasHeightHalf);
        this.renderParticle$4(t2, t2, material, scene);
      } else if (typeof t2 === "object" && t2 !== null && !!t2.$isRenderableLine) {
        _v1 = t2.v1;
        _v2 = t2.v2;
        t3 = _v1.positionScreen;
        t3.x = $.$$mul(t3.x, this._canvasWidthHalf);
        t3.y = $.$$mul(t3.y, this._canvasHeightHalf);
        t4 = _v2.positionScreen;
        t4.x = $.$$mul(t4.x, this._canvasWidthHalf);
        t4.y = $.$$mul(t4.y, this._canvasHeightHalf);
        this._bboxRect.addPoint$2(t3.x, t3.y);
        this._bboxRect.addPoint$2(t4.x, t4.y);
        if (this._clipRect.intersects$1(this._bboxRect) === true)
          this.renderLine$5(_v1, _v2, t2, material, scene);
      } else if (typeof t2 === "object" && t2 !== null && !!t2.$isRenderableFace3) {
        _v1 = t2.v1;
        _v2 = t2.v2;
        _v3 = t2.v3;
        t3 = _v1.positionScreen;
        t3.x = $.$$mul(t3.x, this._canvasWidthHalf);
        t3.y = $.$$mul(t3.y, this._canvasHeightHalf);
        t4 = _v2.positionScreen;
        t4.x = $.$$mul(t4.x, this._canvasWidthHalf);
        t4.y = $.$$mul(t4.y, this._canvasHeightHalf);
        t5 = _v3.positionScreen;
        t5.x = $.$$mul(t5.x, this._canvasWidthHalf);
        t5.y = $.$$mul(t5.y, this._canvasHeightHalf);
        if (material.get$overdraw() === true) {
          this.expand$2(t3, t4);
          this.expand$2(t4, t5);
          this.expand$2(t5, t3);
        }
        this._bboxRect.add3Points$6(t3.x, t3.y, t4.x, t4.y, t5.x, t5.y);
        if (this._clipRect.intersects$1(this._bboxRect) === true)
          this.renderFace3$9(_v1, _v2, _v3, 0, 1, 2, t2, material, scene);
      } else if (typeof t2 === "object" && t2 !== null && !!t2.$isRenderableFace4) {
        _v1 = t2.v1;
        _v2 = t2.v2;
        _v3 = t2.v3;
        _v4 = t2.v4;
        t3 = _v1.positionScreen;
        t3.x = $.$$mul(t3.x, this._canvasWidthHalf);
        t3.y = $.$$mul(t3.y, this._canvasHeightHalf);
        t4 = _v2.positionScreen;
        t4.x = $.$$mul(t4.x, this._canvasWidthHalf);
        t4.y = $.$$mul(t4.y, this._canvasHeightHalf);
        t5 = _v3.positionScreen;
        t5.x = $.$$mul(t5.x, this._canvasWidthHalf);
        t5.y = $.$$mul(t5.y, this._canvasHeightHalf);
        t6 = _v4.positionScreen;
        t6.x = $.$$mul(t6.x, this._canvasWidthHalf);
        t6.y = $.$$mul(t6.y, this._canvasHeightHalf);
        this._v5.positionScreen.copy$1(t4);
        this._v6.positionScreen.copy$1(t6);
        if (material.get$overdraw() === true) {
          this.expand$2(t3, t4);
          this.expand$2(t4, t6);
          this.expand$2(t6, t3);
          this.expand$2(t5, this._v5.positionScreen);
          this.expand$2(t5, this._v6.positionScreen);
        }
        this._bboxRect.addPoint$2(t3.x, t3.y);
        this._bboxRect.addPoint$2(t4.x, t4.y);
        this._bboxRect.addPoint$2(t5.x, t5.y);
        this._bboxRect.addPoint$2(t6.x, t6.y);
        if (this._clipRect.intersects$1(this._bboxRect) === true)
          this.renderFace4$9(_v1, _v2, _v3, _v4, this._v5, this._v6, t2, material, scene);
      }
      if (this.debug === true) {
        this._context.set$lineWidth(1);
        this._context.set$strokeStyle("rgba( 0, 255, 0, 0.5 )");
        this._context.strokeRect$4(this._bboxRect.getX$0(), this._bboxRect.getY$0(), this._bboxRect.getWidth$0(), this._bboxRect.getHeight$0());
      }
      this._clearRect.addRectangle$1(this._bboxRect);
    }
    if (this.debug === true) {
      this._context.set$lineWidth(1);
      this._context.set$strokeStyle("rgba( 255, 0, 0, 0.5 )");
      this._context.strokeRect$4(this._clearRect.getX$0(), this._clearRect.getY$0(), this._clearRect.getWidth$0(), this._clearRect.getHeight$0());
    }
    this._context.setTransform$6(1, 0, 0, 1, 0, 0);
  },
  render$2$bailout: function(state0, scene, t1) {
    var e, t2, material, _v1, _v2, t3, t4, _v3, t5, _v4, t6;
    for (e = 0; $.CONSTANT0.$lt(e, t1); ++e) {
      t2 = $.$$index(this._elements, e);
      material = t2.get$material();
      if (typeof material === "object" && material !== null && !!material.$isMeshFaceMaterial)
        material = t2.get$faceMaterial();
      if (material == null || $.$$eq(material.get$opacity(), 0) === true)
        continue;
      this._bboxRect.empty$0();
      if (this.debug === true)
        $.print($.S(t2));
      if (typeof t2 === "object" && t2 !== null && !!t2.$isRenderableParticle) {
        t2.x = $.$$mul(t2.x, this._canvasWidthHalf);
        t2.y = $.$$mul(t2.y, this._canvasHeightHalf);
        this.renderParticle$4(t2, t2, material, scene);
      } else if (typeof t2 === "object" && t2 !== null && !!t2.$isRenderableLine) {
        _v1 = t2.v1;
        _v2 = t2.v2;
        t3 = _v1.positionScreen;
        t3.x = $.$$mul(t3.x, this._canvasWidthHalf);
        t3.y = $.$$mul(t3.y, this._canvasHeightHalf);
        t4 = _v2.positionScreen;
        t4.x = $.$$mul(t4.x, this._canvasWidthHalf);
        t4.y = $.$$mul(t4.y, this._canvasHeightHalf);
        this._bboxRect.addPoint$2(t3.x, t3.y);
        this._bboxRect.addPoint$2(t4.x, t4.y);
        if (this._clipRect.intersects$1(this._bboxRect) === true)
          this.renderLine$5(_v1, _v2, t2, material, scene);
      } else if (typeof t2 === "object" && t2 !== null && !!t2.$isRenderableFace3) {
        _v1 = t2.v1;
        _v2 = t2.v2;
        _v3 = t2.v3;
        t3 = _v1.positionScreen;
        t3.x = $.$$mul(t3.x, this._canvasWidthHalf);
        t3.y = $.$$mul(t3.y, this._canvasHeightHalf);
        t4 = _v2.positionScreen;
        t4.x = $.$$mul(t4.x, this._canvasWidthHalf);
        t4.y = $.$$mul(t4.y, this._canvasHeightHalf);
        t5 = _v3.positionScreen;
        t5.x = $.$$mul(t5.x, this._canvasWidthHalf);
        t5.y = $.$$mul(t5.y, this._canvasHeightHalf);
        if (material.get$overdraw() === true) {
          this.expand$2(t3, t4);
          this.expand$2(t4, t5);
          this.expand$2(t5, t3);
        }
        this._bboxRect.add3Points$6(t3.x, t3.y, t4.x, t4.y, t5.x, t5.y);
        if (this._clipRect.intersects$1(this._bboxRect) === true)
          this.renderFace3$9(_v1, _v2, _v3, 0, 1, 2, t2, material, scene);
      } else if (typeof t2 === "object" && t2 !== null && !!t2.$isRenderableFace4) {
        _v1 = t2.v1;
        _v2 = t2.v2;
        _v3 = t2.v3;
        _v4 = t2.v4;
        t3 = _v1.positionScreen;
        t3.x = $.$$mul(t3.x, this._canvasWidthHalf);
        t3.y = $.$$mul(t3.y, this._canvasHeightHalf);
        t4 = _v2.positionScreen;
        t4.x = $.$$mul(t4.x, this._canvasWidthHalf);
        t4.y = $.$$mul(t4.y, this._canvasHeightHalf);
        t5 = _v3.positionScreen;
        t5.x = $.$$mul(t5.x, this._canvasWidthHalf);
        t5.y = $.$$mul(t5.y, this._canvasHeightHalf);
        t6 = _v4.positionScreen;
        t6.x = $.$$mul(t6.x, this._canvasWidthHalf);
        t6.y = $.$$mul(t6.y, this._canvasHeightHalf);
        this._v5.positionScreen.copy$1(t4);
        this._v6.positionScreen.copy$1(t6);
        if (material.get$overdraw() === true) {
          this.expand$2(t3, t4);
          this.expand$2(t4, t6);
          this.expand$2(t6, t3);
          this.expand$2(t5, this._v5.positionScreen);
          this.expand$2(t5, this._v6.positionScreen);
        }
        this._bboxRect.addPoint$2(t3.x, t3.y);
        this._bboxRect.addPoint$2(t4.x, t4.y);
        this._bboxRect.addPoint$2(t5.x, t5.y);
        this._bboxRect.addPoint$2(t6.x, t6.y);
        if (this._clipRect.intersects$1(this._bboxRect) === true)
          this.renderFace4$9(_v1, _v2, _v3, _v4, this._v5, this._v6, t2, material, scene);
      }
      if (this.debug === true) {
        this._context.set$lineWidth(1);
        this._context.set$strokeStyle("rgba( 0, 255, 0, 0.5 )");
        this._context.strokeRect$4(this._bboxRect.getX$0(), this._bboxRect.getY$0(), this._bboxRect.getWidth$0(), this._bboxRect.getHeight$0());
      }
      this._clearRect.addRectangle$1(this._bboxRect);
    }
    if (this.debug === true) {
      this._context.set$lineWidth(1);
      this._context.set$strokeStyle("rgba( 255, 0, 0, 0.5 )");
      this._context.strokeRect$4(this._clearRect.getX$0(), this._clearRect.getY$0(), this._clearRect.getWidth$0(), this._clearRect.getHeight$0());
    }
    this._context.setTransform$6(1, 0, 0, 1, 0, 0);
  },
  calculateLights$1: function(lights) {
    var ll, l, light, lightColor, t1;
    if (typeof lights !== "string" && (typeof lights !== "object" || lights === null || lights.constructor !== Array && !lights.$isJavaScriptIndexingBehavior()))
      return this.calculateLights$1$bailout(1, lights);
    this._ambientLight.setRGB$3(0, 0, 0);
    this._directionalLights.setRGB$3(0, 0, 0);
    this._pointLights.setRGB$3(0, 0, 0);
    ll = lights.length;
    for (l = 0; l < ll; ++l) {
      if (l >= lights.length)
        throw $.ioore(l);
      light = lights[l];
      lightColor = light.get$color();
      if (typeof light === "object" && light !== null && !!light.$isAmbientLight) {
        t1 = this._ambientLight;
        t1.r = $.$$add(t1.r, lightColor.get$r());
        t1 = this._ambientLight;
        t1.g = $.$$add(t1.g, lightColor.get$g());
        t1 = this._ambientLight;
        t1.b = $.$$add(t1.b, lightColor.get$b());
      } else if (typeof light === "object" && light !== null && !!light.$isDirectionalLight) {
        t1 = this._directionalLights;
        t1.r = $.$$add(t1.r, lightColor.get$r());
        t1 = this._directionalLights;
        t1.g = $.$$add(t1.g, lightColor.get$g());
        t1 = this._directionalLights;
        t1.b = $.$$add(t1.b, lightColor.get$b());
      } else if (typeof light === "object" && light !== null && !!light.$isPointLight) {
        t1 = this._pointLights;
        t1.r = $.$$add(t1.r, lightColor.get$r());
        t1 = this._pointLights;
        t1.g = $.$$add(t1.g, lightColor.get$g());
        t1 = this._pointLights;
        t1.b = $.$$add(t1.b, lightColor.get$b());
      }
    }
  },
  calculateLights$1$bailout: function(state0, lights, t1, ll) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        this._ambientLight.setRGB$3(0, 0, 0);
        this._directionalLights.setRGB$3(0, 0, 0);
        this._pointLights.setRGB$3(0, 0, 0);
        t1 = $.getInterceptor$JSStringJSArray(lights);
        ll = t1.get$length(lights);
      case 2:
        var l, light, lightColor, t2;
        state0 = 0;
        for (l = 0; $.CONSTANT0.$lt(l, ll); ++l) {
          light = t1.$index(lights, l);
          lightColor = light.get$color();
          if (typeof light === "object" && light !== null && !!light.$isAmbientLight) {
            t2 = this._ambientLight;
            t2.r = $.$$add(t2.r, lightColor.get$r());
            t2 = this._ambientLight;
            t2.g = $.$$add(t2.g, lightColor.get$g());
            t2 = this._ambientLight;
            t2.b = $.$$add(t2.b, lightColor.get$b());
          } else if (typeof light === "object" && light !== null && !!light.$isDirectionalLight) {
            t2 = this._directionalLights;
            t2.r = $.$$add(t2.r, lightColor.get$r());
            t2 = this._directionalLights;
            t2.g = $.$$add(t2.g, lightColor.get$g());
            t2 = this._directionalLights;
            t2.b = $.$$add(t2.b, lightColor.get$b());
          } else if (typeof light === "object" && light !== null && !!light.$isPointLight) {
            t2 = this._pointLights;
            t2.r = $.$$add(t2.r, lightColor.get$r());
            t2 = this._pointLights;
            t2.g = $.$$add(t2.g, lightColor.get$g());
            t2 = this._pointLights;
            t2.b = $.$$add(t2.b, lightColor.get$b());
          }
        }
    }
  },
  calculateLight$4: function(lights, position, normal, color) {
    var ll, lightPosition, amount, l, light, lightColor, t1, t2;
    if (typeof lights !== "string" && (typeof lights !== "object" || lights === null || lights.constructor !== Array && !lights.$isJavaScriptIndexingBehavior()))
      return this.calculateLight$4$bailout(1, lights, position, normal, color);
    ll = lights.length;
    for (lightPosition = null, amount = null, l = 0; l < ll; ++l) {
      if (l >= lights.length)
        throw $.ioore(l);
      light = lights[l];
      lightColor = light.get$color();
      if (typeof light === "object" && light !== null && !!light.$isDirectionalLight) {
        lightPosition = light.matrixWorld.getPosition$0();
        amount = normal.dot$1(lightPosition);
        t1 = $.getInterceptor$JSNumber(amount);
        if (t1.$le(amount, 0) === true)
          continue;
        amount = t1.$mul(amount, light.intensity);
        color.r = $.$$add(color.r, $.$$mul(lightColor.get$r(), amount));
        color.g = $.$$add(color.g, $.$$mul(lightColor.get$g(), amount));
        color.b = $.$$add(color.b, $.$$mul(lightColor.get$b(), amount));
      } else if (typeof light === "object" && light !== null && !!light.$isPointLight) {
        lightPosition = light.matrixWorld.getPosition$0();
        amount = normal.dot$1(this._vector3.sub$2(lightPosition, position).normalize$0());
        t1 = $.getInterceptor$JSNumber(amount);
        if (t1.$le(amount, 0) === true)
          continue;
        t2 = light.distance;
        amount = t1.$mul(amount, $.$$eq(t2, 0) === true ? 1 : 1 - $.min($.$$div(position.distanceTo$1(lightPosition), t2), 1));
        t1 = $.getInterceptor(amount);
        if (t1.$eq(amount, 0) === true)
          continue;
        amount = t1.$mul(amount, light.intensity);
        color.r = $.$$add(color.r, $.$$mul(lightColor.get$r(), amount));
        color.g = $.$$add(color.g, $.$$mul(lightColor.get$g(), amount));
        color.b = $.$$add(color.b, $.$$mul(lightColor.get$b(), amount));
      }
    }
  },
  calculateLight$4$bailout: function(state0, lights, position, normal, color, t1, ll) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSStringJSArray(lights);
        ll = t1.get$length(lights);
      case 2:
        var lightPosition, amount, l, light, lightColor, t2, t3;
        state0 = 0;
        for (lightPosition = null, amount = null, l = 0; $.CONSTANT0.$lt(l, ll); ++l) {
          light = t1.$index(lights, l);
          lightColor = light.get$color();
          if (typeof light === "object" && light !== null && !!light.$isDirectionalLight) {
            lightPosition = light.matrixWorld.getPosition$0();
            amount = normal.dot$1(lightPosition);
            t2 = $.getInterceptor$JSNumber(amount);
            if (t2.$le(amount, 0) === true)
              continue;
            amount = t2.$mul(amount, light.intensity);
            color.r = $.$$add(color.r, $.$$mul(lightColor.get$r(), amount));
            color.g = $.$$add(color.g, $.$$mul(lightColor.get$g(), amount));
            color.b = $.$$add(color.b, $.$$mul(lightColor.get$b(), amount));
          } else if (typeof light === "object" && light !== null && !!light.$isPointLight) {
            lightPosition = light.matrixWorld.getPosition$0();
            amount = normal.dot$1(this._vector3.sub$2(lightPosition, position).normalize$0());
            t2 = $.getInterceptor$JSNumber(amount);
            if (t2.$le(amount, 0) === true)
              continue;
            t3 = light.distance;
            amount = t2.$mul(amount, $.$$eq(t3, 0) === true ? 1 : 1 - $.min($.$$div(position.distanceTo$1(lightPosition), t3), 1));
            t2 = $.getInterceptor(amount);
            if (t2.$eq(amount, 0) === true)
              continue;
            amount = t2.$mul(amount, light.intensity);
            color.r = $.$$add(color.r, $.$$mul(lightColor.get$r(), amount));
            color.g = $.$$add(color.g, $.$$mul(lightColor.get$g(), amount));
            color.b = $.$$add(color.b, $.$$mul(lightColor.get$b(), amount));
          }
        }
    }
  },
  renderParticle$4: function(v1, element, material, scene) {
    var t1, bitmap, t3, t5, t6, t8, t10, height, t12, t13, t15, t16, t2, t4, t7, t9, t11;
    this.setOpacity$1(material.get$opacity());
    this.setBlending$1(material.get$blending());
    if (typeof material === "object" && material !== null && !!material.$isParticleBasicMaterial) {
      t1 = material.map;
      if (t1 === true) {
        bitmap = t1.get$image();
        t1 = bitmap.get$width();
        if (t1 !== (t1 | 0))
          return this.renderParticle$4$bailout(1, v1, element, bitmap, t1);
        t1 = $.CONSTANT0.$shr(t1, 1);
        t3 = bitmap.get$height();
        if (t3 !== (t3 | 0))
          return this.renderParticle$4$bailout(2, v1, element, bitmap, t1, t3);
        t3 = $.CONSTANT0.$shr(t3, 1);
        t5 = element.scale;
        t6 = t5.x;
        t8 = this._canvasWidthHalf;
        if (typeof t6 !== "number")
          return this.renderParticle$4$bailout(3, v1, element, bitmap, t1, t3, t5, t6);
        if (typeof t8 !== "number")
          return this.renderParticle$4$bailout(4, v1, element, bitmap, t1, t3, t5, t6, t8);
        t8 = t6 * t8;
        t5 = t5.y;
        t10 = this._canvasHeightHalf;
        if (typeof t5 !== "number")
          return this.renderParticle$4$bailout(5, v1, element, bitmap, t1, t3, t5, null, t8);
        if (typeof t10 !== "number")
          return this.renderParticle$4$bailout(6, v1, element, bitmap, t1, t3, t5, null, t8, t10);
        t10 = t5 * t10;
        t5 = t8 * t1;
        height = t10 * t3;
        t12 = this._bboxRect;
        t13 = v1.x;
        if (typeof t13 !== "number")
          return this.renderParticle$4$bailout(7, v1, element, bitmap, t1, t3, t5, null, t8, t10, $.CONSTANT1, height, t12, t13);
        t15 = t13 - t5;
        t16 = v1.y;
        if (typeof t16 !== "number")
          return this.renderParticle$4$bailout(8, v1, element, bitmap, t1, t3, t5, null, t8, t10, $.CONSTANT1, height, t12, t15, t16);
        t12.setValues$4(t15, t16 - height, t13 + t5, t16 + height);
        if (this._clipRect.intersects$1(this._bboxRect) !== true)
          return;
        this._context.save$0();
        this._context.translate$2(v1.x, v1.y);
        t2 = this._context;
        t4 = element.rotation;
        if (typeof t4 !== "number")
          return this.renderParticle$4$bailout(11, v1, null, bitmap, t1, t3, null, null, t8, t10, $.CONSTANT1, null, null, null, null, null, t2, t4);
        t2.rotate$1(-t4);
        this._context.scale$2(t8, -t10);
        this._context.translate$2(-t1, -t3);
        this._context.drawImage$3(bitmap, 0, 0);
        this._context.restore$0();
      }
      if (this.debug === true) {
        this._context.beginPath$0();
        t1 = this._context;
        t2 = v1.x;
        if (typeof t2 !== "number")
          return this.renderParticle$4$bailout(12, v1, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, t2);
        t1.moveTo$2(t2 - 10, v1.y);
        t1 = this._context;
        t4 = v1.x;
        if (typeof t4 !== "number")
          return this.renderParticle$4$bailout(13, v1, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, t4);
        t1.lineTo$2(t4 + 10, v1.y);
        t1 = this._context;
        t6 = v1.x;
        t7 = v1.y;
        if (typeof t7 !== "number")
          return this.renderParticle$4$bailout(14, v1, null, null, t1, null, null, t6, null, null, null, null, null, null, null, null, null, null, t7);
        t1.moveTo$2(t6, t7 - 10);
        t6 = this._context;
        t1 = v1.x;
        t9 = v1.y;
        if (typeof t9 !== "number")
          return this.renderParticle$4$bailout(15, v1, null, null, t1, null, null, t6, null, null, null, null, null, null, null, null, null, null, null, t9);
        t6.lineTo$2(t1, t9 + 10);
        this._context.closePath$0();
        this._context.set$strokeStyle("rgb(255,255,0)");
        this._context.stroke$0();
        if (this.debug === true)
          $.print("renderParticle " + $.S(v1) + " at (" + $.S(v1.x) + ", " + $.S(v1.y) + ")");
      }
    } else if (typeof material === "object" && material !== null && !!material.$isParticleCanvasMaterial) {
      t1 = element.scale;
      t2 = t1.x;
      t4 = this._canvasWidthHalf;
      if (typeof t2 !== "number")
        return this.renderParticle$4$bailout(16, v1, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, t2, null, null, null, material);
      if (typeof t4 !== "number")
        return this.renderParticle$4$bailout(17, v1, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, t2, t4, null, null, material);
      t4 = t2 * t4;
      t1 = t1.y;
      t6 = this._canvasHeightHalf;
      if (typeof t1 !== "number")
        return this.renderParticle$4$bailout(18, v1, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, t4, null, null, material);
      if (typeof t6 !== "number")
        return this.renderParticle$4$bailout(19, v1, element, null, t1, null, null, t6, null, null, null, null, null, null, null, null, null, t4, null, null, material);
      t6 = t1 * t6;
      t1 = this._bboxRect;
      t8 = v1.x;
      if (typeof t8 !== "number")
        return this.renderParticle$4$bailout(20, v1, element, null, t1, null, null, t6, t8, null, null, null, null, null, null, null, null, t4, null, null, material);
      t10 = t8 - t4;
      t11 = v1.y;
      if (typeof t11 !== "number")
        return this.renderParticle$4$bailout(21, v1, element, null, t1, null, null, t6, t10, t11, null, null, null, null, null, null, null, t4, null, null, material);
      t1.setValues$4(t10, t11 - t6, t8 + t4, t11 + t6);
      if (this._clipRect.intersects$1(this._bboxRect) !== true)
        return;
      this.setStrokeStyle$1(material.color.getContextStyle$0());
      this.setFillStyle$1(material.color.getContextStyle$0());
      this._context.save$0();
      this._context.translate$2(v1.x, v1.y);
      t1 = this._context;
      t2 = element.rotation;
      if (typeof t2 !== "number")
        return this.renderParticle$4$bailout(24, null, null, null, t1, null, null, t6, null, null, null, null, null, null, null, null, t2, t4, null, null, material);
      t1.rotate$1(-t2);
      this._context.scale$2(t4, t6);
      material.program$1(this._context);
      this._context.restore$0();
    }
  },
  renderParticle$4$bailout: function(state0, v1, element, bitmap, t1, t3, t5, t6, t8, t10, t12, height, t13, t14, t16, t18, t2, t4, t7, t9, material) {
    switch (state0) {
      case 0:
        this.setOpacity$1(material.get$opacity());
        this.setBlending$1(material.get$blending());
      default:
        if (state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof material === "object" && material !== null && !!material.$isParticleBasicMaterial)
          switch (state0) {
            case 0:
              t1 = material.map;
            default:
              if (state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && t1 === true)
                switch (state0) {
                  case 0:
                    bitmap = t1.get$image();
                    t1 = bitmap.get$width();
                  case 1:
                    state0 = 0;
                    t1 = $.$$shr(t1, 1);
                    t3 = bitmap.get$height();
                  case 2:
                    state0 = 0;
                    t3 = $.$$shr(t3, 1);
                    t5 = element.scale;
                    t6 = t5.x;
                  case 3:
                    state0 = 0;
                    t8 = this._canvasWidthHalf;
                  case 4:
                    state0 = 0;
                    t8 = $.$$mul(t6, t8);
                    t5 = t5.y;
                  case 5:
                    state0 = 0;
                    t10 = this._canvasHeightHalf;
                  case 6:
                    state0 = 0;
                    t10 = $.$$mul(t5, t10);
                    t5 = $.$$mul(t8, t1);
                    t12 = $.getInterceptor$JSNumber(t10);
                    height = t12.$mul(t10, t3);
                    t13 = this._bboxRect;
                    t14 = v1.x;
                  case 7:
                    state0 = 0;
                    t14 = $.$$sub(t14, t5);
                    t16 = v1.y;
                  case 8:
                    state0 = 0;
                    t16 = $.$$sub(t16, height);
                    t18 = v1.x;
                  case 9:
                    state0 = 0;
                    t5 = $.$$add(t18, t5);
                    t18 = v1.y;
                  case 10:
                    state0 = 0;
                    t13.setValues$4(t14, t16, t5, $.$$add(t18, height));
                    if (this._clipRect.intersects$1(this._bboxRect) !== true)
                      return;
                    this._context.save$0();
                    this._context.translate$2(v1.x, v1.y);
                    t2 = this._context;
                    t4 = element.rotation;
                  case 11:
                    state0 = 0;
                    t2.rotate$1($.$$negate(t4));
                    this._context.scale$2(t8, t12.$negate(t10));
                    this._context.translate$2($.$$negate(t1), $.$$negate(t3));
                    this._context.drawImage$3(bitmap, 0, 0);
                    this._context.restore$0();
                }
            case 12:
            case 13:
            case 14:
            case 15:
              if (state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 0 && this.debug === true)
                switch (state0) {
                  case 0:
                    this._context.beginPath$0();
                    t1 = this._context;
                    t2 = v1.x;
                  case 12:
                    state0 = 0;
                    t1.moveTo$2($.$$sub(t2, 10), v1.y);
                    t1 = this._context;
                    t4 = v1.x;
                  case 13:
                    state0 = 0;
                    t1.lineTo$2($.$$add(t4, 10), v1.y);
                    t1 = this._context;
                    t6 = v1.x;
                    t7 = v1.y;
                  case 14:
                    state0 = 0;
                    t1.moveTo$2(t6, $.$$sub(t7, 10));
                    t6 = this._context;
                    t1 = v1.x;
                    t9 = v1.y;
                  case 15:
                    state0 = 0;
                    t6.lineTo$2(t1, $.$$add(t9, 10));
                    this._context.closePath$0();
                    this._context.set$strokeStyle("rgb(255,255,0)");
                    this._context.stroke$0();
                    if (this.debug === true)
                      $.print("renderParticle " + $.S(v1) + " at (" + $.S(v1.x) + ", " + $.S(v1.y) + ")");
                }
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 0 && typeof material === "object" && material !== null && !!material.$isParticleCanvasMaterial)
                switch (state0) {
                  case 0:
                    t1 = element.scale;
                    t2 = t1.x;
                  case 16:
                    state0 = 0;
                    t4 = this._canvasWidthHalf;
                  case 17:
                    state0 = 0;
                    t4 = $.$$mul(t2, t4);
                    t1 = t1.y;
                  case 18:
                    state0 = 0;
                    t6 = this._canvasHeightHalf;
                  case 19:
                    state0 = 0;
                    t6 = $.$$mul(t1, t6);
                    t1 = this._bboxRect;
                    t8 = v1.x;
                  case 20:
                    state0 = 0;
                    t8 = $.$$sub(t8, t4);
                    t10 = v1.y;
                  case 21:
                    state0 = 0;
                    t10 = $.$$sub(t10, t6);
                    t12 = v1.x;
                  case 22:
                    state0 = 0;
                    t12 = $.$$add(t12, t4);
                    t14 = v1.y;
                  case 23:
                    state0 = 0;
                    t1.setValues$4(t8, t10, t12, $.$$add(t14, t6));
                    if (this._clipRect.intersects$1(this._bboxRect) !== true)
                      return;
                    this.setStrokeStyle$1(material.color.getContextStyle$0());
                    this.setFillStyle$1(material.color.getContextStyle$0());
                    this._context.save$0();
                    this._context.translate$2(v1.x, v1.y);
                    t1 = this._context;
                    t2 = element.rotation;
                  case 24:
                    state0 = 0;
                    t1.rotate$1($.$$negate(t2));
                    this._context.scale$2(t4, t6);
                    material.program$1(this._context);
                    this._context.restore$0();
                }
          }
    }
  },
  renderLine$5: function(v1, v2, element, material, scene) {
    var t1, t2, t3;
    this.setOpacity$1(material.get$opacity());
    this.setBlending$1(material.get$blending());
    this._context.beginPath$0();
    t1 = this._context;
    t2 = v1.get$positionScreen();
    t1.moveTo$2(t2.get$x(), t2.get$y());
    t1 = this._context;
    t3 = v2.get$positionScreen();
    t1.lineTo$2(t3.get$x(), t3.get$y());
    this._context.closePath$0();
    if (typeof material === "object" && material !== null && !!material.$isLineBasicMaterial) {
      t1 = material.linewidth;
      if (typeof t1 !== "number")
        return this.renderLine$5$bailout(1, v1, v2, element, material, t1);
      this.setLineWidth$1(t1);
      this.setLineCap$1(material.linecap);
      this.setLineJoin$1(material.linejoin);
      this.setStrokeStyle$1(material.color.getContextStyle$0());
      this._context.stroke$0();
      this._bboxRect.inflate$1(t1 * 2);
    }
    if (this.debug === true)
      $.print("renderLine " + $.S(element) + " at (" + $.S(v1.get$positionScreen().get$x()) + ", " + $.S(v1.get$positionScreen().get$y()) + ") to (" + $.S(v2.get$positionScreen().get$x()) + ", " + $.S(v2.get$positionScreen().get$y()) + ")");
  },
  renderLine$5$bailout: function(state0, v1, v2, element, material, t1) {
    switch (state0) {
      case 0:
        this.setOpacity$1(material.get$opacity());
        this.setBlending$1(material.get$blending());
        this._context.beginPath$0();
        t1 = this._context;
        t2 = v1.get$positionScreen();
        t1.moveTo$2(t2.get$x(), t2.get$y());
        t1 = this._context;
        t3 = v2.get$positionScreen();
        t1.lineTo$2(t3.get$x(), t3.get$y());
        this._context.closePath$0();
      case 1:
        var t2, t3;
        if (state0 === 1 || state0 === 0 && typeof material === "object" && material !== null && !!material.$isLineBasicMaterial)
          switch (state0) {
            case 0:
              t1 = material.linewidth;
            case 1:
              state0 = 0;
              this.setLineWidth$1(t1);
              this.setLineCap$1(material.linecap);
              this.setLineJoin$1(material.linejoin);
              this.setStrokeStyle$1(material.color.getContextStyle$0());
              this._context.stroke$0();
              this._bboxRect.inflate$1($.$$mul(t1, 2));
          }
        if (this.debug === true)
          $.print("renderLine " + $.S(element) + " at (" + $.S(v1.get$positionScreen().get$x()) + ", " + $.S(v1.get$positionScreen().get$y()) + ") to (" + $.S(v2.get$positionScreen().get$x()) + ", " + $.S(v2.get$positionScreen().get$y()) + ")");
    }
  },
  renderFace3$9: function(v1, v2, v3, uv1, uv2, uv3, element, material, scene) {
    var t1, t2, t4, t5, t6, t7, t8, t9, t10, t12, t13, t14, t15, t16, cameraMatrix, t3, t18, t20, t24, t27, t29, t32, t33, t36, t40, t43, t45, t48, t50, t54, t57, t59, t62, t63, t66, t70, t73, t75, t78, t80, t84, t87, t89, t11, t17, t19, t21, t23, t25, t31, t35, t37, t39, t41, t47, t49, t51, t53;
    t1 = this._info.render;
    t2 = t1.vertices;
    if (typeof t2 !== "number")
      return this.renderFace3$9$bailout(1, v1, v2, v3, uv1, uv2, uv3, element, material, t1, t2);
    t1.vertices = t2 + 3;
    t1 = this._info.render;
    t4 = t1.faces;
    if (typeof t4 !== "number")
      return this.renderFace3$9$bailout(2, v1, v2, v3, uv1, uv2, uv3, element, material, t1, null, t4);
    t1.faces = t4 + 1;
    this.setOpacity$1(material.get$opacity());
    this.setBlending$1(material.get$blending());
    this._v1x = v1.get$positionScreen().get$x();
    this._v1y = v1.get$positionScreen().get$y();
    this._v2x = v2.get$positionScreen().get$x();
    this._v2y = v2.get$positionScreen().get$y();
    this._v3x = v3.get$positionScreen().get$x();
    this._v3y = v3.get$positionScreen().get$y();
    this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y);
    if (typeof material === "object" && material !== null && !!material.$isMeshBasicMaterial) {
      t1 = material.map;
      if (!(t1 == null)) {
        t2 = t1.get$mapping();
        if (typeof t2 === "object" && t2 !== null && !!t2.$isUVMapping) {
          t2 = element.get$uvs();
          if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(3, null, null, null, uv1, uv2, uv3, null, null, t1, t2);
          if (0 >= t2.length)
            throw $.ioore(0);
          this._uvs = t2[0];
          t4 = this._v1x;
          t5 = this._v1y;
          t6 = this._v2x;
          t7 = this._v2y;
          t8 = this._v3x;
          t9 = this._v3y;
          t10 = this._uvs;
          if (typeof t10 !== "string" && (typeof t10 !== "object" || t10 === null || t10.constructor !== Array && !t10.$isJavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(4, null, null, null, uv1, uv2, uv3, null, null, t1, null, t4, t7, t8, t9, t10, t5, t6);
          if (uv1 < 0 || uv1 >= t10.length)
            throw $.ioore(uv1);
          t12 = t10[uv1].get$u();
          if (uv1 >= t10.length)
            throw $.ioore(uv1);
          t13 = t10[uv1].get$v();
          if (uv2 < 0 || uv2 >= t10.length)
            throw $.ioore(uv2);
          t14 = t10[uv2].get$u();
          if (uv2 >= t10.length)
            throw $.ioore(uv2);
          t15 = t10[uv2].get$v();
          if (uv3 < 0 || uv3 >= t10.length)
            throw $.ioore(uv3);
          t16 = t10[uv3].get$u();
          if (uv3 >= t10.length)
            throw $.ioore(uv3);
          this.patternPath$13(t4, t5, t6, t7, t8, t9, t12, t13, t14, t15, t16, t10[uv3].get$v(), t1);
        }
      } else {
        t1 = material.envMap;
        if (!(null == t1)) {
          t2 = t1.get$mapping();
          if (typeof t2 === "object" && t2 !== null && !!t2.$isSphericalReflectionMapping) {
            cameraMatrix = this._camera.get$matrixWorldInverse();
            t2 = this._vector3;
            t3 = element.get$vertexNormalsWorld();
            if (typeof t3 !== "string" && (typeof t3 !== "object" || t3 === null || t3.constructor !== Array && !t3.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(10, null, null, null, uv1, uv2, uv3, element, null, t1, t2, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, t3);
            if (uv1 < 0 || uv1 >= t3.length)
              throw $.ioore(uv1);
            t2.copy$1(t3[uv1]);
            t2 = this._vector3.x;
            t6 = cameraMatrix.get$elements();
            if (typeof t6 !== "string" && (typeof t6 !== "object" || t6 === null || t6.constructor !== Array && !t6.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(12, null, null, null, null, uv2, uv3, element, null, t1, t2, null, null, null, null, null, null, t6, null, null, null, null, null, null, null, null, null, null, cameraMatrix);
            if (0 >= t6.length)
              throw $.ioore(0);
            t6 = t6[0];
            if (typeof t2 !== "number")
              return this.renderFace3$9$bailout(11, null, null, null, null, uv2, uv3, element, null, t1, t2, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix);
            if (typeof t6 !== "number")
              return this.renderFace3$9$bailout(13, null, null, null, null, uv2, uv3, element, null, t1, t2, null, null, null, null, null, null, t6, null, null, null, null, null, null, null, null, null, null, cameraMatrix);
            t6 = t2 * t6;
            t2 = this._vector3.y;
            t10 = cameraMatrix.get$elements();
            if (typeof t10 !== "string" && (typeof t10 !== "object" || t10 === null || t10.constructor !== Array && !t10.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(15, null, null, null, null, uv2, uv3, element, null, t1, t2, null, null, null, null, t10, null, t6, null, null, null, null, null, null, null, null, null, null, cameraMatrix);
            if (4 >= t10.length)
              throw $.ioore(4);
            t10 = t10[4];
            if (typeof t2 !== "number")
              return this.renderFace3$9$bailout(14, null, null, null, null, uv2, uv3, element, null, t1, t2, null, null, null, null, null, null, t6, null, null, null, null, null, null, null, null, null, null, cameraMatrix);
            if (typeof t10 !== "number")
              return this.renderFace3$9$bailout(16, null, null, null, null, uv2, uv3, element, null, t1, t2, null, null, null, null, t10, null, t6, null, null, null, null, null, null, null, null, null, null, cameraMatrix);
            t6 += t2 * t10;
            t13 = this._vector3.z;
            t15 = cameraMatrix.get$elements();
            if (typeof t15 !== "string" && (typeof t15 !== "object" || t15 === null || t15.constructor !== Array && !t15.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(18, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, t6, t13, null, null, t15, null, null, null, null, null, null, cameraMatrix);
            if (8 >= t15.length)
              throw $.ioore(8);
            t15 = t15[8];
            if (typeof t13 !== "number")
              return this.renderFace3$9$bailout(17, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, t6, t13, null, null, null, null, null, null, null, null, null, cameraMatrix);
            if (typeof t15 !== "number")
              return this.renderFace3$9$bailout(19, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, t6, t13, null, null, t15, null, null, null, null, null, null, cameraMatrix);
            this._uv1x = (t6 + t13 * t15) * 0.5 + 0.5;
            t18 = this._vector3.x;
            t20 = cameraMatrix.get$elements();
            if (typeof t20 !== "string" && (typeof t20 !== "object" || t20 === null || t20.constructor !== Array && !t20.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(21, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, t18, null, null, null, null, cameraMatrix, null, t20);
            if (1 >= t20.length)
              throw $.ioore(1);
            t20 = t20[1];
            if (typeof t18 !== "number")
              return this.renderFace3$9$bailout(20, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, t18, null, null, null, null, cameraMatrix);
            if (typeof t20 !== "number")
              return this.renderFace3$9$bailout(22, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, t18, null, null, null, null, cameraMatrix, null, t20);
            t20 = t18 * t20;
            t18 = this._vector3.y;
            t24 = cameraMatrix.get$elements();
            if (typeof t24 !== "string" && (typeof t24 !== "object" || t24 === null || t24.constructor !== Array && !t24.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(24, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, t18, null, null, t24, null, cameraMatrix, null, t20);
            if (5 >= t24.length)
              throw $.ioore(5);
            t24 = t24[5];
            if (typeof t18 !== "number")
              return this.renderFace3$9$bailout(23, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, t18, null, null, null, null, cameraMatrix, null, t20);
            if (typeof t24 !== "number")
              return this.renderFace3$9$bailout(25, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, t18, null, null, t24, null, cameraMatrix, null, t20);
            t20 += t18 * t24;
            t27 = this._vector3.z;
            t29 = cameraMatrix.get$elements();
            if (typeof t29 !== "string" && (typeof t29 !== "object" || t29 === null || t29.constructor !== Array && !t29.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(27, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, t20, t27, t29);
            if (9 >= t29.length)
              throw $.ioore(9);
            t29 = t29[9];
            if (typeof t27 !== "number")
              return this.renderFace3$9$bailout(26, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, t20, t27);
            if (typeof t29 !== "number")
              return this.renderFace3$9$bailout(28, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, t20, t27, t29);
            this._uv1y = -(t20 + t27 * t29) * 0.5 + 0.5;
            t32 = this._vector3;
            t33 = element.get$vertexNormalsWorld();
            if (typeof t33 !== "string" && (typeof t33 !== "object" || t33 === null || t33.constructor !== Array && !t33.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(29, null, null, null, null, uv2, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, t33, t32);
            if (uv2 < 0 || uv2 >= t33.length)
              throw $.ioore(uv2);
            t32.copy$1(t33[uv2]);
            t32 = this._vector3.x;
            t36 = cameraMatrix.get$elements();
            if (typeof t36 !== "string" && (typeof t36 !== "object" || t36 === null || t36.constructor !== Array && !t36.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(31, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, t32, t36);
            if (0 >= t36.length)
              throw $.ioore(0);
            t36 = t36[0];
            if (typeof t32 !== "number")
              return this.renderFace3$9$bailout(30, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, t32);
            if (typeof t36 !== "number")
              return this.renderFace3$9$bailout(32, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, t32, t36);
            t36 = t32 * t36;
            t32 = this._vector3.y;
            t40 = cameraMatrix.get$elements();
            if (typeof t40 !== "string" && (typeof t40 !== "object" || t40 === null || t40.constructor !== Array && !t40.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(34, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, t32, t36, t40);
            if (4 >= t40.length)
              throw $.ioore(4);
            t40 = t40[4];
            if (typeof t32 !== "number")
              return this.renderFace3$9$bailout(33, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, t32, t36);
            if (typeof t40 !== "number")
              return this.renderFace3$9$bailout(35, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, t32, t36, t40);
            t36 += t32 * t40;
            t43 = this._vector3.z;
            t45 = cameraMatrix.get$elements();
            if (typeof t45 !== "string" && (typeof t45 !== "object" || t45 === null || t45.constructor !== Array && !t45.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(37, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, t36, null, t43, t45);
            if (8 >= t45.length)
              throw $.ioore(8);
            t45 = t45[8];
            if (typeof t43 !== "number")
              return this.renderFace3$9$bailout(36, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, t36, null, t43);
            if (typeof t45 !== "number")
              return this.renderFace3$9$bailout(38, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, t36, null, t43, t45);
            this._uv2x = (t36 + t43 * t45) * 0.5 + 0.5;
            t48 = this._vector3.x;
            t50 = cameraMatrix.get$elements();
            if (typeof t50 !== "string" && (typeof t50 !== "object" || t50 === null || t50.constructor !== Array && !t50.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(40, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, t48, t50);
            if (1 >= t50.length)
              throw $.ioore(1);
            t50 = t50[1];
            if (typeof t48 !== "number")
              return this.renderFace3$9$bailout(39, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, t48);
            if (typeof t50 !== "number")
              return this.renderFace3$9$bailout(41, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, t48, t50);
            t50 = t48 * t50;
            t48 = this._vector3.y;
            t54 = cameraMatrix.get$elements();
            if (typeof t54 !== "string" && (typeof t54 !== "object" || t54 === null || t54.constructor !== Array && !t54.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(43, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, t48, t50, t54);
            if (5 >= t54.length)
              throw $.ioore(5);
            t54 = t54[5];
            if (typeof t48 !== "number")
              return this.renderFace3$9$bailout(42, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, t48, t50);
            if (typeof t54 !== "number")
              return this.renderFace3$9$bailout(44, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, t48, t50, t54);
            t50 += t48 * t54;
            t57 = this._vector3.z;
            t59 = cameraMatrix.get$elements();
            if (typeof t59 !== "string" && (typeof t59 !== "object" || t59 === null || t59.constructor !== Array && !t59.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(46, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, t50, null, t57, t59);
            if (9 >= t59.length)
              throw $.ioore(9);
            t59 = t59[9];
            if (typeof t57 !== "number")
              return this.renderFace3$9$bailout(45, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, t50, null, t57);
            if (typeof t59 !== "number")
              return this.renderFace3$9$bailout(47, null, null, null, null, null, uv3, element, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, t50, null, t57, t59);
            this._uv2y = -(t50 + t57 * t59) * 0.5 + 0.5;
            t62 = this._vector3;
            t63 = element.get$vertexNormalsWorld();
            if (typeof t63 !== "string" && (typeof t63 !== "object" || t63 === null || t63.constructor !== Array && !t63.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(48, null, null, null, null, null, uv3, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t62, t63);
            if (uv3 < 0 || uv3 >= t63.length)
              throw $.ioore(uv3);
            t62.copy$1(t63[uv3]);
            t62 = this._vector3.x;
            t66 = cameraMatrix.get$elements();
            if (typeof t66 !== "string" && (typeof t66 !== "object" || t66 === null || t66.constructor !== Array && !t66.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(50, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t62, null, t66);
            if (0 >= t66.length)
              throw $.ioore(0);
            t66 = t66[0];
            if (typeof t62 !== "number")
              return this.renderFace3$9$bailout(49, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t62);
            if (typeof t66 !== "number")
              return this.renderFace3$9$bailout(51, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t62, null, t66);
            t66 = t62 * t66;
            t62 = this._vector3.y;
            t70 = cameraMatrix.get$elements();
            if (typeof t70 !== "string" && (typeof t70 !== "object" || t70 === null || t70.constructor !== Array && !t70.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(53, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t62, null, t66, t70);
            if (4 >= t70.length)
              throw $.ioore(4);
            t70 = t70[4];
            if (typeof t62 !== "number")
              return this.renderFace3$9$bailout(52, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t62, null, t66);
            if (typeof t70 !== "number")
              return this.renderFace3$9$bailout(54, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t62, null, t66, t70);
            t66 += t62 * t70;
            t73 = this._vector3.z;
            t75 = cameraMatrix.get$elements();
            if (typeof t75 !== "string" && (typeof t75 !== "object" || t75 === null || t75.constructor !== Array && !t75.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(56, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t66, null, t73, t75);
            if (8 >= t75.length)
              throw $.ioore(8);
            t75 = t75[8];
            if (typeof t73 !== "number")
              return this.renderFace3$9$bailout(55, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t66, null, t73);
            if (typeof t75 !== "number")
              return this.renderFace3$9$bailout(57, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t66, null, t73, t75);
            this._uv3x = (t66 + t73 * t75) * 0.5 + 0.5;
            t78 = this._vector3.x;
            t80 = cameraMatrix.get$elements();
            if (typeof t80 !== "string" && (typeof t80 !== "object" || t80 === null || t80.constructor !== Array && !t80.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(59, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t78, t80);
            if (1 >= t80.length)
              throw $.ioore(1);
            t80 = t80[1];
            if (typeof t78 !== "number")
              return this.renderFace3$9$bailout(58, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t78);
            if (typeof t80 !== "number")
              return this.renderFace3$9$bailout(60, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t78, t80);
            t80 = t78 * t80;
            t78 = this._vector3.y;
            t84 = cameraMatrix.get$elements();
            if (typeof t84 !== "string" && (typeof t84 !== "object" || t84 === null || t84.constructor !== Array && !t84.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(62, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t78, t80, t84);
            if (5 >= t84.length)
              throw $.ioore(5);
            t84 = t84[5];
            if (typeof t78 !== "number")
              return this.renderFace3$9$bailout(61, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t78, t80);
            if (typeof t84 !== "number")
              return this.renderFace3$9$bailout(63, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t78, t80, t84);
            t80 += t78 * t84;
            t87 = this._vector3.z;
            t89 = cameraMatrix.get$elements();
            if (typeof t89 !== "string" && (typeof t89 !== "object" || t89 === null || t89.constructor !== Array && !t89.$isJavaScriptIndexingBehavior()))
              return this.renderFace3$9$bailout(65, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t80, null, t87, t89);
            if (9 >= t89.length)
              throw $.ioore(9);
            t89 = t89[9];
            if (typeof t87 !== "number")
              return this.renderFace3$9$bailout(64, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, cameraMatrix, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t80, null, t87);
            if (typeof t89 !== "number")
              return this.renderFace3$9$bailout(66, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t80, null, t87, t89);
            this._uv3y = -(t80 + t87 * t89) * 0.5 + 0.5;
            this.patternPath$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._uv1x, this._uv1y, this._uv2x, this._uv2y, this._uv3x, this._uv3y, t1);
          }
        } else {
          t1 = material.wireframe;
          t2 = material.color;
          if (t1 === true)
            this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
          else {
            this.setFillStyle$1(t2.getContextStyle$0());
            this._context.fill$0();
          }
        }
      }
    } else if (typeof material === "object" && material !== null && !!material.$isMeshLambertMaterial) {
      t1 = material.map;
      if (!(t1 == null) && material.wireframe !== true) {
        t2 = t1.get$mapping();
        if (typeof t2 === "object" && t2 !== null && !!t2.$isUVMapping) {
          t2 = element.get$uvs();
          if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(67, null, null, null, uv1, uv2, uv3, element, material, t1, t2);
          if (0 >= t2.length)
            throw $.ioore(0);
          this._uvs = t2[0];
          t4 = this._v1x;
          t5 = this._v1y;
          t6 = this._v2x;
          t7 = this._v2y;
          t8 = this._v3x;
          t9 = this._v3y;
          t10 = this._uvs;
          if (typeof t10 !== "string" && (typeof t10 !== "object" || t10 === null || t10.constructor !== Array && !t10.$isJavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(68, null, null, null, uv1, uv2, uv3, element, material, t1, null, t4, t7, t8, t9, t10, t5, t6);
          if (uv1 < 0 || uv1 >= t10.length)
            throw $.ioore(uv1);
          t12 = t10[uv1].get$u();
          if (uv1 >= t10.length)
            throw $.ioore(uv1);
          t13 = t10[uv1].get$v();
          if (uv2 < 0 || uv2 >= t10.length)
            throw $.ioore(uv2);
          t14 = t10[uv2].get$u();
          if (uv2 >= t10.length)
            throw $.ioore(uv2);
          t15 = t10[uv2].get$v();
          if (uv3 < 0 || uv3 >= t10.length)
            throw $.ioore(uv3);
          t16 = t10[uv3].get$u();
          if (uv3 >= t10.length)
            throw $.ioore(uv3);
          this.patternPath$13(t4, t5, t6, t7, t8, t9, t12, t13, t14, t15, t16, t10[uv3].get$v(), t1);
        }
        this.setBlending$1(3);
      }
      if (this._enableLighting === true) {
        t1 = material.wireframe === true;
        if (!t1) {
          t2 = material.shading;
          if (typeof t2 !== "number")
            return this.renderFace3$9$bailout(74, null, null, null, null, null, null, element, material, t1, t2);
          if (t2 === 2) {
            t2 = $.length(element.get$vertexNormalsWorld());
            if (typeof t2 !== "number")
              return this.renderFace3$9$bailout(75, null, null, null, null, null, null, element, material, t1, t2);
            t2 = t2 === 3;
          } else
            t2 = false;
        } else
          t2 = false;
        t3 = this._ambientLight.r;
        if (t2) {
          this._color3.r = t3;
          this._color2.r = t3;
          this._color1.r = t3;
          t1 = this._ambientLight.g;
          this._color3.g = t1;
          this._color2.g = t1;
          this._color1.g = t1;
          t1 = this._ambientLight.b;
          this._color3.b = t1;
          this._color2.b = t1;
          this._color1.b = t1;
          t1 = this._lights;
          t2 = element.get$v1().get$positionWorld();
          t3 = element.get$vertexNormalsWorld();
          if (typeof t3 !== "string" && (typeof t3 !== "object" || t3 === null || t3.constructor !== Array && !t3.$isJavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(76, null, null, null, null, null, null, element, material, t1, t2, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t3);
          if (0 >= t3.length)
            throw $.ioore(0);
          this.calculateLight$4(t1, t2, t3[0], this._color1);
          t2 = this._lights;
          t1 = element.get$v2().get$positionWorld();
          t5 = element.get$vertexNormalsWorld();
          if (typeof t5 !== "string" && (typeof t5 !== "object" || t5 === null || t5.constructor !== Array && !t5.$isJavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(77, null, null, null, null, null, null, element, material, t1, t2, null, null, null, null, null, t5);
          if (1 >= t5.length)
            throw $.ioore(1);
          this.calculateLight$4(t2, t1, t5[1], this._color2);
          t1 = this._lights;
          t2 = element.get$v3().get$positionWorld();
          t7 = element.get$vertexNormalsWorld();
          if (typeof t7 !== "string" && (typeof t7 !== "object" || t7 === null || t7.constructor !== Array && !t7.$isJavaScriptIndexingBehavior()))
            return this.renderFace3$9$bailout(78, null, null, null, null, null, null, null, material, t1, t2, null, t7);
          if (2 >= t7.length)
            throw $.ioore(2);
          this.calculateLight$4(t1, t2, t7[2], this._color3);
          t2 = material.color.get$r();
          t9 = this._color1.r;
          if (typeof t2 !== "number")
            return this.renderFace3$9$bailout(79, null, null, null, null, null, null, null, material, null, t2);
          if (typeof t9 !== "number")
            return this.renderFace3$9$bailout(80, null, null, null, null, null, null, null, material, null, t2, null, null, null, t9);
          t11 = $.max(0, $.min(t2 * t9, 1));
          this._color1.r = t11;
          t11 = material.color.get$g();
          t13 = this._color1.g;
          if (typeof t11 !== "number")
            return this.renderFace3$9$bailout(81, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t11);
          if (typeof t13 !== "number")
            return this.renderFace3$9$bailout(82, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, t13, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t11);
          t15 = $.max(0, $.min(t11 * t13, 1));
          this._color1.g = t15;
          t15 = material.color.get$b();
          t17 = this._color1.b;
          if (typeof t15 !== "number")
            return this.renderFace3$9$bailout(83, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, t15);
          if (typeof t17 !== "number")
            return this.renderFace3$9$bailout(84, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, t15, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t17);
          t19 = $.max(0, $.min(t15 * t17, 1));
          this._color1.b = t19;
          t19 = material.color.get$r();
          t21 = this._color2.r;
          if (typeof t19 !== "number")
            return this.renderFace3$9$bailout(85, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, t19);
          if (typeof t21 !== "number")
            return this.renderFace3$9$bailout(86, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, t19, null, t21);
          t23 = $.max(0, $.min(t19 * t21, 1));
          this._color2.r = t23;
          t23 = material.color.get$g();
          t25 = this._color2.g;
          if (typeof t23 !== "number")
            return this.renderFace3$9$bailout(87, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t23);
          if (typeof t25 !== "number")
            return this.renderFace3$9$bailout(88, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t25, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t23);
          t27 = $.max(0, $.min(t23 * t25, 1));
          this._color2.g = t27;
          t27 = material.color.get$b();
          t29 = this._color2.b;
          if (typeof t27 !== "number")
            return this.renderFace3$9$bailout(89, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t27);
          if (typeof t29 !== "number")
            return this.renderFace3$9$bailout(90, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t27, t29);
          t31 = $.max(0, $.min(t27 * t29, 1));
          this._color2.b = t31;
          t31 = material.color.get$r();
          t33 = this._color3.r;
          if (typeof t31 !== "number")
            return this.renderFace3$9$bailout(91, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t31);
          if (typeof t33 !== "number")
            return this.renderFace3$9$bailout(92, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t33, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t31);
          t35 = $.max(0, $.min(t31 * t33, 1));
          this._color3.r = t35;
          t35 = material.color.get$g();
          t37 = this._color3.g;
          if (typeof t35 !== "number")
            return this.renderFace3$9$bailout(93, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t35);
          if (typeof t37 !== "number")
            return this.renderFace3$9$bailout(94, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t35, t37);
          t39 = $.max(0, $.min(t35 * t37, 1));
          this._color3.g = t39;
          t39 = material.color.get$b();
          t41 = this._color3.b;
          if (typeof t39 !== "number")
            return this.renderFace3$9$bailout(95, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t39);
          if (typeof t41 !== "number")
            return this.renderFace3$9$bailout(96, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t39, t41);
          t43 = $.max(0, $.min(t39 * t41, 1));
          this._color3.b = t43;
          t43 = this._color2.r;
          t45 = this._color3.r;
          if (typeof t43 !== "number")
            return this.renderFace3$9$bailout(97, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t43);
          if (typeof t45 !== "number")
            return this.renderFace3$9$bailout(98, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t43, t45);
          this._color4.r = (t43 + t45) * 0.5;
          t47 = this._color2.g;
          t49 = this._color3.g;
          if (typeof t47 !== "number")
            return this.renderFace3$9$bailout(99, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t47);
          if (typeof t49 !== "number")
            return this.renderFace3$9$bailout(100, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t47, t49);
          this._color4.g = (t47 + t49) * 0.5;
          t51 = this._color2.b;
          t53 = this._color3.b;
          if (typeof t51 !== "number")
            return this.renderFace3$9$bailout(101, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t51);
          if (typeof t53 !== "number")
            return this.renderFace3$9$bailout(102, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t51, t53);
          this._color4.b = (t51 + t53) * 0.5;
          this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
          this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, 0, 0, 1, 0, 0, 1, this._image);
        } else {
          this._color.r = t3;
          t2 = this._ambientLight.g;
          this._color.g = t2;
          t2 = this._ambientLight.b;
          this._color.b = t2;
          this.calculateLight$4(this._lights, element.get$centroidWorld(), element.get$normalWorld(), this._color);
          t2 = material.color.get$r();
          t4 = this._color.r;
          if (typeof t2 !== "number")
            return this.renderFace3$9$bailout(103, null, null, null, null, null, null, null, material, t1, t2);
          if (typeof t4 !== "number")
            return this.renderFace3$9$bailout(104, null, null, null, null, null, null, null, material, t1, t2, t4);
          t6 = $.max(0, $.min(t2 * t4, 1));
          this._color.r = t6;
          t6 = material.color.get$g();
          t8 = this._color.g;
          if (typeof t6 !== "number")
            return this.renderFace3$9$bailout(105, null, null, null, null, null, null, null, material, t1, null, null, null, null, null, null, null, t6);
          if (typeof t8 !== "number")
            return this.renderFace3$9$bailout(106, null, null, null, null, null, null, null, material, t1, null, null, null, t8, null, null, null, t6);
          t10 = $.max(0, $.min(t6 * t8, 1));
          this._color.g = t10;
          t10 = material.color.get$b();
          t12 = this._color.b;
          if (typeof t10 !== "number")
            return this.renderFace3$9$bailout(107, null, null, null, null, null, null, null, material, t1, null, null, null, null, null, t10);
          if (typeof t12 !== "number")
            return this.renderFace3$9$bailout(108, null, null, null, null, null, null, null, material, t1, null, null, null, null, null, t10, null, null, null, t12);
          t14 = $.max(0, $.min(t10 * t12, 1));
          this._color.b = t14;
          t2 = this._color;
          if (t1)
            this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
          else {
            this.setFillStyle$1(t2.getContextStyle$0());
            this._context.fill$0();
          }
        }
      } else {
        t1 = material.wireframe;
        t2 = material.color;
        if (t1 === true)
          this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
        else {
          this.setFillStyle$1(t2.getContextStyle$0());
          this._context.fill$0();
        }
      }
    } else if (typeof material === "object" && material !== null && !!material.$isMeshDepthMaterial) {
      this._near = this._camera.get$near();
      this._far = this._camera.get$far();
      t1 = this.smoothstep$3(v1.get$positionScreen().get$z(), this._near, this._far);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t1 = 1 - t1;
      this._color1.b = t1;
      this._color1.g = t1;
      this._color1.r = t1;
      t1 = this.smoothstep$3(v2.get$positionScreen().get$z(), this._near, this._far);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t1 = 1 - t1;
      this._color2.b = t1;
      this._color2.g = t1;
      this._color2.r = t1;
      t1 = this.smoothstep$3(v3.get$positionScreen().get$z(), this._near, this._far);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t1 = 1 - t1;
      this._color3.b = t1;
      this._color3.g = t1;
      this._color3.r = t1;
      t1 = this._color2.r;
      t3 = this._color3.r;
      if (typeof t1 !== "number")
        return this.renderFace3$9$bailout(109, null, null, null, null, null, null, null, null, t1);
      if (typeof t3 !== "number")
        return this.renderFace3$9$bailout(110, null, null, null, null, null, null, null, null, t1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t3);
      this._color4.r = (t1 + t3) * 0.5;
      t5 = this._color2.g;
      t7 = this._color3.g;
      if (typeof t5 !== "number")
        return this.renderFace3$9$bailout(111, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t5);
      if (typeof t7 !== "number")
        return this.renderFace3$9$bailout(112, null, null, null, null, null, null, null, null, null, null, null, t7, null, null, null, t5);
      this._color4.g = (t5 + t7) * 0.5;
      t9 = this._color2.b;
      t11 = this._color3.b;
      if (typeof t9 !== "number")
        return this.renderFace3$9$bailout(113, null, null, null, null, null, null, null, null, null, null, null, null, null, t9);
      if (typeof t11 !== "number")
        return this.renderFace3$9$bailout(114, null, null, null, null, null, null, null, null, null, null, null, null, null, t9, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t11);
      this._color4.b = (t9 + t11) * 0.5;
      this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
      this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, 0, 0, 1, 0, 0, 1, this._image);
    } else if (typeof material === "object" && material !== null && !!material.$isMeshNormalMaterial) {
      t1 = this.normalToComponent$1(element.get$normalWorld().get$x());
      this._color.r = t1;
      t1 = this.normalToComponent$1(element.get$normalWorld().get$y());
      this._color.g = t1;
      t1 = this.normalToComponent$1(element.get$normalWorld().get$z());
      this._color.b = t1;
      t1 = material.wireframe;
      t2 = this._color;
      if (t1 === true)
        this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
      else {
        this.setFillStyle$1(t2.getContextStyle$0());
        this._context.fill$0();
      }
    }
  },
  renderFace3$9$bailout: function(state0, v1, v2, v3, uv1, uv2, uv3, element, material, t1, t2, t4, t7, t8, t9, t10, t5, t6, t13, t12, t16, t15, t19, t18, t21, t22, t24, t25, cameraMatrix, t3, t20, t27, t29, t33, t32, t36, t40, t43, t45, t48, t50, t54, t57, t59, t62, t63, t66, t70, t73, t75, t78, t80, t84, t87, t89, t11, t17, t23, t31, t35, t37, t39, t41, t47, t49, t51, t53) {
    switch (state0) {
      case 0:
        t1 = this._info.render;
        t2 = t1.vertices;
      case 1:
        state0 = 0;
        t1.vertices = $.$$add(t2, 3);
        t1 = this._info.render;
        t4 = t1.faces;
      case 2:
        state0 = 0;
        t1.faces = $.$$add(t4, 1);
        this.setOpacity$1(material.get$opacity());
        this.setBlending$1(material.get$blending());
        this._v1x = v1.get$positionScreen().get$x();
        this._v1y = v1.get$positionScreen().get$y();
        this._v2x = v2.get$positionScreen().get$x();
        this._v2y = v2.get$positionScreen().get$y();
        this._v3x = v3.get$positionScreen().get$x();
        this._v3y = v3.get$positionScreen().get$y();
        this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y);
      default:
        var t55, t14;
        if (state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && typeof material === "object" && material !== null && !!material.$isMeshBasicMaterial)
          switch (state0) {
            case 0:
              t1 = material.map;
            default:
              if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && !(t1 == null))
                switch (state0) {
                  case 0:
                    t2 = t1.get$mapping();
                  default:
                    if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && typeof t2 === "object" && t2 !== null && !!t2.$isUVMapping)
                      switch (state0) {
                        case 0:
                          t2 = element.get$uvs();
                        case 3:
                          state0 = 0;
                          this._uvs = $.$$index(t2, 0);
                          t4 = this._v1x;
                          t5 = this._v1y;
                          t6 = this._v2x;
                          t7 = this._v2y;
                          t8 = this._v3x;
                          t9 = this._v3y;
                          t10 = this._uvs;
                        case 4:
                          state0 = 0;
                          t12 = $.$$index(t10, uv1).get$u();
                          t13 = this._uvs;
                        case 5:
                          state0 = 0;
                          t15 = $.$$index(t13, uv1).get$v();
                          t16 = this._uvs;
                        case 6:
                          state0 = 0;
                          t18 = $.$$index(t16, uv2).get$u();
                          t19 = this._uvs;
                        case 7:
                          state0 = 0;
                          t21 = $.$$index(t19, uv2).get$v();
                          t22 = this._uvs;
                        case 8:
                          state0 = 0;
                          t24 = $.$$index(t22, uv3).get$u();
                          t25 = this._uvs;
                        case 9:
                          state0 = 0;
                          this.patternPath$13(t4, t5, t6, t7, t8, t9, t12, t15, t18, t21, t24, $.$$index(t25, uv3).get$v(), t1);
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t1 = material.envMap;
                  default:
                    if (state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 0 && !(null == t1))
                      switch (state0) {
                        case 0:
                          t2 = t1.get$mapping();
                        default:
                          if (state0 === 66 || state0 === 65 || state0 === 64 || state0 === 63 || state0 === 62 || state0 === 61 || state0 === 60 || state0 === 59 || state0 === 58 || state0 === 57 || state0 === 56 || state0 === 55 || state0 === 54 || state0 === 53 || state0 === 52 || state0 === 51 || state0 === 50 || state0 === 49 || state0 === 48 || state0 === 47 || state0 === 46 || state0 === 45 || state0 === 44 || state0 === 43 || state0 === 42 || state0 === 41 || state0 === 40 || state0 === 39 || state0 === 38 || state0 === 37 || state0 === 36 || state0 === 35 || state0 === 34 || state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 0 && typeof t2 === "object" && t2 !== null && !!t2.$isSphericalReflectionMapping)
                            switch (state0) {
                              case 0:
                                cameraMatrix = this._camera.get$matrixWorldInverse();
                                t2 = this._vector3;
                                t3 = element.get$vertexNormalsWorld();
                              case 10:
                                state0 = 0;
                                t2.copy$1($.$$index(t3, uv1));
                                t2 = this._vector3.x;
                              case 11:
                                state0 = 0;
                                t6 = cameraMatrix.get$elements();
                              case 12:
                                state0 = 0;
                                t6 = $.$$index(t6, 0);
                              case 13:
                                state0 = 0;
                                t6 = $.$$mul(t2, t6);
                                t2 = this._vector3.y;
                              case 14:
                                state0 = 0;
                                t10 = cameraMatrix.get$elements();
                              case 15:
                                state0 = 0;
                                t10 = $.$$index(t10, 4);
                              case 16:
                                state0 = 0;
                                t6 = $.$$add(t6, $.$$mul(t2, t10));
                                t13 = this._vector3.z;
                              case 17:
                                state0 = 0;
                                t15 = cameraMatrix.get$elements();
                              case 18:
                                state0 = 0;
                                t15 = $.$$index(t15, 8);
                              case 19:
                                state0 = 0;
                                this._uv1x = $.$$add($.$$mul($.$$add(t6, $.$$mul(t13, t15)), 0.5), 0.5);
                                t18 = this._vector3.x;
                              case 20:
                                state0 = 0;
                                t20 = cameraMatrix.get$elements();
                              case 21:
                                state0 = 0;
                                t20 = $.$$index(t20, 1);
                              case 22:
                                state0 = 0;
                                t20 = $.$$mul(t18, t20);
                                t18 = this._vector3.y;
                              case 23:
                                state0 = 0;
                                t24 = cameraMatrix.get$elements();
                              case 24:
                                state0 = 0;
                                t24 = $.$$index(t24, 5);
                              case 25:
                                state0 = 0;
                                t20 = $.$$add(t20, $.$$mul(t18, t24));
                                t27 = this._vector3.z;
                              case 26:
                                state0 = 0;
                                t29 = cameraMatrix.get$elements();
                              case 27:
                                state0 = 0;
                                t29 = $.$$index(t29, 9);
                              case 28:
                                state0 = 0;
                                this._uv1y = $.$$add($.$$mul($.$$negate($.$$add(t20, $.$$mul(t27, t29))), 0.5), 0.5);
                                t32 = this._vector3;
                                t33 = element.get$vertexNormalsWorld();
                              case 29:
                                state0 = 0;
                                t32.copy$1($.$$index(t33, uv2));
                                t32 = this._vector3.x;
                              case 30:
                                state0 = 0;
                                t36 = cameraMatrix.get$elements();
                              case 31:
                                state0 = 0;
                                t36 = $.$$index(t36, 0);
                              case 32:
                                state0 = 0;
                                t36 = $.$$mul(t32, t36);
                                t32 = this._vector3.y;
                              case 33:
                                state0 = 0;
                                t40 = cameraMatrix.get$elements();
                              case 34:
                                state0 = 0;
                                t40 = $.$$index(t40, 4);
                              case 35:
                                state0 = 0;
                                t36 = $.$$add(t36, $.$$mul(t32, t40));
                                t43 = this._vector3.z;
                              case 36:
                                state0 = 0;
                                t45 = cameraMatrix.get$elements();
                              case 37:
                                state0 = 0;
                                t45 = $.$$index(t45, 8);
                              case 38:
                                state0 = 0;
                                this._uv2x = $.$$add($.$$mul($.$$add(t36, $.$$mul(t43, t45)), 0.5), 0.5);
                                t48 = this._vector3.x;
                              case 39:
                                state0 = 0;
                                t50 = cameraMatrix.get$elements();
                              case 40:
                                state0 = 0;
                                t50 = $.$$index(t50, 1);
                              case 41:
                                state0 = 0;
                                t50 = $.$$mul(t48, t50);
                                t48 = this._vector3.y;
                              case 42:
                                state0 = 0;
                                t54 = cameraMatrix.get$elements();
                              case 43:
                                state0 = 0;
                                t54 = $.$$index(t54, 5);
                              case 44:
                                state0 = 0;
                                t50 = $.$$add(t50, $.$$mul(t48, t54));
                                t57 = this._vector3.z;
                              case 45:
                                state0 = 0;
                                t59 = cameraMatrix.get$elements();
                              case 46:
                                state0 = 0;
                                t59 = $.$$index(t59, 9);
                              case 47:
                                state0 = 0;
                                this._uv2y = $.$$add($.$$mul($.$$negate($.$$add(t50, $.$$mul(t57, t59))), 0.5), 0.5);
                                t62 = this._vector3;
                                t63 = element.get$vertexNormalsWorld();
                              case 48:
                                state0 = 0;
                                t62.copy$1($.$$index(t63, uv3));
                                t62 = this._vector3.x;
                              case 49:
                                state0 = 0;
                                t66 = cameraMatrix.get$elements();
                              case 50:
                                state0 = 0;
                                t66 = $.$$index(t66, 0);
                              case 51:
                                state0 = 0;
                                t66 = $.$$mul(t62, t66);
                                t62 = this._vector3.y;
                              case 52:
                                state0 = 0;
                                t70 = cameraMatrix.get$elements();
                              case 53:
                                state0 = 0;
                                t70 = $.$$index(t70, 4);
                              case 54:
                                state0 = 0;
                                t66 = $.$$add(t66, $.$$mul(t62, t70));
                                t73 = this._vector3.z;
                              case 55:
                                state0 = 0;
                                t75 = cameraMatrix.get$elements();
                              case 56:
                                state0 = 0;
                                t75 = $.$$index(t75, 8);
                              case 57:
                                state0 = 0;
                                this._uv3x = $.$$add($.$$mul($.$$add(t66, $.$$mul(t73, t75)), 0.5), 0.5);
                                t78 = this._vector3.x;
                              case 58:
                                state0 = 0;
                                t80 = cameraMatrix.get$elements();
                              case 59:
                                state0 = 0;
                                t80 = $.$$index(t80, 1);
                              case 60:
                                state0 = 0;
                                t80 = $.$$mul(t78, t80);
                                t78 = this._vector3.y;
                              case 61:
                                state0 = 0;
                                t84 = cameraMatrix.get$elements();
                              case 62:
                                state0 = 0;
                                t84 = $.$$index(t84, 5);
                              case 63:
                                state0 = 0;
                                t80 = $.$$add(t80, $.$$mul(t78, t84));
                                t87 = this._vector3.z;
                              case 64:
                                state0 = 0;
                                t89 = cameraMatrix.get$elements();
                              case 65:
                                state0 = 0;
                                t89 = $.$$index(t89, 9);
                              case 66:
                                state0 = 0;
                                this._uv3y = $.$$add($.$$mul($.$$negate($.$$add(t80, $.$$mul(t87, t89))), 0.5), 0.5);
                                this.patternPath$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._uv1x, this._uv1y, this._uv2x, this._uv2y, this._uv3x, this._uv3y, t1);
                            }
                      }
                    else {
                      t1 = material.wireframe;
                      t2 = material.color;
                      if (t1 === true)
                        this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                      else {
                        this.setFillStyle$1(t2.getContextStyle$0());
                        this._context.fill$0();
                      }
                    }
                }
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 108 || state0 === 107 || state0 === 106 || state0 === 105 || state0 === 104 || state0 === 103 || state0 === 102 || state0 === 101 || state0 === 100 || state0 === 99 || state0 === 98 || state0 === 97 || state0 === 96 || state0 === 95 || state0 === 94 || state0 === 93 || state0 === 92 || state0 === 91 || state0 === 90 || state0 === 89 || state0 === 88 || state0 === 87 || state0 === 86 || state0 === 85 || state0 === 84 || state0 === 83 || state0 === 82 || state0 === 81 || state0 === 80 || state0 === 79 || state0 === 78 || state0 === 77 || state0 === 76 || state0 === 75 || state0 === 74 || state0 === 73 || state0 === 72 || state0 === 71 || state0 === 70 || state0 === 69 || state0 === 68 || state0 === 67 || state0 === 0 && typeof material === "object" && material !== null && !!material.$isMeshLambertMaterial)
                switch (state0) {
                  case 0:
                    t1 = material.map;
                  default:
                    if (state0 === 73 || state0 === 72 || state0 === 71 || state0 === 70 || state0 === 69 || state0 === 68 || state0 === 67 || state0 === 0 && !(t1 == null) && material.wireframe !== true)
                      switch (state0) {
                        case 0:
                          t2 = t1.get$mapping();
                        default:
                          if (state0 === 73 || state0 === 72 || state0 === 71 || state0 === 70 || state0 === 69 || state0 === 68 || state0 === 67 || state0 === 0 && typeof t2 === "object" && t2 !== null && !!t2.$isUVMapping)
                            switch (state0) {
                              case 0:
                                t2 = element.get$uvs();
                              case 67:
                                state0 = 0;
                                this._uvs = $.$$index(t2, 0);
                                t4 = this._v1x;
                                t5 = this._v1y;
                                t6 = this._v2x;
                                t7 = this._v2y;
                                t8 = this._v3x;
                                t9 = this._v3y;
                                t10 = this._uvs;
                              case 68:
                                state0 = 0;
                                t12 = $.$$index(t10, uv1).get$u();
                                t13 = this._uvs;
                              case 69:
                                state0 = 0;
                                t15 = $.$$index(t13, uv1).get$v();
                                t16 = this._uvs;
                              case 70:
                                state0 = 0;
                                t18 = $.$$index(t16, uv2).get$u();
                                t19 = this._uvs;
                              case 71:
                                state0 = 0;
                                t21 = $.$$index(t19, uv2).get$v();
                                t22 = this._uvs;
                              case 72:
                                state0 = 0;
                                t24 = $.$$index(t22, uv3).get$u();
                                t25 = this._uvs;
                              case 73:
                                state0 = 0;
                                this.patternPath$13(t4, t5, t6, t7, t8, t9, t12, t15, t18, t21, t24, $.$$index(t25, uv3).get$v(), t1);
                            }
                          this.setBlending$1(3);
                      }
                  case 74:
                  case 75:
                  case 76:
                  case 77:
                  case 78:
                  case 79:
                  case 80:
                  case 81:
                  case 82:
                  case 83:
                  case 84:
                  case 85:
                  case 86:
                  case 87:
                  case 88:
                  case 89:
                  case 90:
                  case 91:
                  case 92:
                  case 93:
                  case 94:
                  case 95:
                  case 96:
                  case 97:
                  case 98:
                  case 99:
                  case 100:
                  case 101:
                  case 102:
                  case 103:
                  case 104:
                  case 105:
                  case 106:
                  case 107:
                  case 108:
                    if (state0 === 108 || state0 === 107 || state0 === 106 || state0 === 105 || state0 === 104 || state0 === 103 || state0 === 102 || state0 === 101 || state0 === 100 || state0 === 99 || state0 === 98 || state0 === 97 || state0 === 96 || state0 === 95 || state0 === 94 || state0 === 93 || state0 === 92 || state0 === 91 || state0 === 90 || state0 === 89 || state0 === 88 || state0 === 87 || state0 === 86 || state0 === 85 || state0 === 84 || state0 === 83 || state0 === 82 || state0 === 81 || state0 === 80 || state0 === 79 || state0 === 78 || state0 === 77 || state0 === 76 || state0 === 75 || state0 === 74 || state0 === 0 && this._enableLighting === true)
                      switch (state0) {
                        case 0:
                          t1 = material.wireframe === true;
                        default:
                          if (state0 === 75 || state0 === 74 || state0 === 0 && !t1)
                            switch (state0) {
                              case 0:
                                t2 = material.shading;
                              case 74:
                                state0 = 0;
                              case 75:
                                if (state0 === 75 || state0 === 0 && $.$$eq(t2, 2) === true)
                                  switch (state0) {
                                    case 0:
                                      t2 = $.length(element.get$vertexNormalsWorld());
                                    case 75:
                                      state0 = 0;
                                      t4 = $.$$eq(t2, 3) === true;
                                      t2 = t4;
                                  }
                                else
                                  t2 = false;
                            }
                          else
                            t2 = false;
                          t3 = this._ambientLight;
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 84:
                        case 85:
                        case 86:
                        case 87:
                        case 88:
                        case 89:
                        case 90:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 97:
                        case 98:
                        case 99:
                        case 100:
                        case 101:
                        case 102:
                        case 103:
                        case 104:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                          if (state0 === 102 || state0 === 101 || state0 === 100 || state0 === 99 || state0 === 98 || state0 === 97 || state0 === 96 || state0 === 95 || state0 === 94 || state0 === 93 || state0 === 92 || state0 === 91 || state0 === 90 || state0 === 89 || state0 === 88 || state0 === 87 || state0 === 86 || state0 === 85 || state0 === 84 || state0 === 83 || state0 === 82 || state0 === 81 || state0 === 80 || state0 === 79 || state0 === 78 || state0 === 77 || state0 === 76 || state0 === 0 && t2)
                            switch (state0) {
                              case 0:
                                t1 = t3.r;
                                this._color3.r = t1;
                                this._color2.r = t1;
                                this._color1.r = t1;
                                t1 = this._ambientLight.g;
                                this._color3.g = t1;
                                this._color2.g = t1;
                                this._color1.g = t1;
                                t1 = this._ambientLight.b;
                                this._color3.b = t1;
                                this._color2.b = t1;
                                this._color1.b = t1;
                                t1 = this._lights;
                                t2 = element.get$v1().get$positionWorld();
                                t3 = element.get$vertexNormalsWorld();
                              case 76:
                                state0 = 0;
                                this.calculateLight$4(t1, t2, $.$$index(t3, 0), this._color1);
                                t2 = this._lights;
                                t1 = element.get$v2().get$positionWorld();
                                t5 = element.get$vertexNormalsWorld();
                              case 77:
                                state0 = 0;
                                this.calculateLight$4(t2, t1, $.$$index(t5, 1), this._color2);
                                t1 = this._lights;
                                t2 = element.get$v3().get$positionWorld();
                                t7 = element.get$vertexNormalsWorld();
                              case 78:
                                state0 = 0;
                                this.calculateLight$4(t1, t2, $.$$index(t7, 2), this._color3);
                                t2 = material.color.get$r();
                              case 79:
                                state0 = 0;
                                t9 = this._color1.r;
                              case 80:
                                state0 = 0;
                                t11 = $.max(0, $.min($.$$mul(t2, t9), 1));
                                this._color1.r = t11;
                                t11 = material.color.get$g();
                              case 81:
                                state0 = 0;
                                t13 = this._color1.g;
                              case 82:
                                state0 = 0;
                                t15 = $.max(0, $.min($.$$mul(t11, t13), 1));
                                this._color1.g = t15;
                                t15 = material.color.get$b();
                              case 83:
                                state0 = 0;
                                t17 = this._color1.b;
                              case 84:
                                state0 = 0;
                                t19 = $.max(0, $.min($.$$mul(t15, t17), 1));
                                this._color1.b = t19;
                                t19 = material.color.get$r();
                              case 85:
                                state0 = 0;
                                t21 = this._color2.r;
                              case 86:
                                state0 = 0;
                                t23 = $.max(0, $.min($.$$mul(t19, t21), 1));
                                this._color2.r = t23;
                                t23 = material.color.get$g();
                              case 87:
                                state0 = 0;
                                t25 = this._color2.g;
                              case 88:
                                state0 = 0;
                                t27 = $.max(0, $.min($.$$mul(t23, t25), 1));
                                this._color2.g = t27;
                                t27 = material.color.get$b();
                              case 89:
                                state0 = 0;
                                t29 = this._color2.b;
                              case 90:
                                state0 = 0;
                                t31 = $.max(0, $.min($.$$mul(t27, t29), 1));
                                this._color2.b = t31;
                                t31 = material.color.get$r();
                              case 91:
                                state0 = 0;
                                t33 = this._color3.r;
                              case 92:
                                state0 = 0;
                                t35 = $.max(0, $.min($.$$mul(t31, t33), 1));
                                this._color3.r = t35;
                                t35 = material.color.get$g();
                              case 93:
                                state0 = 0;
                                t37 = this._color3.g;
                              case 94:
                                state0 = 0;
                                t39 = $.max(0, $.min($.$$mul(t35, t37), 1));
                                this._color3.g = t39;
                                t39 = material.color.get$b();
                              case 95:
                                state0 = 0;
                                t41 = this._color3.b;
                              case 96:
                                state0 = 0;
                                t43 = $.max(0, $.min($.$$mul(t39, t41), 1));
                                this._color3.b = t43;
                                t43 = this._color2.r;
                              case 97:
                                state0 = 0;
                                t45 = this._color3.r;
                              case 98:
                                state0 = 0;
                                t47 = $.$$mul($.$$add(t43, t45), 0.5);
                                this._color4.r = t47;
                                t47 = this._color2.g;
                              case 99:
                                state0 = 0;
                                t49 = this._color3.g;
                              case 100:
                                state0 = 0;
                                t51 = $.$$mul($.$$add(t47, t49), 0.5);
                                this._color4.g = t51;
                                t51 = this._color2.b;
                              case 101:
                                state0 = 0;
                                t53 = this._color3.b;
                              case 102:
                                state0 = 0;
                                t55 = $.$$mul($.$$add(t51, t53), 0.5);
                                this._color4.b = t55;
                                this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
                                this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, 0, 0, 1, 0, 0, 1, this._image);
                            }
                          else
                            switch (state0) {
                              case 0:
                                t2 = t3.r;
                                this._color.r = t2;
                                t2 = this._ambientLight.g;
                                this._color.g = t2;
                                t2 = this._ambientLight.b;
                                this._color.b = t2;
                                this.calculateLight$4(this._lights, element.get$centroidWorld(), element.get$normalWorld(), this._color);
                                t2 = material.color.get$r();
                              case 103:
                                state0 = 0;
                                t4 = this._color.r;
                              case 104:
                                state0 = 0;
                                t6 = $.max(0, $.min($.$$mul(t2, t4), 1));
                                this._color.r = t6;
                                t6 = material.color.get$g();
                              case 105:
                                state0 = 0;
                                t8 = this._color.g;
                              case 106:
                                state0 = 0;
                                t10 = $.max(0, $.min($.$$mul(t6, t8), 1));
                                this._color.g = t10;
                                t10 = material.color.get$b();
                              case 107:
                                state0 = 0;
                                t12 = this._color.b;
                              case 108:
                                state0 = 0;
                                t14 = $.max(0, $.min($.$$mul(t10, t12), 1));
                                this._color.b = t14;
                                t2 = this._color;
                                if (t1)
                                  this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                                else {
                                  this.setFillStyle$1(t2.getContextStyle$0());
                                  this._context.fill$0();
                                }
                            }
                      }
                    else {
                      t1 = material.wireframe;
                      t2 = material.color;
                      if (t1 === true)
                        this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                      else {
                        this.setFillStyle$1(t2.getContextStyle$0());
                        this._context.fill$0();
                      }
                    }
                }
              else
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 114 || state0 === 113 || state0 === 112 || state0 === 111 || state0 === 110 || state0 === 109 || state0 === 0 && typeof material === "object" && material !== null && !!material.$isMeshDepthMaterial)
                      switch (state0) {
                        case 0:
                          this._near = this._camera.get$near();
                          this._far = this._camera.get$far();
                          t1 = this.smoothstep$3(v1.get$positionScreen().get$z(), this._near, this._far);
                          if (typeof t1 !== "number")
                            throw $.iae(t1);
                          t1 = 1 - t1;
                          this._color1.b = t1;
                          this._color1.g = t1;
                          this._color1.r = t1;
                          t1 = this.smoothstep$3(v2.get$positionScreen().get$z(), this._near, this._far);
                          if (typeof t1 !== "number")
                            throw $.iae(t1);
                          t1 = 1 - t1;
                          this._color2.b = t1;
                          this._color2.g = t1;
                          this._color2.r = t1;
                          t1 = this.smoothstep$3(v3.get$positionScreen().get$z(), this._near, this._far);
                          if (typeof t1 !== "number")
                            throw $.iae(t1);
                          t1 = 1 - t1;
                          this._color3.b = t1;
                          this._color3.g = t1;
                          this._color3.r = t1;
                          t1 = this._color2.r;
                        case 109:
                          state0 = 0;
                          t3 = this._color3.r;
                        case 110:
                          state0 = 0;
                          t5 = $.$$mul($.$$add(t1, t3), 0.5);
                          this._color4.r = t5;
                          t5 = this._color2.g;
                        case 111:
                          state0 = 0;
                          t7 = this._color3.g;
                        case 112:
                          state0 = 0;
                          t9 = $.$$mul($.$$add(t5, t7), 0.5);
                          this._color4.g = t9;
                          t9 = this._color2.b;
                        case 113:
                          state0 = 0;
                          t11 = this._color3.b;
                        case 114:
                          state0 = 0;
                          t13 = $.$$mul($.$$add(t9, t11), 0.5);
                          this._color4.b = t13;
                          this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
                          this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, 0, 0, 1, 0, 0, 1, this._image);
                      }
                    else if (typeof material === "object" && material !== null && !!material.$isMeshNormalMaterial) {
                      t1 = this.normalToComponent$1(element.get$normalWorld().get$x());
                      this._color.r = t1;
                      t1 = this.normalToComponent$1(element.get$normalWorld().get$y());
                      this._color.g = t1;
                      t1 = this.normalToComponent$1(element.get$normalWorld().get$z());
                      this._color.b = t1;
                      t1 = material.wireframe;
                      t2 = this._color;
                      if (t1 === true)
                        this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                      else {
                        this.setFillStyle$1(t2.getContextStyle$0());
                        this._context.fill$0();
                      }
                    }
                }
          }
    }
  },
  renderFace4$9: function(v1, v2, v3, v4, v5, v6, element, material, scene) {
    var t1, t2, t4, t3, t6, t8, t10, t12, t14, t16, t18, t20, t22, t24, t26, t28, t30, t32, t34, t36, t38, t40, t42, t44, t46, t48, t50;
    t1 = this._info.render;
    t2 = t1.vertices;
    if (typeof t2 !== "number")
      return this.renderFace4$9$bailout(1, v1, v2, v3, v4, v5, v6, element, material, scene, t2, t1);
    t1.vertices = t2 + 4;
    t1 = this._info.render;
    t4 = t1.faces;
    if (typeof t4 !== "number")
      return this.renderFace4$9$bailout(2, v1, v2, v3, v4, v5, v6, element, material, scene, null, t1, t4);
    t1.faces = t4 + 1;
    this.setOpacity$1(material.get$opacity());
    this.setBlending$1(material.get$blending());
    if (typeof material === "object" && material !== null && !!material.$isITextureMapMaterial) {
      this.renderFace3$9(v1, v2, v4, 0, 1, 3, element, material, scene);
      this.renderFace3$9(v5, v3, v6, 1, 2, 3, element, material, scene);
      return;
    }
    this._v1x = v1.get$positionScreen().get$x();
    this._v1y = v1.get$positionScreen().get$y();
    this._v2x = v2.get$positionScreen().get$x();
    this._v2y = v2.get$positionScreen().get$y();
    this._v3x = v3.get$positionScreen().get$x();
    this._v3y = v3.get$positionScreen().get$y();
    this._v4x = v4.get$positionScreen().get$x();
    this._v4y = v4.get$positionScreen().get$y();
    t1 = v5.positionScreen;
    this._v5x = t1.x;
    this._v5y = t1.y;
    t2 = v6.positionScreen;
    this._v6x = t2.x;
    this._v6y = t2.y;
    if (typeof material === "object" && material !== null && !!material.$isMeshBasicMaterial) {
      this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
      t1 = material.wireframe;
      t2 = material.color;
      if (t1 === true)
        this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
      else {
        this.setFillStyle$1(t2.getContextStyle$0());
        this._context.fill$0();
      }
    } else if (typeof material === "object" && material !== null && !!material.$isMeshLambertMaterial)
      if (this._enableLighting === true) {
        t1 = material.wireframe === true;
        if (!t1) {
          t2 = material.shading;
          if (typeof t2 !== "number")
            return this.renderFace4$9$bailout(3, null, null, null, null, null, null, element, material, null, t2, t1);
          t2 = t2 === 2 && element.vertexNormalsWorld.length === 4;
        } else
          t2 = false;
        t3 = this._ambientLight.r;
        if (t2) {
          this._color4.r = t3;
          this._color3.r = t3;
          this._color2.r = t3;
          this._color1.r = t3;
          t1 = this._ambientLight.g;
          this._color4.g = t1;
          this._color3.g = t1;
          this._color2.g = t1;
          this._color1.g = t1;
          t1 = this._ambientLight.b;
          this._color4.b = t1;
          this._color3.b = t1;
          this._color2.b = t1;
          this._color1.b = t1;
          t1 = this._lights;
          t2 = element.v1.positionWorld;
          t3 = element.vertexNormalsWorld;
          if (0 >= t3.length)
            throw $.ioore(0);
          this.calculateLight$4(t1, t2, t3[0], this._color1);
          t2 = this._lights;
          t1 = element.v2.positionWorld;
          if (1 >= t3.length)
            throw $.ioore(1);
          this.calculateLight$4(t2, t1, t3[1], this._color2);
          t1 = this._lights;
          t2 = element.v4.positionWorld;
          if (3 >= t3.length)
            throw $.ioore(3);
          this.calculateLight$4(t1, t2, t3[3], this._color3);
          t2 = this._lights;
          t1 = element.v3.positionWorld;
          if (2 >= t3.length)
            throw $.ioore(2);
          this.calculateLight$4(t2, t1, t3[2], this._color4);
          t1 = material.color.get$r();
          t4 = this._color1.r;
          if (typeof t1 !== "number")
            return this.renderFace4$9$bailout(4, null, null, null, null, null, null, null, material, null, null, t1);
          if (typeof t4 !== "number")
            return this.renderFace4$9$bailout(5, null, null, null, null, null, null, null, material, null, null, t1, t4);
          t6 = $.max(0, $.min(t1 * t4, 1));
          this._color1.r = t6;
          t6 = material.color.get$g();
          t8 = this._color1.g;
          if (typeof t6 !== "number")
            return this.renderFace4$9$bailout(6, null, null, null, null, null, null, null, material, null, null, null, null, t6);
          if (typeof t8 !== "number")
            return this.renderFace4$9$bailout(7, null, null, null, null, null, null, null, material, null, null, null, null, t6, t8);
          t10 = $.max(0, $.min(t6 * t8, 1));
          this._color1.g = t10;
          t10 = material.color.get$b();
          t12 = this._color1.b;
          if (typeof t10 !== "number")
            return this.renderFace4$9$bailout(8, null, null, null, null, null, null, null, material, null, null, null, null, null, null, t10);
          if (typeof t12 !== "number")
            return this.renderFace4$9$bailout(9, null, null, null, null, null, null, null, material, null, null, null, null, null, null, t10, t12);
          t14 = $.max(0, $.min(t10 * t12, 1));
          this._color1.b = t14;
          t14 = material.color.get$r();
          t16 = this._color2.r;
          if (typeof t14 !== "number")
            return this.renderFace4$9$bailout(10, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, t14);
          if (typeof t16 !== "number")
            return this.renderFace4$9$bailout(11, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, t14, t16);
          t18 = $.max(0, $.min(t14 * t16, 1));
          this._color2.r = t18;
          t18 = material.color.get$g();
          t20 = this._color2.g;
          if (typeof t18 !== "number")
            return this.renderFace4$9$bailout(12, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, t18);
          if (typeof t20 !== "number")
            return this.renderFace4$9$bailout(13, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, t18, t20);
          t22 = $.max(0, $.min(t18 * t20, 1));
          this._color2.g = t22;
          t22 = material.color.get$b();
          t24 = this._color2.b;
          if (typeof t22 !== "number")
            return this.renderFace4$9$bailout(14, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, t22);
          if (typeof t24 !== "number")
            return this.renderFace4$9$bailout(15, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, t22, t24);
          t26 = $.max(0, $.min(t22 * t24, 1));
          this._color2.b = t26;
          t26 = material.color.get$r();
          t28 = this._color3.r;
          if (typeof t26 !== "number")
            return this.renderFace4$9$bailout(16, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t26);
          if (typeof t28 !== "number")
            return this.renderFace4$9$bailout(17, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t26, t28);
          t30 = $.max(0, $.min(t26 * t28, 1));
          this._color3.r = t30;
          t30 = material.color.get$g();
          t32 = this._color3.g;
          if (typeof t30 !== "number")
            return this.renderFace4$9$bailout(18, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t30);
          if (typeof t32 !== "number")
            return this.renderFace4$9$bailout(19, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t30, t32);
          t34 = $.max(0, $.min(t30 * t32, 1));
          this._color3.g = t34;
          t34 = material.color.get$b();
          t36 = this._color3.b;
          if (typeof t34 !== "number")
            return this.renderFace4$9$bailout(20, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t34);
          if (typeof t36 !== "number")
            return this.renderFace4$9$bailout(21, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t34, t36);
          t38 = $.max(0, $.min(t34 * t36, 1));
          this._color3.b = t38;
          t38 = material.color.get$r();
          t40 = this._color4.r;
          if (typeof t38 !== "number")
            return this.renderFace4$9$bailout(22, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t38);
          if (typeof t40 !== "number")
            return this.renderFace4$9$bailout(23, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t38, t40);
          t42 = $.max(0, $.min(t38 * t40, 1));
          this._color4.r = t42;
          t42 = material.color.get$g();
          t44 = this._color4.g;
          if (typeof t42 !== "number")
            return this.renderFace4$9$bailout(24, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t42);
          if (typeof t44 !== "number")
            return this.renderFace4$9$bailout(25, null, null, null, null, null, null, null, material, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t42, t44);
          t46 = $.max(0, $.min(t42 * t44, 1));
          this._color4.g = t46;
          t46 = material.color.get$b();
          t48 = this._color4.b;
          if (typeof t46 !== "number")
            return this.renderFace4$9$bailout(26, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t46);
          if (typeof t48 !== "number")
            return this.renderFace4$9$bailout(27, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t46, t48);
          t50 = $.max(0, $.min(t46 * t48, 1));
          this._color4.b = t50;
          this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
          this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y);
          this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y, 0, 0, 1, 0, 0, 1, this._image);
          this.drawTriangle$6(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y);
          this.clipImage$13(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y, 1, 0, 1, 1, 0, 1, this._image);
        } else {
          this._color.r = t3;
          t2 = this._ambientLight.g;
          this._color.g = t2;
          t2 = this._ambientLight.b;
          this._color.b = t2;
          this.calculateLight$4(this._lights, element.centroidWorld, element.normalWorld, this._color);
          t2 = material.color.get$r();
          t4 = this._color.r;
          if (typeof t2 !== "number")
            return this.renderFace4$9$bailout(28, null, null, null, null, null, null, null, material, null, t2, t1);
          if (typeof t4 !== "number")
            return this.renderFace4$9$bailout(29, null, null, null, null, null, null, null, material, null, t2, t1, t4);
          t6 = $.max(0, $.min(t2 * t4, 1));
          this._color.r = t6;
          t6 = material.color.get$g();
          t8 = this._color.g;
          if (typeof t6 !== "number")
            return this.renderFace4$9$bailout(30, null, null, null, null, null, null, null, material, null, null, t1, null, t6);
          if (typeof t8 !== "number")
            return this.renderFace4$9$bailout(31, null, null, null, null, null, null, null, material, null, null, t1, null, t6, t8);
          t10 = $.max(0, $.min(t6 * t8, 1));
          this._color.g = t10;
          t10 = material.color.get$b();
          t12 = this._color.b;
          if (typeof t10 !== "number")
            return this.renderFace4$9$bailout(32, null, null, null, null, null, null, null, material, null, null, t1, null, null, null, t10);
          if (typeof t12 !== "number")
            return this.renderFace4$9$bailout(33, null, null, null, null, null, null, null, material, null, null, t1, null, null, null, t10, t12);
          t14 = $.max(0, $.min(t10 * t12, 1));
          this._color.b = t14;
          this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
          t2 = this._color;
          if (t1)
            this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
          else {
            this.setFillStyle$1(t2.getContextStyle$0());
            this._context.fill$0();
          }
        }
      } else {
        this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
        t1 = material.wireframe;
        t2 = material.color;
        if (t1 === true)
          this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
        else {
          this.setFillStyle$1(t2.getContextStyle$0());
          this._context.fill$0();
        }
      }
    else if (typeof material === "object" && material !== null && !!material.$isMeshNormalMaterial) {
      t1 = element.normalWorld;
      t2 = this.normalToComponent$1(t1.x);
      this._color.r = t2;
      t2 = this.normalToComponent$1(t1.y);
      this._color.g = t2;
      t2 = this.normalToComponent$1(t1.z);
      this._color.b = t2;
      this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
      t1 = material.wireframe;
      t2 = this._color;
      if (t1 === true)
        this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
      else {
        this.setFillStyle$1(t2.getContextStyle$0());
        this._context.fill$0();
      }
    } else if (typeof material === "object" && material !== null && !!material.$isMeshDepthMaterial) {
      this._near = this._camera.get$near();
      this._far = this._camera.get$far();
      t1 = this.smoothstep$3(v1.get$positionScreen().get$z(), this._near, this._far);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t1 = 1 - t1;
      this._color1.b = t1;
      this._color1.g = t1;
      this._color1.r = t1;
      t1 = this.smoothstep$3(v2.get$positionScreen().get$z(), this._near, this._far);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t1 = 1 - t1;
      this._color2.b = t1;
      this._color2.g = t1;
      this._color2.r = t1;
      t1 = this.smoothstep$3(v4.get$positionScreen().get$z(), this._near, this._far);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t1 = 1 - t1;
      this._color3.b = t1;
      this._color3.g = t1;
      this._color3.r = t1;
      t1 = this.smoothstep$3(v3.get$positionScreen().get$z(), this._near, this._far);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      t1 = 1 - t1;
      this._color4.b = t1;
      this._color4.g = t1;
      this._color4.r = t1;
      this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
      this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y);
      this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y, 0, 0, 1, 0, 0, 1, this._image);
      this.drawTriangle$6(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y);
      this.clipImage$13(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y, 1, 0, 1, 1, 0, 1, this._image);
    }
  },
  renderFace4$9$bailout: function(state0, v1, v2, v3, v4, v5, v6, element, material, scene, t2, t1, t4, t6, t8, t10, t12, t14, t16, t18, t20, t22, t24, t26, t28, t30, t32, t34, t36, t38, t40, t42, t44, t46, t48) {
    switch (state0) {
      case 0:
        t1 = this._info.render;
        t2 = t1.vertices;
      case 1:
        state0 = 0;
        t1.vertices = $.$$add(t2, 4);
        t1 = this._info.render;
        t4 = t1.faces;
      case 2:
        state0 = 0;
        t1.faces = $.$$add(t4, 1);
        this.setOpacity$1(material.get$opacity());
        this.setBlending$1(material.get$blending());
        if (typeof material === "object" && material !== null && !!material.$isITextureMapMaterial) {
          this.renderFace3$9(v1, v2, v4, 0, 1, 3, element, material, scene);
          this.renderFace3$9(v5, v3, v6, 1, 2, 3, element, material, scene);
          return;
        }
        this._v1x = v1.get$positionScreen().get$x();
        this._v1y = v1.get$positionScreen().get$y();
        this._v2x = v2.get$positionScreen().get$x();
        this._v2y = v2.get$positionScreen().get$y();
        this._v3x = v3.get$positionScreen().get$x();
        this._v3y = v3.get$positionScreen().get$y();
        this._v4x = v4.get$positionScreen().get$x();
        this._v4y = v4.get$positionScreen().get$y();
        t1 = v5.positionScreen;
        this._v5x = t1.x;
        this._v5y = t1.y;
        t2 = v6.positionScreen;
        this._v6x = t2.x;
        this._v6y = t2.y;
      default:
        var t3, t50;
        if (state0 === 0 && typeof material === "object" && material !== null && !!material.$isMeshBasicMaterial) {
          this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
          t1 = material.wireframe;
          t2 = material.color;
          if (t1 === true)
            this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
          else {
            this.setFillStyle$1(t2.getContextStyle$0());
            this._context.fill$0();
          }
        } else
          switch (state0) {
            case 0:
            default:
              if (state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && typeof material === "object" && material !== null && !!material.$isMeshLambertMaterial)
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 33 || state0 === 32 || state0 === 31 || state0 === 30 || state0 === 29 || state0 === 28 || state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && this._enableLighting === true)
                      switch (state0) {
                        case 0:
                          t1 = material.wireframe === true;
                        case 3:
                          if (state0 === 3 || state0 === 0 && !t1)
                            switch (state0) {
                              case 0:
                                t2 = material.shading;
                              case 3:
                                state0 = 0;
                                t2 = $.$$eq(t2, 2) === true && element.vertexNormalsWorld.length === 4;
                            }
                          else
                            t2 = false;
                          t3 = this._ambientLight;
                        default:
                          if (state0 === 27 || state0 === 26 || state0 === 25 || state0 === 24 || state0 === 23 || state0 === 22 || state0 === 21 || state0 === 20 || state0 === 19 || state0 === 18 || state0 === 17 || state0 === 16 || state0 === 15 || state0 === 14 || state0 === 13 || state0 === 12 || state0 === 11 || state0 === 10 || state0 === 9 || state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 0 && t2)
                            switch (state0) {
                              case 0:
                                t1 = t3.r;
                                this._color4.r = t1;
                                this._color3.r = t1;
                                this._color2.r = t1;
                                this._color1.r = t1;
                                t1 = this._ambientLight.g;
                                this._color4.g = t1;
                                this._color3.g = t1;
                                this._color2.g = t1;
                                this._color1.g = t1;
                                t1 = this._ambientLight.b;
                                this._color4.b = t1;
                                this._color3.b = t1;
                                this._color2.b = t1;
                                this._color1.b = t1;
                                t1 = this._lights;
                                t2 = element.v1.positionWorld;
                                t3 = element.vertexNormalsWorld;
                                if (0 >= t3.length)
                                  throw $.ioore(0);
                                this.calculateLight$4(t1, t2, t3[0], this._color1);
                                t2 = this._lights;
                                t1 = element.v2.positionWorld;
                                if (1 >= t3.length)
                                  throw $.ioore(1);
                                this.calculateLight$4(t2, t1, t3[1], this._color2);
                                t1 = this._lights;
                                t2 = element.v4.positionWorld;
                                if (3 >= t3.length)
                                  throw $.ioore(3);
                                this.calculateLight$4(t1, t2, t3[3], this._color3);
                                t2 = this._lights;
                                t1 = element.v3.positionWorld;
                                if (2 >= t3.length)
                                  throw $.ioore(2);
                                this.calculateLight$4(t2, t1, t3[2], this._color4);
                                t1 = material.color.get$r();
                              case 4:
                                state0 = 0;
                                t4 = this._color1.r;
                              case 5:
                                state0 = 0;
                                t6 = $.max(0, $.min($.$$mul(t1, t4), 1));
                                this._color1.r = t6;
                                t6 = material.color.get$g();
                              case 6:
                                state0 = 0;
                                t8 = this._color1.g;
                              case 7:
                                state0 = 0;
                                t10 = $.max(0, $.min($.$$mul(t6, t8), 1));
                                this._color1.g = t10;
                                t10 = material.color.get$b();
                              case 8:
                                state0 = 0;
                                t12 = this._color1.b;
                              case 9:
                                state0 = 0;
                                t14 = $.max(0, $.min($.$$mul(t10, t12), 1));
                                this._color1.b = t14;
                                t14 = material.color.get$r();
                              case 10:
                                state0 = 0;
                                t16 = this._color2.r;
                              case 11:
                                state0 = 0;
                                t18 = $.max(0, $.min($.$$mul(t14, t16), 1));
                                this._color2.r = t18;
                                t18 = material.color.get$g();
                              case 12:
                                state0 = 0;
                                t20 = this._color2.g;
                              case 13:
                                state0 = 0;
                                t22 = $.max(0, $.min($.$$mul(t18, t20), 1));
                                this._color2.g = t22;
                                t22 = material.color.get$b();
                              case 14:
                                state0 = 0;
                                t24 = this._color2.b;
                              case 15:
                                state0 = 0;
                                t26 = $.max(0, $.min($.$$mul(t22, t24), 1));
                                this._color2.b = t26;
                                t26 = material.color.get$r();
                              case 16:
                                state0 = 0;
                                t28 = this._color3.r;
                              case 17:
                                state0 = 0;
                                t30 = $.max(0, $.min($.$$mul(t26, t28), 1));
                                this._color3.r = t30;
                                t30 = material.color.get$g();
                              case 18:
                                state0 = 0;
                                t32 = this._color3.g;
                              case 19:
                                state0 = 0;
                                t34 = $.max(0, $.min($.$$mul(t30, t32), 1));
                                this._color3.g = t34;
                                t34 = material.color.get$b();
                              case 20:
                                state0 = 0;
                                t36 = this._color3.b;
                              case 21:
                                state0 = 0;
                                t38 = $.max(0, $.min($.$$mul(t34, t36), 1));
                                this._color3.b = t38;
                                t38 = material.color.get$r();
                              case 22:
                                state0 = 0;
                                t40 = this._color4.r;
                              case 23:
                                state0 = 0;
                                t42 = $.max(0, $.min($.$$mul(t38, t40), 1));
                                this._color4.r = t42;
                                t42 = material.color.get$g();
                              case 24:
                                state0 = 0;
                                t44 = this._color4.g;
                              case 25:
                                state0 = 0;
                                t46 = $.max(0, $.min($.$$mul(t42, t44), 1));
                                this._color4.g = t46;
                                t46 = material.color.get$b();
                              case 26:
                                state0 = 0;
                                t48 = this._color4.b;
                              case 27:
                                state0 = 0;
                                t50 = $.max(0, $.min($.$$mul(t46, t48), 1));
                                this._color4.b = t50;
                                this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
                                this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y);
                                this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y, 0, 0, 1, 0, 0, 1, this._image);
                                this.drawTriangle$6(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y);
                                this.clipImage$13(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y, 1, 0, 1, 1, 0, 1, this._image);
                            }
                          else
                            switch (state0) {
                              case 0:
                                t2 = t3.r;
                                this._color.r = t2;
                                t2 = this._ambientLight.g;
                                this._color.g = t2;
                                t2 = this._ambientLight.b;
                                this._color.b = t2;
                                this.calculateLight$4(this._lights, element.centroidWorld, element.normalWorld, this._color);
                                t2 = material.color.get$r();
                              case 28:
                                state0 = 0;
                                t4 = this._color.r;
                              case 29:
                                state0 = 0;
                                t6 = $.max(0, $.min($.$$mul(t2, t4), 1));
                                this._color.r = t6;
                                t6 = material.color.get$g();
                              case 30:
                                state0 = 0;
                                t8 = this._color.g;
                              case 31:
                                state0 = 0;
                                t10 = $.max(0, $.min($.$$mul(t6, t8), 1));
                                this._color.g = t10;
                                t10 = material.color.get$b();
                              case 32:
                                state0 = 0;
                                t12 = this._color.b;
                              case 33:
                                state0 = 0;
                                t14 = $.max(0, $.min($.$$mul(t10, t12), 1));
                                this._color.b = t14;
                                this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
                                t2 = this._color;
                                if (t1)
                                  this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                                else {
                                  this.setFillStyle$1(t2.getContextStyle$0());
                                  this._context.fill$0();
                                }
                            }
                      }
                    else {
                      this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
                      t1 = material.wireframe;
                      t2 = material.color;
                      if (t1 === true)
                        this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                      else {
                        this.setFillStyle$1(t2.getContextStyle$0());
                        this._context.fill$0();
                      }
                    }
                }
              else if (typeof material === "object" && material !== null && !!material.$isMeshNormalMaterial) {
                t1 = element.normalWorld;
                t2 = this.normalToComponent$1(t1.x);
                this._color.r = t2;
                t2 = this.normalToComponent$1(t1.y);
                this._color.g = t2;
                t2 = this.normalToComponent$1(t1.z);
                this._color.b = t2;
                this.drawQuad$8(this._v1x, this._v1y, this._v2x, this._v2y, this._v3x, this._v3y, this._v4x, this._v4y);
                t1 = material.wireframe;
                t2 = this._color;
                if (t1 === true)
                  this.strokePath$4(t2, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin);
                else {
                  this.setFillStyle$1(t2.getContextStyle$0());
                  this._context.fill$0();
                }
              } else if (typeof material === "object" && material !== null && !!material.$isMeshDepthMaterial) {
                this._near = this._camera.get$near();
                this._far = this._camera.get$far();
                t1 = this.smoothstep$3(v1.get$positionScreen().get$z(), this._near, this._far);
                if (typeof t1 !== "number")
                  throw $.iae(t1);
                t1 = 1 - t1;
                this._color1.b = t1;
                this._color1.g = t1;
                this._color1.r = t1;
                t1 = this.smoothstep$3(v2.get$positionScreen().get$z(), this._near, this._far);
                if (typeof t1 !== "number")
                  throw $.iae(t1);
                t1 = 1 - t1;
                this._color2.b = t1;
                this._color2.g = t1;
                this._color2.r = t1;
                t1 = this.smoothstep$3(v4.get$positionScreen().get$z(), this._near, this._far);
                if (typeof t1 !== "number")
                  throw $.iae(t1);
                t1 = 1 - t1;
                this._color3.b = t1;
                this._color3.g = t1;
                this._color3.r = t1;
                t1 = this.smoothstep$3(v3.get$positionScreen().get$z(), this._near, this._far);
                if (typeof t1 !== "number")
                  throw $.iae(t1);
                t1 = 1 - t1;
                this._color4.b = t1;
                this._color4.g = t1;
                this._color4.r = t1;
                this._image = this.getGradientTexture$4(this._color1, this._color2, this._color3, this._color4);
                this.drawTriangle$6(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y);
                this.clipImage$13(this._v1x, this._v1y, this._v2x, this._v2y, this._v4x, this._v4y, 0, 0, 1, 0, 0, 1, this._image);
                this.drawTriangle$6(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y);
                this.clipImage$13(this._v5x, this._v5y, this._v3x, this._v3y, this._v6x, this._v6y, 1, 0, 1, 1, 0, 1, this._image);
              }
          }
    }
  },
  drawTriangle$6: function(x0, y0, x1, y1, x2, y2) {
    this._context.beginPath$0();
    this._context.moveTo$2(x0, y0);
    this._context.lineTo$2(x1, y1);
    this._context.lineTo$2(x2, y2);
    this._context.lineTo$2(x0, y0);
    this._context.closePath$0();
  },
  drawQuad$8: function(x0, y0, x1, y1, x2, y2, x3, y3) {
    this._context.beginPath$0();
    this._context.moveTo$2(x0, y0);
    this._context.lineTo$2(x1, y1);
    this._context.lineTo$2(x2, y2);
    this._context.lineTo$2(x3, y3);
    this._context.lineTo$2(x0, y0);
    this._context.closePath$0();
  },
  strokePath$4: function(color, linewidth, linecap, linejoin) {
    this.setLineWidth$1(linewidth);
    this.setLineCap$1(linecap);
    this.setLineJoin$1(linejoin);
    this.setStrokeStyle$1(color.getContextStyle$0());
    this._context.stroke$0();
    this._bboxRect.inflate$1($.$$mul(linewidth, 2));
  },
  patternPath$13: function(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, canvas, context, data, idet, t18, t19, t20;
    if ($.$$eq(texture.get$image().get$width(), 0) === true)
      return;
    if ($.$$eq(texture.get$needsUpdate(), true) !== true) {
      t1 = this._patterns;
      t2 = texture.get$id();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t3 = t1[t2] == null;
      t1 = t3;
    } else
      t1 = true;
    if (t1) {
      t1 = $.$$eq(texture.get$wrapS(), 0);
      t2 = $.$$eq(texture.get$wrapT(), 0);
      t3 = this._patterns;
      t4 = texture.get$id();
      t5 = this._context;
      t6 = texture.get$image();
      t1 = t1 === true;
      if (t1 && t2 === true)
        t1 = "repeat";
      else if (t1 && t2 !== true)
        t1 = "repeat-x";
      else
        t1 = !t1 && t2 === true ? "repeat-y" : "no-repeat";
      t1 = t5.createPattern$2(t6, t1);
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t3.length)
        throw $.ioore(t4);
      t3[t4] = t1;
      texture.set$needsUpdate(false);
    }
    t1 = this._patterns;
    t2 = texture.get$id();
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    this.setFillStyle$1(t1[t2]);
    t3 = $.$$div(texture.get$offset().get$x(), texture.get$repeat().get$x());
    t4 = $.$$div(texture.get$offset().get$y(), texture.get$repeat().get$y());
    t5 = $.$$mul(texture.get$image().get$width(), texture.get$repeat().get$x());
    t6 = $.$$mul(texture.get$image().get$height(), texture.get$repeat().get$y());
    t7 = $.$$mul($.$$add(u0, t3), t5);
    t8 = $.$$mul($.$$add(v0, t4), t6);
    t9 = $.$$mul($.$$add(u1, t3), t5);
    t10 = $.$$mul($.$$add(v1, t4), t6);
    t5 = $.$$mul($.$$add(u2, t3), t5);
    t6 = $.$$mul($.$$add(v2, t4), t6);
    t11 = $.$$sub(x1, x0);
    t12 = $.$$sub(y1, y0);
    t13 = $.$$sub(x2, x0);
    t14 = $.$$sub(y2, y0);
    t9 = $.$$sub(t9, t7);
    t10 = $.$$sub(t10, t8);
    t5 = $.$$sub(t5, t7);
    t6 = $.$$sub(t6, t8);
    t15 = $.getInterceptor$JSNumber(t9);
    t16 = $.getInterceptor$JSNumber(t5);
    t17 = $.$$sub(t15.$mul(t9, t6), t16.$mul(t5, t10));
    if ($.$$eq(t17, 0) === true) {
      t1 = this._imagedatas;
      t2 = texture.get$id();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      if (t1[t2] == null) {
        canvas = $.Element_Element$tag("canvas");
        canvas.set$width(texture.get$image().get$width());
        canvas.set$height(texture.get$image().get$height());
        context = canvas.getContext$1("2d");
        context.drawImage$3(texture.get$image(), 0, 0);
        t1 = this._imagedatas;
        t2 = texture.get$id();
        t3 = context.getImageData$4(0, 0, texture.get$image().get$width(), texture.get$image().get$height()).get$data();
        if (t2 !== (t2 | 0))
          throw $.iae(t2);
        if (t2 < 0 || t2 >= t1.length)
          throw $.ioore(t2);
        t1[t2] = t3;
      }
      t1 = this._imagedatas;
      t2 = texture.get$id();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      data = t1[t2];
      t2 = $.$$mul($.$$add($.floor(t7), $.$$mul($.floor(t8), texture.get$image().get$width())), 4);
      t1 = $.getInterceptor$JSStringJSArray(data);
      t3 = $.getInterceptor$JSNumber(t2);
      this._color.setRGB$3($.$$div(t1.$index(data, t2), 255), $.$$div(t1.$index(data, t3.$add(t2, 1)), 255), $.$$div(t1.$index(data, t3.$add(t2, 2)), 255));
      this.setFillStyle$1(this._color.getContextStyle$0());
      this._context.fill$0();
      return;
    }
    if (typeof t17 !== "number")
      throw $.iae(t17);
    idet = 1 / t17;
    t1 = $.getInterceptor$JSNumber(t6);
    t2 = $.getInterceptor$JSNumber(t10);
    t3 = $.$$mul($.$$sub(t1.$mul(t6, t11), t2.$mul(t10, t13)), idet);
    t4 = $.$$mul($.$$sub(t1.$mul(t6, t12), t2.$mul(t10, t14)), idet);
    t17 = $.$$mul($.$$sub(t15.$mul(t9, t13), t16.$mul(t5, t11)), idet);
    t18 = $.$$mul($.$$sub(t15.$mul(t9, t14), t16.$mul(t5, t12)), idet);
    t19 = $.$$sub($.$$sub(x0, $.$$mul(t3, t7)), $.$$mul(t17, t8));
    t20 = $.$$sub($.$$sub(y0, $.$$mul(t4, t7)), $.$$mul(t18, t8));
    this._context.save$0();
    this._context.transform$6(t3, t4, t17, t18, t19, t20);
    this._context.fill$0();
    this._context.restore$0();
  },
  clipImage$13: function(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {
    var t1, t2, t3, t4, t5, t6, u10, v10, u20, v20, idet, a, b, c, d, t7, t8;
    t1 = $.$$sub(image.get$width(), 1);
    t2 = $.$$sub(image.get$height(), 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    u0 *= t1;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    v0 *= t2;
    t3 = $.$$sub(x1, x0);
    t4 = $.$$sub(y1, y0);
    t5 = $.$$sub(x2, x0);
    t6 = $.$$sub(y2, y0);
    u10 = u1 * t1 - u0;
    v10 = v1 * t2 - v0;
    u20 = u2 * t1 - u0;
    v20 = v2 * t2 - v0;
    idet = 1 / (u10 * v20 - u20 * v10);
    if (typeof t3 !== "number")
      throw $.iae(t3);
    if (typeof t5 !== "number")
      throw $.iae(t5);
    a = (v20 * t3 - v10 * t5) * idet;
    if (typeof t4 !== "number")
      throw $.iae(t4);
    if (typeof t6 !== "number")
      throw $.iae(t6);
    b = (v20 * t4 - v10 * t6) * idet;
    c = (u10 * t5 - u20 * t3) * idet;
    d = (u10 * t6 - u20 * t4) * idet;
    t7 = $.$$sub($.$$sub(x0, a * u0), c * v0);
    t8 = $.$$sub($.$$sub(y0, b * u0), d * v0);
    this._context.save$0();
    this._context.transform$6(a, b, c, d, t7, t8);
    this._context.clip$0();
    this._context.drawImage$3(image, 0, 0);
    this._context.restore$0();
  },
  getGradientTexture$4: function(color1, color2, color3, color4) {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14;
    t1 = $.$$not($.$$not($.$$mul(color1.r, 255)));
    t2 = $.$$not($.$$not($.$$mul(color1.g, 255)));
    t3 = $.$$not($.$$not($.$$mul(color1.b, 255)));
    t4 = $.$$not($.$$not($.$$mul(color2.r, 255)));
    t5 = $.$$not($.$$not($.$$mul(color2.g, 255)));
    t6 = $.$$not($.$$not($.$$mul(color2.b, 255)));
    t7 = $.$$not($.$$not($.$$mul(color3.r, 255)));
    t8 = $.$$not($.$$not($.$$mul(color3.g, 255)));
    t9 = $.$$not($.$$not($.$$mul(color3.b, 255)));
    t10 = $.$$not($.$$not($.$$mul(color4.r, 255)));
    t11 = $.$$not($.$$not($.$$mul(color4.g, 255)));
    t12 = $.$$not($.$$not($.$$mul(color4.b, 255)));
    t13 = this._pixelMapData;
    t14 = $.getInterceptor$JSNumber(t1);
    if (t14.$lt(t1, 0) === true)
      t1 = 0;
    else if (t14.$gt(t1, 255) === true)
      t1 = 255;
    $.$$indexSet(t13, 0, t1);
    t1 = this._pixelMapData;
    t13 = $.getInterceptor$JSNumber(t2);
    if (t13.$lt(t2, 0) === true)
      t2 = 0;
    else if (t13.$gt(t2, 255) === true)
      t2 = 255;
    $.$$indexSet(t1, 1, t2);
    t2 = this._pixelMapData;
    t1 = $.getInterceptor$JSNumber(t3);
    if (t1.$lt(t3, 0) === true)
      t1 = 0;
    else
      t1 = t1.$gt(t3, 255) === true ? 255 : t3;
    $.$$indexSet(t2, 2, t1);
    t1 = this._pixelMapData;
    t2 = $.getInterceptor$JSNumber(t4);
    if (t2.$lt(t4, 0) === true)
      t2 = 0;
    else
      t2 = t2.$gt(t4, 255) === true ? 255 : t4;
    $.$$indexSet(t1, 4, t2);
    t2 = this._pixelMapData;
    t1 = $.getInterceptor$JSNumber(t5);
    if (t1.$lt(t5, 0) === true)
      t1 = 0;
    else
      t1 = t1.$gt(t5, 255) === true ? 255 : t5;
    $.$$indexSet(t2, 5, t1);
    t1 = this._pixelMapData;
    t2 = $.getInterceptor$JSNumber(t6);
    if (t2.$lt(t6, 0) === true)
      t2 = 0;
    else
      t2 = t2.$gt(t6, 255) === true ? 255 : t6;
    $.$$indexSet(t1, 6, t2);
    t2 = this._pixelMapData;
    t1 = $.getInterceptor$JSNumber(t7);
    if (t1.$lt(t7, 0) === true)
      t1 = 0;
    else
      t1 = t1.$gt(t7, 255) === true ? 255 : t7;
    $.$$indexSet(t2, 8, t1);
    t1 = this._pixelMapData;
    t2 = $.getInterceptor$JSNumber(t8);
    if (t2.$lt(t8, 0) === true)
      t2 = 0;
    else
      t2 = t2.$gt(t8, 255) === true ? 255 : t8;
    $.$$indexSet(t1, 9, t2);
    t2 = this._pixelMapData;
    t1 = $.getInterceptor$JSNumber(t9);
    if (t1.$lt(t9, 0) === true)
      t1 = 0;
    else
      t1 = t1.$gt(t9, 255) === true ? 255 : t9;
    $.$$indexSet(t2, 10, t1);
    t1 = this._pixelMapData;
    t2 = $.getInterceptor$JSNumber(t10);
    if (t2.$lt(t10, 0) === true)
      t2 = 0;
    else
      t2 = t2.$gt(t10, 255) === true ? 255 : t10;
    $.$$indexSet(t1, 12, t2);
    t2 = this._pixelMapData;
    t1 = $.getInterceptor$JSNumber(t11);
    if (t1.$lt(t11, 0) === true)
      t1 = 0;
    else
      t1 = t1.$gt(t11, 255) === true ? 255 : t11;
    $.$$indexSet(t2, 13, t1);
    t1 = this._pixelMapData;
    t2 = $.getInterceptor$JSNumber(t12);
    if (t2.$lt(t12, 0) === true)
      t2 = 0;
    else
      t2 = t2.$gt(t12, 255) === true ? 255 : t12;
    $.$$indexSet(t1, 14, t2);
    this._pixelMapContext.putImageData$3(this._pixelMapImage, 0, 0);
    this._gradientMapContext.drawImage$3(this._pixelMap, 0, 0);
    return this._gradientMap;
  },
  smoothstep$3: function(value, min, max) {
    var t1, t2;
    t1 = $.$$div($.$$sub(value, min), $.$$sub(max, min));
    t2 = $.$$mul(t1, t1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $.$$mul(t2, 3 - 2 * t1);
  },
  normalToComponent$1: function(normal) {
    var t1, t2;
    t1 = $.$$mul($.$$add(normal, 1), 0.5);
    t2 = $.getInterceptor$JSNumber(t1);
    if (t2.$lt(t1, 0) === true)
      t1 = 0;
    else if (t2.$gt(t1, 1) === true)
      t1 = 1;
    return t1;
  },
  expand$2: function(v1, v2) {
    var t1, t3, t6, idet, x, y, t2, t4, t8;
    t1 = v2.get$x();
    t3 = v1.get$x();
    if (typeof t1 !== "number")
      return this.expand$2$bailout(1, v1, v2, t1);
    if (typeof t3 !== "number")
      return this.expand$2$bailout(2, v1, v2, t1, t3);
    t3 = t1 - t3;
    t1 = v2.get$y();
    t6 = v1.get$y();
    if (typeof t1 !== "number")
      return this.expand$2$bailout(3, v1, v2, t1, t3);
    if (typeof t6 !== "number")
      return this.expand$2$bailout(4, v1, v2, t1, t3, t6);
    t6 = t1 - t6;
    t1 = t3 * t3 + t6 * t6;
    if (t1 === 0)
      return;
    idet = 1 / Math.sqrt($.checkNum(t1));
    x = t3 * idet;
    y = t6 * idet;
    t2 = v2.get$x();
    if (typeof t2 !== "number")
      return this.expand$2$bailout(6, v1, v2, null, null, t2, null, null, x, y);
    v2.set$x(t2 + x);
    t4 = v2.get$y();
    if (typeof t4 !== "number")
      return this.expand$2$bailout(7, v1, v2, null, t4, null, null, null, x, y);
    v2.set$y(t4 + y);
    t6 = v1.get$x();
    if (typeof t6 !== "number")
      return this.expand$2$bailout(8, v1, null, null, null, null, null, null, x, y, t6);
    v1.set$x(t6 - x);
    t8 = v1.get$y();
    if (typeof t8 !== "number")
      return this.expand$2$bailout(9, v1, null, null, null, null, null, null, null, y, null, t8);
    v1.set$y(t8 - y);
  },
  expand$2$bailout: function(state0, v1, v2, t1, t3, t6, idet, t8, x, y, t4, t7) {
    switch (state0) {
      case 0:
        t1 = v2.get$x();
      case 1:
        state0 = 0;
        t3 = v1.get$x();
      case 2:
        state0 = 0;
        t3 = $.$$sub(t1, t3);
        t1 = v2.get$y();
      case 3:
        state0 = 0;
        t6 = v1.get$y();
      case 4:
        state0 = 0;
        t6 = $.$$sub(t1, t6);
        t1 = $.getInterceptor$JSNumber(t3);
        t8 = $.getInterceptor$JSNumber(t6);
        t9 = $.$$add(t1.$mul(t3, t3), t8.$mul(t6, t6));
        if ($.$$eq(t9, 0) === true)
          return;
        idet = 1 / Math.sqrt($.checkNum(t9));
      case 5:
        state0 = 0;
        x = t1.$mul(t3, idet);
        y = t8.$mul(t6, idet);
        t6 = v2.get$x();
      case 6:
        state0 = 0;
        v2.set$x($.$$add(t6, x));
        t3 = v2.get$y();
      case 7:
        state0 = 0;
        v2.set$y($.$$add(t3, y));
        t4 = v1.get$x();
      case 8:
        state0 = 0;
        v1.set$x($.$$sub(t4, x));
        t7 = v1.get$y();
      case 9:
        var t9;
        state0 = 0;
        v1.set$y($.$$sub(t7, y));
    }
  },
  setOpacity$1: function(value) {
    if ($.$$eq(this._contextGlobalAlpha, value) !== true) {
      this._contextGlobalAlpha = value;
      this._context.set$globalAlpha(value);
    }
  },
  setBlending$1: function(value) {
    if ($.$$eq(this._contextGlobalCompositeOperation, value) !== true) {
      switch (value) {
        case 1:
          this._context.set$globalCompositeOperation("source-over");
          break;
        case 2:
          this._context.set$globalCompositeOperation("lighter");
          break;
        case 3:
          this._context.set$globalCompositeOperation("darker");
          break;
      }
      this._contextGlobalCompositeOperation = value;
    }
  },
  setLineWidth$1: function(value) {
    if ($.$$eq(this._contextLineWidth, value) !== true) {
      this._contextLineWidth = value;
      this._context.set$lineWidth(value);
    }
  },
  setLineCap$1: function(value) {
    if ($.$$eq(this._contextLineCap, value) !== true) {
      this._contextLineCap = value;
      this._context.set$lineCap(value);
    }
  },
  setLineJoin$1: function(value) {
    if ($.$$eq(this._contextLineJoin, value) !== true) {
      this._contextLineJoin = value;
      this._context.set$lineJoin(value);
    }
  },
  setStrokeStyle$1: function(style) {
    if ($.$$eq(this._contextStrokeStyle, style) !== true) {
      this._contextStrokeStyle = style;
      this._context.set$strokeStyle(style);
    }
  },
  setFillStyle$1: function(style) {
    var t1;
    if ($.$$eq(this._contextFillStyle, style) !== true) {
      this._contextFillStyle = style;
      t1 = this._contextFillStyle;
      this._context.set$fillStyle(t1);
    }
  },
  CanvasRenderer$1: function(parameters) {
    var t1, t2;
    parameters = !(parameters == null) ? parameters : $.makeLiteralMap([]);
    this._projector = $.Projector$();
    t1 = $.getInterceptor$JSStringJSArray(parameters);
    this._canvas = !(t1.$index(parameters, "canvas") == null) ? t1.$index(parameters, "canvas") : $.Element_Element$tag("canvas");
    this._context = this._canvas.getContext$1("2d");
    this.debug = !(t1.$index(parameters, "debug") == null) && t1.$index(parameters, "debug");
    this._clearColor = $.Color$(0);
    this._clearOpacity = 0;
    this._contextGlobalAlpha = 1;
    this._contextGlobalCompositeOperation = 0;
    this._contextStrokeStyle = null;
    this._contextFillStyle = null;
    this._contextLineWidth = null;
    this._contextLineCap = null;
    this._contextLineJoin = null;
    this._v5 = $.RenderableVertex$();
    this._v6 = $.RenderableVertex$();
    this._color = $.Color$(null);
    this._color1 = $.Color$(null);
    this._color2 = $.Color$(null);
    this._color3 = $.Color$(null);
    this._color4 = $.Color$(null);
    this._patterns = [];
    this._imagedatas = [];
    this._clipRect = $.Rectangle$();
    this._clearRect = $.Rectangle$();
    this._bboxRect = $.Rectangle$();
    this._enableLighting = false;
    this._ambientLight = $.Color$(null);
    this._directionalLights = $.Color$(null);
    this._pointLights = $.Color$(null);
    this._vector3 = $.Vector3$(0, 0, 0);
    this._gradientMapQuality = 16;
    this._pixelMap = $.Element_Element$tag("canvas");
    this._pixelMap.set$height(2);
    this._pixelMap.set$width(2);
    this._pixelMapContext = this._pixelMap.getContext$1("2d");
    this._pixelMapContext.set$fillStyle("rgba(0,0,0,1)");
    this._pixelMapContext.fillRect$4(0, 0, 2, 2);
    this._pixelMapImage = this._pixelMapContext.getImageData$4(0, 0, 2, 2);
    this._pixelMapData = this._pixelMapImage.get$data();
    this._gradientMap = $.Element_Element$tag("canvas");
    t1 = this._gradientMapQuality;
    this._gradientMap.set$height(t1);
    this._gradientMap.set$width(t1);
    this._gradientMapContext = this._gradientMap.getContext$1("2d");
    t1 = -this._gradientMapQuality / 2;
    this._gradientMapContext.translate$2(t1, t1);
    t1 = this._gradientMapContext;
    t2 = this._gradientMapQuality;
    t1.scale$2(t2, t2);
    this._gradientMapQuality = this._gradientMapQuality - 1;
    this.domElement = this._canvas;
    this._autoClear = true;
    this._sortObjects = true;
    this._sortElements = true;
    this._info = $.CanvasRenderData$();
  }
};

$$.CanvasRenderData = {"": "Object;render",
  render$0: function() {
    return this.render.call$0();
  },
  render$2: function(arg0, arg1) {
    return this.render.call$2(arg0, arg1);
  },
  CanvasRenderData$0: function() {
    this.render = $.RenderInts$();
  }
};

$$.RenderInts = {"": "Object;vertices>,faces>",
  reset$0: function() {
    this.vertices = 0;
    this.faces = 0;
  },
  RenderInts$0: function() {
    this.reset$0();
  }
};

$$.Scene = {"": "Object3D;fog,overrideMaterial,objects=,lights=,__objectsAdded,__objectsRemoved,id,name,properties,parent,children,up,position,rotation,scale,eulerOrder,_dynamic,doubleSided,flipSided,rotationAutoUpdate,renderDepth,matrix,matrixWorld,matrixRotationWorld,matrixAutoUpdate,matrixWorldNeedsUpdate,quaternion,useQuaternion,boundRadius,boundRadiusScale,visible,castShadow,receiveShadow,frustumCulled,_vector,__data",
  addObject$1: function(object) {
    var t1, i, c;
    if (typeof object === "object" && object !== null && !!object.$isLight) {
      t1 = $.indexOf0(this.lights, object);
      if (typeof t1 !== "number")
        return this.addObject$1$bailout(1, object, t1);
      if (t1 === -1)
        $.add(this.lights, object);
    } else if (!(typeof object === "object" && object !== null && !!object.$isCamera || typeof object === "object" && object !== null && !!object.$isBone)) {
      t1 = $.indexOf0(this.objects, object);
      if (typeof t1 !== "number")
        return this.addObject$1$bailout(2, object, t1);
      if (t1 === -1) {
        $.add(this.objects, object);
        this.__objectsAdded.push(object);
        i = $.CONSTANT2.indexOf$1(this.__objectsRemoved, object);
        if (typeof i !== "number")
          return this.addObject$1$bailout(3, object, null, i);
        if (!(i === -1))
          $.CONSTANT2.removeRange$2(this.__objectsRemoved, i, 1);
      }
    }
    c = 0;
    while (true) {
      t1 = $.length(object.get$children());
      if (typeof t1 !== "number")
        return this.addObject$1$bailout(4, object, t1, null, c);
      if (!(c < t1))
        break;
      t1 = object.get$children();
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.addObject$1$bailout(5, object, t1, null, c);
      if (c >= t1.length)
        throw $.ioore(c);
      this.addObject$1(t1[c]);
      ++c;
    }
  },
  addObject$1$bailout: function(state0, object, t1, i, c) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 1 || state0 === 0 && typeof object === "object" && object !== null && !!object.$isLight)
          switch (state0) {
            case 0:
              t1 = $.indexOf0(this.lights, object);
            case 1:
              state0 = 0;
              if ($.$$eq(t1, -1) === true)
                $.add(this.lights, object);
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 3 || state0 === 2 || state0 === 0 && !(typeof object === "object" && object !== null && !!object.$isCamera || typeof object === "object" && object !== null && !!object.$isBone))
                switch (state0) {
                  case 0:
                    t1 = $.indexOf0(this.objects, object);
                  case 2:
                    state0 = 0;
                  case 3:
                    if (state0 === 3 || state0 === 0 && $.$$eq(t1, -1) === true)
                      switch (state0) {
                        case 0:
                          $.add(this.objects, object);
                          this.__objectsAdded.push(object);
                          i = $.CONSTANT2.indexOf$1(this.__objectsRemoved, object);
                        case 3:
                          state0 = 0;
                          if ($.$$eq(i, -1) !== true)
                            $.CONSTANT2.removeRange$2(this.__objectsRemoved, i, 1);
                      }
                }
          }
        c = 0;
      case 4:
      case 5:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = $.length(object.get$children());
              case 4:
                state0 = 0;
                if (!$.CONSTANT0.$lt(c, t1))
                  break L0;
                t1 = object.get$children();
              case 5:
                state0 = 0;
                this.addObject$1($.$$index(t1, c));
                ++c;
            }
    }
  },
  removeObject$1: function(object) {
    var t1, ai, c;
    if (typeof object === "object" && object !== null && !!object.$isLight) {
      t1 = $.indexOf0(this.lights, object);
      if (typeof t1 !== "number")
        return this.removeObject$1$bailout(1, object, t1);
      if (!(t1 === -1))
        $.removeRange(this.lights, t1, 1);
    } else if (!(typeof object === "object" && object !== null && !!object.$isCamera)) {
      t1 = $.indexOf0(this.objects, object);
      if (typeof t1 !== "number")
        return this.removeObject$1$bailout(2, object, t1);
      if (!(t1 === -1)) {
        $.removeRange(this.objects, t1, 1);
        this.__objectsRemoved.push(object);
        ai = $.CONSTANT2.indexOf$1(this.__objectsAdded, object);
        if (typeof ai !== "number")
          return this.removeObject$1$bailout(3, object, null, ai);
        if (!(ai === -1))
          $.CONSTANT2.removeRange$2(this.__objectsAdded, ai, 1);
      }
    }
    c = 0;
    while (true) {
      t1 = $.length(object.get$children());
      if (typeof t1 !== "number")
        return this.removeObject$1$bailout(4, object, t1, null, c);
      if (!(c < t1))
        break;
      t1 = object.get$children();
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.removeObject$1$bailout(5, object, t1, null, c);
      if (c >= t1.length)
        throw $.ioore(c);
      this.removeObject$1(t1[c]);
      ++c;
    }
  },
  removeObject$1$bailout: function(state0, object, t1, ai, c) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 1 || state0 === 0 && typeof object === "object" && object !== null && !!object.$isLight)
          switch (state0) {
            case 0:
              t1 = $.indexOf0(this.lights, object);
            case 1:
              state0 = 0;
              if ($.$$eq(t1, -1) !== true)
                $.removeRange(this.lights, t1, 1);
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 3 || state0 === 2 || state0 === 0 && !(typeof object === "object" && object !== null && !!object.$isCamera))
                switch (state0) {
                  case 0:
                    t1 = $.indexOf0(this.objects, object);
                  case 2:
                    state0 = 0;
                  case 3:
                    if (state0 === 3 || state0 === 0 && $.$$eq(t1, -1) !== true)
                      switch (state0) {
                        case 0:
                          $.removeRange(this.objects, t1, 1);
                          this.__objectsRemoved.push(object);
                          ai = $.CONSTANT2.indexOf$1(this.__objectsAdded, object);
                        case 3:
                          state0 = 0;
                          if ($.$$eq(ai, -1) !== true)
                            $.CONSTANT2.removeRange$2(this.__objectsAdded, ai, 1);
                      }
                }
          }
        c = 0;
      case 4:
      case 5:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = $.length(object.get$children());
              case 4:
                state0 = 0;
                if (!$.CONSTANT0.$lt(c, t1))
                  break L0;
                t1 = object.get$children();
              case 5:
                state0 = 0;
                this.removeObject$1($.$$index(t1, c));
                ++c;
            }
    }
  },
  Scene$0: function() {
    this.fog = null;
    this.overrideMaterial = null;
    this.matrixAutoUpdate = false;
    this.objects = [];
    this.lights = [];
    this.__objectsAdded = [];
    this.__objectsRemoved = [];
  },
  $isScene: true
};

$$.Canvas_Interactive_Cubes_init_anon = {"": "Closure;",
  call$1: function(context) {
    context.beginPath$0();
    context.arc$6(0, 0, 1, 0, 6.283185307179586, false);
    context.closePath$0();
    context.fill$0();
  }
};

$$.Canvas_Interactive_Cubes_init_anon0 = {"": "Closure;this_0",
  call$0: function() {
    this.this_0.render$0();
    return;
  }
};

$$.Maps__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true)
      $.add(this.result_1, ", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.Collections__emitObject(k, t1, t2);
    $.add(t1, ": ");
    $.Collections__emitObject(v, t1, t2);
  }
};

$$._LinkedHashMapImpl_forEach_anon = {"": "Closure;f_0",
  call$1: function(entry) {
    this.f_0.call$2(entry.get$key(), entry.get$value());
  }
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$$gt(t1.i_1, 0) === true)
      $.add(t1.sb_0, ", ");
    $.add(t1.sb_0, key);
    $.add(t1.sb_0, ": ");
    $.add(t1.sb_0, $.Error_safeToString(value));
    t1.i_1 = $.$$add(t1.i_1, 1);
  }
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, length, i, t2;
    t1 = this.values_0;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.call$1$bailout0(1, value, t1);
    length = t1.length;
    for (i = 0; i < length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    $.add(t1, value);
    $.add(this.copies_1, null);
    return length;
  },
  call$1$bailout0: function(state0, value, t1, t3, length) {
    switch (state0) {
      case 0:
        t1 = this.values_0;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        length = t3.get$length(t1);
      case 2:
        var i, t2;
        state0 = 0;
        for (i = 0; $.CONSTANT0.$lt(i, length); ++i) {
          t2 = t3.$index(t1, i);
          if (t2 == null ? value == null : t2 === value)
            return i;
        }
        $.add(t1, value);
        $.add(this.copies_1, null);
        return length;
    }
  }
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {"": "Closure;copies_2",
  call$1: function(i) {
    return $.$$index(this.copies_2, i);
  }
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {"": "Closure;copies_3",
  call$2: function(i, x) {
    $.$$indexSet(this.copies_3, i, x);
  }
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, t2, t3, length, i;
    if (typeof e !== "object" || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.$isJavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    if (e instanceof Date)
      throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
    if (e instanceof RegExp)
      throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (!(copy == null))
        return copy;
      copy = $.makeLiteralMap([]);
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.$isJavaScriptIndexingBehavior())
        return this.call$1$bailout(2, e, copy, slot);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = $.CONSTANT2.get$iterator(Object.keys(e)); t1.moveNext$0() === true;) {
        t2 = t1.get$current();
        t3 = this.call$1(e[t2]);
        if (t2 !== (t2 | 0))
          throw $.iae(t2);
        if (t2 < 0 || t2 >= copy.length)
          throw $.ioore(t2);
        copy[t2] = t3;
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (!(copy == null))
        return copy;
      length = e.length;
      if (this.mustCopy_4 === true)
        copy = new Array(length);
      else
        copy = e;
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.$isJavaScriptIndexingBehavior())
        return this.call$1$bailout(4, e, copy, slot, length, $.CONSTANT2);
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    return e;
  },
  call$1$bailout: function(state0, e, copy, slot, length, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor(e);
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date)
          throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
        if (e instanceof RegExp)
          throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
      case 2:
        if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (!(copy == null))
                return copy;
              copy = $.makeLiteralMap([]);
            case 2:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              for (t1 = $.CONSTANT2.get$iterator(Object.keys(e)), t2 = $.getInterceptor$JSArray(copy); t1.moveNext$0() === true;) {
                t3 = t1.get$current();
                t2.$indexSet(copy, t3, this.call$1(e[t3]));
              }
              return copy;
          }
      default:
        var t2, t3, i;
        if (state0 === 4 || state0 === 3 || state0 === 0 && e instanceof Array)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (!(copy == null))
                return copy;
              length = t1.get$length(e);
            case 3:
              state0 = 0;
              copy = this.mustCopy_4 === true ? new Array(length) : e;
            case 4:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              for (t2 = $.getInterceptor$JSArray(copy), i = 0; $.CONSTANT0.$lt(i, length); ++i)
                t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
              return copy;
          }
        return e;
    }
  }
};

$$.anon = {"": "Closure;",
  call$1: function(context) {
  }
};

$$.Geometry_computeCentroids_anon = {"": "Closure;this_0",
  call$1: function(face) {
    var t1, t2;
    face.get$centroid().setValues$3(0, 0, 0);
    if (typeof face === "object" && face !== null && !!face.$isFace3) {
      t1 = face.centroid;
      t2 = this.this_0;
      t1.addSelf$1($.$$index(t2.get$vertices(), face.a));
      face.centroid.addSelf$1($.$$index(t2.get$vertices(), face.b));
      face.centroid.addSelf$1($.$$index(t2.get$vertices(), face.c));
      face.centroid.divideScalar$1(3);
    } else if (typeof face === "object" && face !== null && !!face.$isFace4) {
      t1 = face.centroid;
      t2 = this.this_0;
      t1.addSelf$1($.$$index(t2.get$vertices(), face.a));
      face.centroid.addSelf$1($.$$index(t2.get$vertices(), face.b));
      face.centroid.addSelf$1($.$$index(t2.get$vertices(), face.c));
      face.centroid.addSelf$1($.$$index(t2.get$vertices(), face.d));
      face.centroid.divideScalar$1(4);
    }
  }
};

$$.Geometry_computeBoundingSphere_anon = {"": "Closure;box_0",
  call$2: function(curMaxRadiusSq, vertex) {
    var radiusSq, t1;
    radiusSq = vertex.lengthSq$0();
    t1 = this.box_0;
    t1.radiusSq_0 = radiusSq;
    return $.$$gt(t1.radiusSq_0, curMaxRadiusSq) === true ? t1.radiusSq_0 : curMaxRadiusSq;
  }
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
};

$$.Ray_intersectObjects_anon = {"": "Closure;this_0,intersects_1",
  call$1: function(o) {
    return $.addAll(this.intersects_1, this.this_0.intersectObject$1(o));
  }
};

$$.Ray_intersectObjects_anon0 = {"": "Closure;",
  call$2: function(a, b) {
    return $.compareTo(a.get$distance(), b.get$distance());
  }
};

$$.Ray_intersectObject_anon = {"": "Closure;this_0,intersects_1",
  call$1: function(child) {
    $.addAll(this.intersects_1, this.this_0.intersectObject$1(child));
  }
};

$$.FilteredElementList__filtered_anon = {"": "Closure;",
  call$1: function(n) {
    return typeof n === "object" && n !== null && n.$isElement();
  }
};

$$.Projector_projectScene_anon = {"": "Closure;box_0,this_1,near_2,far_3",
  call$1: function(o) {
    var object, t1, t2, t3, t4, t5, step;
    object = o.get$object();
    t1 = this.box_0;
    t1.object_11 = object;
    t1.modelMatrix_12 = t1.object_11.get$matrixWorld();
    t2 = this.this_1;
    t2.set$_vertexCount(0);
    t3 = t1.object_11;
    if (typeof t3 === "object" && t3 !== null && !!t3.$isMesh) {
      t1.geometry_14 = t3.geometry;
      t1.geometryMaterials_15 = t1.object_11.get$geometry().get$materials();
      t1.vertices_16 = t1.geometry_14.get$vertices();
      t1.faces_18 = t1.geometry_14.get$faces();
      t1.faceVertexUvs_22 = t1.geometry_14.get$faceVertexUvs();
      t1.rotationMatrix_13 = t1.object_11.get$matrixRotationWorld().extractRotation$1(t1.modelMatrix_12);
      t4 = t1.object_11.get$material();
      t1.isFaceMaterial_27 = typeof t4 === "object" && t4 !== null && !!t4.$isMeshFaceMaterial;
      t1.side_29 = t1.object_11.get$material().get$side();
      $.forEach(t1.vertices_16, new $.Projector_projectScene__anon(t1, t2, this.near_2, this.far_3));
      t1.fl_4 = $.length(t1.faces_18);
      for (t1.f_3 = 0; $.$$lt(t1.f_3, t1.fl_4) === true; t1.f_3 = $.$$add(t1.f_3, 1)) {
        t1.face_19 = $.$$index(t1.faces_18, t1.f_3);
        t1.material_28 = $.$$eq(t1.isFaceMaterial_27, true) === true ? $.$$index(t1.geometryMaterials_15, t1.face_19.get$materialIndex()) : t1.object_11.get$material();
        t3 = t1.material_28;
        if (t3 == null)
          continue;
        t1.side_29 = t3.get$side();
        t3 = t1.face_19;
        if (typeof t3 === "object" && t3 !== null && !!t3.$isFace3) {
          t1.v1_23 = $.$$index(t2.get$_vertexPool(), t3.a);
          t1.v2_24 = $.$$index(t2.get$_vertexPool(), t1.face_19.get$b());
          t1.v3_25 = $.$$index(t2.get$_vertexPool(), t1.face_19.get$c());
          t3 = t1.v1_23;
          if (t3.get$visible() === true && t1.v2_24.get$visible() === true && t1.v3_25.get$visible() === true) {
            t1.visible_0 = $.$$lt($.$$sub($.$$mul($.$$sub(t1.v3_25.get$positionScreen().get$x(), t3.get$positionScreen().get$x()), $.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v3_25.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y()), $.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v1_23.get$positionScreen().get$x()))), 0);
            if ($.$$eq(t1.side_29, 2) === true || $.$$eq(t1.visible_0, $.$$eq(t1.side_29, 0)) === true) {
              t1._face_20 = t2.getNextFace3InPool$0();
              t1._face_20.get$v1().copy$1(t1.v1_23);
              t1._face_20.get$v2().copy$1(t1.v2_24);
              t1._face_20.get$v3().copy$1(t1.v3_25);
            } else
              continue;
          } else
            continue;
        } else if (typeof t3 === "object" && t3 !== null && !!t3.$isFace4) {
          t1.v1_23 = $.$$index(t2.get$_vertexPool(), t3.a);
          t1.v2_24 = $.$$index(t2.get$_vertexPool(), t3.b);
          t1.v3_25 = $.$$index(t2.get$_vertexPool(), t3.c);
          t1.v4_26 = $.$$index(t2.get$_vertexPool(), t3.d);
          t3 = t1.v1_23;
          if (t3.get$visible() === true && t1.v2_24.get$visible() === true && t1.v3_25.get$visible() === true && t1.v4_26.get$visible() === true) {
            t1.visible_0 = $.$$lt($.$$sub($.$$mul($.$$sub(t1.v4_26.get$positionScreen().get$x(), t3.get$positionScreen().get$x()), $.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v4_26.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y()), $.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v1_23.get$positionScreen().get$x()))), 0) === true || $.$$lt($.$$sub($.$$mul($.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v3_25.get$positionScreen().get$x()), $.$$sub(t1.v4_26.get$positionScreen().get$y(), t1.v3_25.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v3_25.get$positionScreen().get$y()), $.$$sub(t1.v4_26.get$positionScreen().get$x(), t1.v3_25.get$positionScreen().get$x()))), 0) === true;
            if ($.$$eq(t1.side_29, 2) === true || $.$$eq(t1.visible_0, $.$$eq(t1.side_29, 0)) === true) {
              t1._face_20 = t2.getNextFace4InPool$0();
              t1._face_20.get$v1().copy$1(t1.v1_23);
              t1._face_20.get$v2().copy$1(t1.v2_24);
              t1._face_20.get$v3().copy$1(t1.v3_25);
              $.propertyTypeCast(t1._face_20, "$isIRenderableFace4").get$v4().copy$1(t1.v4_26);
            } else
              continue;
          } else
            continue;
        }
        t1._face_20.get$normalWorld().copy$1(t1.face_19.get$normal());
        if ($.$$eq(t1.visible_0, false) === true)
          t3 = $.$$eq(t1.side_29, 1) === true || $.$$eq(t1.side_29, 2) === true;
        else
          t3 = false;
        if (t3)
          t1._face_20.get$normalWorld().negate$0();
        t1.rotationMatrix_13.multiplyVector3$1(t1._face_20.get$normalWorld());
        t1._face_20.get$centroidWorld().copy$1(t1.face_19.get$centroid());
        t1.modelMatrix_12.multiplyVector3$1(t1._face_20.get$centroidWorld());
        t3 = t1._face_20;
        t3.get$centroidScreen().copy$1(t3.get$centroidWorld());
        t2.get$_viewProjectionMatrix().multiplyVector3$1(t1._face_20.get$centroidScreen());
        t1.faceVertexNormals_21 = t1.face_19.get$vertexNormals();
        t1.nl_6 = $.length(t1.faceVertexNormals_21);
        for (t1.n_5 = 0; $.$$lt(t1.n_5, t1.nl_6) === true; t1.n_5 = $.$$add(t1.n_5, 1)) {
          t1.normal_17 = $.$$index(t1._face_20.get$vertexNormalsWorld(), t1.n_5);
          t1.normal_17.copy$1($.$$index(t1.faceVertexNormals_21, t1.n_5));
          if (t1.visible_0 !== true)
            t3 = $.$$eq(t1.side_29, 1) === true || $.$$eq(t1.side_29, 2) === true;
          else
            t3 = false;
          if (t3)
            t1.normal_17.negate$0();
          t1.rotationMatrix_13.multiplyVector3$1(t1.normal_17);
        }
        t1.cl_8 = $.length(t1.faceVertexUvs_22);
        for (t1.c_7 = 0; $.$$lt(t1.c_7, t1.cl_8) === true; t1.c_7 = $.$$add(t1.c_7, 1)) {
          t3 = $.$$index($.$$index(t1.faceVertexUvs_22, t1.c_7), t1.f_3);
          if (typeof t3 !== "string" && (typeof t3 !== "object" || t3 === null || t3.constructor !== Array && !t3.$isJavaScriptIndexingBehavior()))
            return this.call$1$bailout1(1, t3, t1, t2);
          t1.ul_10 = t3.length;
          for (t1.u_9 = 0; $.$$lt(t1.u_9, t1.ul_10) === true; t1.u_9 = $.$$add(t1.u_9, 1)) {
            t4 = $.$$index(t1._face_20.get$uvs(), t1.c_7);
            t5 = t1.u_9;
            if (t5 !== (t5 | 0))
              throw $.iae(t5);
            if (t5 < 0 || t5 >= t3.length)
              throw $.ioore(t5);
            $.add(t4, t3[t5]);
          }
        }
        t3 = t1.material_28;
        t1._face_20.set$material(t3);
        t3 = t1.face_19.get$materialIndex();
        t3 = !(t3 == null) ? $.$$index(t1.geometryMaterials_15, t3) : null;
        t1._face_20.set$faceMaterial(t3);
        t3 = t1._face_20;
        t3.set$z(t3.get$centroidScreen().get$z());
        $.add(t2.get$_renderData().get$elements(), t1._face_20);
      }
    } else if (typeof t3 === "object" && t3 !== null && !!t3.$isLine) {
      t2.get$_modelViewProjectionMatrix().multiply$2(t2.get$_viewProjectionMatrix(), t1.modelMatrix_12);
      t1.vertices_16 = t1.object_11.get$geometry().get$vertices();
      t1.v1_23 = t2.getNextVertexInPool$0();
      t1.v1_23.get$positionScreen().copy$1($.$$index(t1.vertices_16, 0));
      t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_23.get$positionScreen());
      step = $.$$eq(t1.object_11.get$type(), 1) === true ? 2 : 1;
      t1.vl_2 = $.length(t1.vertices_16);
      for (t1.v_1 = 1; $.$$lt(t1.v_1, t1.vl_2) === true; t1.v_1 = $.$$add(t1.v_1, 1)) {
        t1.v1_23 = t2.getNextVertexInPool$0();
        t1.v1_23.get$positionScreen().copy$1($.$$index(t1.vertices_16, t1.v_1));
        t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_23.get$positionScreen());
        if ($.$$gt($.$$mod($.$$add(t1.v_1, 1), step), 0) === true)
          continue;
        t1.v2_24 = $.$$index(t2.get$_vertexPool(), $.$$sub(t2.get$_vertexCount(), 2));
        t2.get$_clippedVertex1PositionScreen().copy$1(t1.v1_23.get$positionScreen());
        t2.get$_clippedVertex2PositionScreen().copy$1(t1.v2_24.get$positionScreen());
        if (t2.clipLine$2(t2.get$_clippedVertex1PositionScreen(), t2.get$_clippedVertex2PositionScreen()) === true) {
          t3 = t2.get$_clippedVertex1PositionScreen();
          t4 = t3.get$w();
          if (typeof t4 !== "number")
            throw $.iae(t4);
          t3.multiplyScalar$1(1 / t4);
          t3 = t2.get$_clippedVertex2PositionScreen();
          t5 = t3.get$w();
          if (typeof t5 !== "number")
            throw $.iae(t5);
          t3.multiplyScalar$1(1 / t5);
          t2.set$_line(t2.getNextLineInPool$0());
          t2.get$_line().get$v1().get$positionScreen().copy$1(t2.get$_clippedVertex1PositionScreen());
          t2.get$_line().get$v2().get$positionScreen().copy$1(t2.get$_clippedVertex2PositionScreen());
          t3 = $.max(t2.get$_clippedVertex1PositionScreen().get$z(), t2.get$_clippedVertex2PositionScreen().get$z());
          t2.get$_line().set$z(t3);
          t3 = t1.object_11.get$material();
          t2.get$_line().set$material(t3);
          $.add(t2.get$_renderData().get$elements(), t2.get$_line());
        }
      }
    }
  },
  call$1$bailout1: function(state0, t3, t1, t2) {
    switch (state0) {
      case 0:
        object = o.get$object();
        t1 = this.box_0;
        t1.object_11 = object;
        t1.modelMatrix_12 = t1.object_11.get$matrixWorld();
        t2 = this.this_1;
        t2.set$_vertexCount(0);
        t3 = t1.object_11;
      case 1:
        var object, t4, step, t5;
        if (state0 === 1 || state0 === 0 && typeof t3 === "object" && t3 !== null && !!t3.$isMesh)
          switch (state0) {
            case 0:
              t1.geometry_14 = t3.get$geometry();
              t1.geometryMaterials_15 = t1.object_11.get$geometry().get$materials();
              t1.vertices_16 = t1.geometry_14.get$vertices();
              t1.faces_18 = t1.geometry_14.get$faces();
              t1.faceVertexUvs_22 = t1.geometry_14.get$faceVertexUvs();
              t1.rotationMatrix_13 = t1.object_11.get$matrixRotationWorld().extractRotation$1(t1.modelMatrix_12);
              t4 = t1.object_11.get$material();
              t1.isFaceMaterial_27 = typeof t4 === "object" && t4 !== null && !!t4.$isMeshFaceMaterial;
              t1.side_29 = t1.object_11.get$material().get$side();
              $.forEach(t1.vertices_16, new $.Projector_projectScene__anon(t1, t2, this.near_2, this.far_3));
              t1.fl_4 = $.length(t1.faces_18);
              t1.f_3 = 0;
            case 1:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      if (!($.$$lt(t1.f_3, t1.fl_4) === true))
                        break L0;
                    case 1:
                      c$0: {
                        switch (state0) {
                          case 0:
                            t1.face_19 = $.$$index(t1.faces_18, t1.f_3);
                            t1.material_28 = $.$$eq(t1.isFaceMaterial_27, true) === true ? $.$$index(t1.geometryMaterials_15, t1.face_19.get$materialIndex()) : t1.object_11.get$material();
                            t3 = t1.material_28;
                            if (t3 == null)
                              break c$0;
                            t1.side_29 = t3.get$side();
                            t3 = t1.face_19;
                            if (typeof t3 === "object" && t3 !== null && !!t3.$isFace3) {
                              t1.v1_23 = $.$$index(t2.get$_vertexPool(), t3.get$a());
                              t1.v2_24 = $.$$index(t2.get$_vertexPool(), t1.face_19.get$b());
                              t1.v3_25 = $.$$index(t2.get$_vertexPool(), t1.face_19.get$c());
                              t3 = t1.v1_23;
                              if (t3.get$visible() === true && t1.v2_24.get$visible() === true && t1.v3_25.get$visible() === true) {
                                t1.visible_0 = $.$$lt($.$$sub($.$$mul($.$$sub(t1.v3_25.get$positionScreen().get$x(), t3.get$positionScreen().get$x()), $.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v3_25.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y()), $.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v1_23.get$positionScreen().get$x()))), 0);
                                if ($.$$eq(t1.side_29, 2) === true || $.$$eq(t1.visible_0, $.$$eq(t1.side_29, 0)) === true) {
                                  t1._face_20 = t2.getNextFace3InPool$0();
                                  t1._face_20.get$v1().copy$1(t1.v1_23);
                                  t1._face_20.get$v2().copy$1(t1.v2_24);
                                  t1._face_20.get$v3().copy$1(t1.v3_25);
                                } else
                                  break c$0;
                              } else
                                break c$0;
                            } else if (typeof t3 === "object" && t3 !== null && !!t3.$isFace4) {
                              t1.v1_23 = $.$$index(t2.get$_vertexPool(), t3.get$a());
                              t1.v2_24 = $.$$index(t2.get$_vertexPool(), t3.get$b());
                              t1.v3_25 = $.$$index(t2.get$_vertexPool(), t3.get$c());
                              t1.v4_26 = $.$$index(t2.get$_vertexPool(), t3.get$d());
                              t3 = t1.v1_23;
                              if (t3.get$visible() === true && t1.v2_24.get$visible() === true && t1.v3_25.get$visible() === true && t1.v4_26.get$visible() === true) {
                                t1.visible_0 = $.$$lt($.$$sub($.$$mul($.$$sub(t1.v4_26.get$positionScreen().get$x(), t3.get$positionScreen().get$x()), $.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v4_26.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y()), $.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v1_23.get$positionScreen().get$x()))), 0) === true || $.$$lt($.$$sub($.$$mul($.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v3_25.get$positionScreen().get$x()), $.$$sub(t1.v4_26.get$positionScreen().get$y(), t1.v3_25.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v3_25.get$positionScreen().get$y()), $.$$sub(t1.v4_26.get$positionScreen().get$x(), t1.v3_25.get$positionScreen().get$x()))), 0) === true;
                                if ($.$$eq(t1.side_29, 2) === true || $.$$eq(t1.visible_0, $.$$eq(t1.side_29, 0)) === true) {
                                  t1._face_20 = t2.getNextFace4InPool$0();
                                  t1._face_20.get$v1().copy$1(t1.v1_23);
                                  t1._face_20.get$v2().copy$1(t1.v2_24);
                                  t1._face_20.get$v3().copy$1(t1.v3_25);
                                  $.propertyTypeCast(t1._face_20, "$isIRenderableFace4").get$v4().copy$1(t1.v4_26);
                                } else
                                  break c$0;
                              } else
                                break c$0;
                            }
                            t1._face_20.get$normalWorld().copy$1(t1.face_19.get$normal());
                            if ($.$$eq(t1.visible_0, false) === true)
                              t3 = $.$$eq(t1.side_29, 1) === true || $.$$eq(t1.side_29, 2) === true;
                            else
                              t3 = false;
                            if (t3)
                              t1._face_20.get$normalWorld().negate$0();
                            t1.rotationMatrix_13.multiplyVector3$1(t1._face_20.get$normalWorld());
                            t1._face_20.get$centroidWorld().copy$1(t1.face_19.get$centroid());
                            t1.modelMatrix_12.multiplyVector3$1(t1._face_20.get$centroidWorld());
                            t3 = t1._face_20;
                            t3.get$centroidScreen().copy$1(t3.get$centroidWorld());
                            t2.get$_viewProjectionMatrix().multiplyVector3$1(t1._face_20.get$centroidScreen());
                            t1.faceVertexNormals_21 = t1.face_19.get$vertexNormals();
                            t1.nl_6 = $.length(t1.faceVertexNormals_21);
                            for (t1.n_5 = 0; $.$$lt(t1.n_5, t1.nl_6) === true; t1.n_5 = $.$$add(t1.n_5, 1)) {
                              t1.normal_17 = $.$$index(t1._face_20.get$vertexNormalsWorld(), t1.n_5);
                              t1.normal_17.copy$1($.$$index(t1.faceVertexNormals_21, t1.n_5));
                              if (t1.visible_0 !== true)
                                t3 = $.$$eq(t1.side_29, 1) === true || $.$$eq(t1.side_29, 2) === true;
                              else
                                t3 = false;
                              if (t3)
                                t1.normal_17.negate$0();
                              t1.rotationMatrix_13.multiplyVector3$1(t1.normal_17);
                            }
                            t1.cl_8 = $.length(t1.faceVertexUvs_22);
                            t1.c_7 = 0;
                          case 1:
                            L1:
                              while (true)
                                switch (state0) {
                                  case 0:
                                    if (!($.$$lt(t1.c_7, t1.cl_8) === true))
                                      break L1;
                                  case 1:
                                    c$1: {
                                      switch (state0) {
                                        case 0:
                                          t3 = $.$$index($.$$index(t1.faceVertexUvs_22, t1.c_7), t1.f_3);
                                        case 1:
                                          state0 = 0;
                                          t4 = $.getInterceptor(t3);
                                          if (t3 == null)
                                            break c$1;
                                          t1.ul_10 = t4.get$length(t3);
                                          for (t1.u_9 = 0; $.$$lt(t1.u_9, t1.ul_10) === true; t1.u_9 = $.$$add(t1.u_9, 1))
                                            $.add($.$$index(t1._face_20.get$uvs(), t1.c_7), t4.$index(t3, t1.u_9));
                                      }
                                    }
                                    t1.c_7 = $.$$add(t1.c_7, 1);
                                }
                            t3 = t1.material_28;
                            t1._face_20.set$material(t3);
                            t3 = t1.face_19.get$materialIndex();
                            t3 = !(t3 == null) ? $.$$index(t1.geometryMaterials_15, t3) : null;
                            t1._face_20.set$faceMaterial(t3);
                            t3 = t1._face_20;
                            t3.set$z(t3.get$centroidScreen().get$z());
                            $.add(t2.get$_renderData().get$elements(), t1._face_20);
                        }
                      }
                      t1.f_3 = $.$$add(t1.f_3, 1);
                  }
          }
        else if (typeof t3 === "object" && t3 !== null && !!t3.$isLine) {
          t2.get$_modelViewProjectionMatrix().multiply$2(t2.get$_viewProjectionMatrix(), t1.modelMatrix_12);
          t1.vertices_16 = t1.object_11.get$geometry().get$vertices();
          t1.v1_23 = t2.getNextVertexInPool$0();
          t1.v1_23.get$positionScreen().copy$1($.$$index(t1.vertices_16, 0));
          t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_23.get$positionScreen());
          step = $.$$eq(t1.object_11.get$type(), 1) === true ? 2 : 1;
          t1.vl_2 = $.length(t1.vertices_16);
          for (t1.v_1 = 1; $.$$lt(t1.v_1, t1.vl_2) === true; t1.v_1 = $.$$add(t1.v_1, 1)) {
            t1.v1_23 = t2.getNextVertexInPool$0();
            t1.v1_23.get$positionScreen().copy$1($.$$index(t1.vertices_16, t1.v_1));
            t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_23.get$positionScreen());
            if ($.$$gt($.$$mod($.$$add(t1.v_1, 1), step), 0) === true)
              continue;
            t1.v2_24 = $.$$index(t2.get$_vertexPool(), $.$$sub(t2.get$_vertexCount(), 2));
            t2.get$_clippedVertex1PositionScreen().copy$1(t1.v1_23.get$positionScreen());
            t2.get$_clippedVertex2PositionScreen().copy$1(t1.v2_24.get$positionScreen());
            if (t2.clipLine$2(t2.get$_clippedVertex1PositionScreen(), t2.get$_clippedVertex2PositionScreen()) === true) {
              t3 = t2.get$_clippedVertex1PositionScreen();
              t4 = t3.get$w();
              if (typeof t4 !== "number")
                throw $.iae(t4);
              t3.multiplyScalar$1(1 / t4);
              t3 = t2.get$_clippedVertex2PositionScreen();
              t5 = t3.get$w();
              if (typeof t5 !== "number")
                throw $.iae(t5);
              t3.multiplyScalar$1(1 / t5);
              t2.set$_line(t2.getNextLineInPool$0());
              t2.get$_line().get$v1().get$positionScreen().copy$1(t2.get$_clippedVertex1PositionScreen());
              t2.get$_line().get$v2().get$positionScreen().copy$1(t2.get$_clippedVertex2PositionScreen());
              t3 = $.max(t2.get$_clippedVertex1PositionScreen().get$z(), t2.get$_clippedVertex2PositionScreen().get$z());
              t2.get$_line().set$z(t3);
              t3 = t1.object_11.get$material();
              t2.get$_line().set$material(t3);
              $.add(t2.get$_renderData().get$elements(), t2.get$_line());
            }
          }
        }
    }
  }
};

$$.Projector_projectScene__anon = {"": "Closure;box_0,this_4,near_5,far_6",
  call$1: function(v) {
    var t1, t2, t3;
    t1 = this.this_4;
    t1.set$_vertex(t1.getNextVertexInPool$0());
    t1.get$_vertex().get$positionWorld().copy$1(v);
    this.box_0.modelMatrix_12.multiplyVector3$1(t1.get$_vertex().get$positionWorld());
    t2 = t1.get$_vertex();
    t2.get$positionScreen().copy$1(t2.get$positionWorld());
    t1.get$_viewProjectionMatrix().multiplyVector4$1(t1.get$_vertex().get$positionScreen());
    t3 = t1.get$_vertex().get$positionScreen();
    t3.set$x($.$$div(t3.get$x(), t3.get$w()));
    t3 = t1.get$_vertex().get$positionScreen();
    t3.set$y($.$$div(t3.get$y(), t3.get$w()));
    t2 = $.$$gt(t1.get$_vertex().get$positionScreen().get$z(), this.near_5) === true && $.$$lt(t1.get$_vertex().get$positionScreen().get$z(), this.far_6) === true;
    t1.get$_vertex().set$visible(t2);
  }
};

$$.Projector_projectScene_anon0 = {"": "Closure;box_0,this_7,camera_8",
  call$1: function(o) {
    var object, t1, t2, t3, t4, t5, t6, t7, t8;
    object = o.get$object();
    t1 = this.box_0;
    t1.object_11 = object;
    t1.modelMatrix_12 = t1.object_11.get$matrixWorld();
    t2 = t1.object_11;
    if (typeof t2 === "object" && t2 !== null && !!t2.$isParticle) {
      t2 = this.this_7;
      t2.get$_vector4().setValues$4($.$$index(t1.modelMatrix_12.get$elements(), 12), $.$$index(t1.modelMatrix_12.get$elements(), 13), $.$$index(t1.modelMatrix_12.get$elements(), 14), 1);
      t2.get$_viewProjectionMatrix().multiplyVector4$1(t2.get$_vector4());
      t3 = t2.get$_vector4();
      t3.set$z($.$$div(t3.get$z(), t3.get$w()));
      if ($.$$gt(t2.get$_vector4().get$z(), 0) === true && $.$$lt(t2.get$_vector4().get$z(), 1) === true) {
        t2.set$_particle(t2.getNextParticleInPool$0());
        t3 = t2.get$_vector4();
        t4 = $.$$div(t3.get$x(), t3.get$w());
        t2.get$_particle().set$x(t4);
        t4 = t2.get$_vector4();
        t5 = $.$$div(t4.get$y(), t4.get$w());
        t2.get$_particle().set$y(t5);
        t5 = t2.get$_vector4().get$z();
        t2.get$_particle().set$z(t5);
        t5 = t1.object_11.get$rotation().get$z();
        t2.get$_particle().set$rotation(t5);
        t5 = t1.object_11.get$scale().get$x();
        t6 = t2.get$_particle().get$x();
        t7 = t2.get$_vector4().get$x();
        t8 = this.camera_8;
        t5 = $.$$mul(t5, $.abs($.$$sub(t6, $.$$div($.$$add(t7, $.$$index(t8.get$projectionMatrix().get$elements(), 0)), $.$$add(t2.get$_vector4().get$w(), $.$$index(t8.get$projectionMatrix().get$elements(), 12))))));
        t2.get$_particle().get$scale().set$x(t5);
        t5 = $.$$mul(t1.object_11.get$scale().get$y(), $.abs($.$$sub(t2.get$_particle().get$y(), $.$$div($.$$add(t2.get$_vector4().get$y(), $.$$index(t8.get$projectionMatrix().get$elements(), 5)), $.$$add(t2.get$_vector4().get$w(), $.$$index(t8.get$projectionMatrix().get$elements(), 13))))));
        t2.get$_particle().get$scale().set$y(t5);
        t5 = $.propertyTypeCast(t1.object_11.get$material(), "$isMaterial");
        t2.get$_particle().set$material(t5);
        $.add(t2.get$_renderData().get$elements(), t2.get$_particle());
      }
    }
  }
};

$$.Collection_clear_anon = {"": "Closure;",
  call$1: function(e) {
    return true;
  }
};

$$.FilteredElementList_removeRange_anon = {"": "Closure;",
  call$1: function(el) {
    return el.remove$0();
  }
};

$$.HashSet_forEach_anon = {"": "Closure;f_0",
  call$2: function(key, value) {
    this.f_0.call$1(key);
  }
};

$$.Object3D_updateMatrixWorld_anon = {"": "Closure;box_0",
  call$1: function(c) {
    return c.updateMatrixWorld$1$force(this.box_0.force_0);
  }
};

$$.Vector3_setEulerFromRotationMatrix_anon = {"": "Closure;",
  call$1: function(x) {
    return $.min($.max(x, -1), 1);
  }
};

$$.BoundClosure = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$$.BoundClosure0 = {"": "Closure;self,target,receiver",
  call$1: function(p0) {
    return this.self[this.target](this.receiver, p0);
  }
};
$$.BoundClosure1 = {"": "Closure;self,target,receiver",
  call$2: function(p0, p1) {
    return this.self[this.target](this.receiver, p0, p1);
  },
  call$1: function($receiver, other) {
    return this.call$2($receiver, other, 0);
  }
};
$$.BoundClosure2 = {"": "Closure;self,target",
  call$2: function(p0, p1) {
    return this.self[this.target](p0, p1);
  }
};
$$.BoundClosure3 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};
$.Strings__toJsStringArray = function(strings) {
  var length, i, string;
  $.checkNull(strings);
  if (!strings.constructor === Array)
    strings = $.List_List$from(strings);
  length = strings.length;
  for (i = 0; i < length; ++i) {
    string = strings[i];
    if (!(typeof string === "string"))
      throw $.$$throw($.ArgumentError$(string));
  }
  return strings;
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var t1;
  if (typeof value === "string")
    return value;
  if (typeof value === "number" && !(value === 0) || typeof value === "boolean")
    return String(value);
  if (value == null)
    return "null";
  t1 = $.toString(value);
  if (!(typeof t1 === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return t1;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$$add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_objectTypeName = function(object) {
  var name, decompiled, t1;
  name = $.constructorNameFallback(object);
  if ($.$$eq(name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      name = decompiled;
  }
  t1 = $.getInterceptor$JSString(name);
  return t1.charCodeAt$1(name, 0) === 36 ? t1.substring$1(name, 1) : name;
};

$.Primitives_newFixedList = function(length) {
  var result = new Array(length);
  result.fixed$length = true;
  return result;
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString(this);
};

$.unwrapException = function(ex) {
  var message, type, name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, name, [], $.makeLiteralMap([]), null);
    else if ($.$$eq(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if ($.CONSTANT4.endsWith$1(message, "is null") === true || $.CONSTANT4.endsWith$1(message, "is undefined") === true || $.CONSTANT4.endsWith$1(message, "is null or undefined") === true || $.CONSTANT4.endsWith$1(message, "of undefined") === true || $.CONSTANT4.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(t1 ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, t1, key;
  iterator = $.CONSTANT2.get$iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (t1 = $.getInterceptor$JSArray(result); iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    t1.$indexSet(result, key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return new $.invokeClosure_anon(closure).call$0();
  else if (t1.$eq(numberOfArguments, 1) === true)
    return new $.invokeClosure_anon0(closure, arg1).call$0();
  else if (t1.$eq(numberOfArguments, 2) === true)
    return new $.invokeClosure_anon1(closure, arg1, arg2).call$0();
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $;
  $function = function($0, $1) { return $.invokeClosure.call$5(closure, $, arity, $0, $1); };
  closure.$identity = $function;
  return $function;
};

$.propertyTypeCastError = function(value, property) {
  var t1 = $.getInterceptor$JSStringJSArray(property);
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var name = tag;
  if (name === "Window")
    return "DOMWindow";
  if (name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name === "WebKitMutationObserver")
    return "MutationObserver";
  if (name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name === "AudioGainNode")
    return "GainNode";
  if (name === "AudioPannerNode")
    return "PannerNode";
  if (name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name === "Oscillator")
    return "OscillatorNode";
  if (name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name;
};

$.typeNameInOpera = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "ApplicationCache")
    return "DOMApplicationCache";
  return name;
};

$.typeNameInFirefox = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name === "DataTransfer")
    return "Clipboard";
  if (name === "DragEvent")
    return "MouseEvent";
  if (name === "GeoGeolocation")
    return "Geolocation";
  if (name === "MouseScrollEvent")
    return "WheelEvent";
  if (name === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name === "WorkerMessageEvent")
    return "MessageEvent";
  if (name === "XMLDocument")
    return "Document";
  return name;
};

$.typeNameInIE = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name === "ApplicationCache")
    return "DOMApplicationCache";
  if (name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name === "DataTransfer")
    return "Clipboard";
  if (name === "DragEvent")
    return "MouseEvent";
  if (name === "HTMLDDElement")
    return "HTMLElement";
  if (name === "HTMLDTElement")
    return "HTMLElement";
  if (name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name === "HTMLPhraseElement")
    return "HTMLElement";
  if (name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name === "MouseWheelEvent")
    return "WheelEvent";
  if (name === "Position")
    return "Geoposition";
  if (name === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return name;
};

$.constructorNameFallback = function(object) {
  var $constructor, name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof($constructor) === "function") {
    name = $constructor.name;
    if (typeof name === "string")
      t1 = !(name === "") && !(name === "Object") && !(name === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function($function, object, property) {
  return $function.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name, methods, arguments) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT7));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name + " is not a function");} else {return Object.prototype[name].apply(this, arguments);}};
  if ($.callHasOwnProperty(hasOwnPropertyFunction, proto, name) !== true)
    $.defineProperty(proto, name, method);
  return method.apply(obj, arguments);
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT7)[name];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined")
    $._dynamicMetadata([]);
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern, sb, e, isMultiLine, isCaseSensitive, t1, exception;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (isMultiLine === true)
    $.add(sb, "m");
  if (isCaseSensitive !== true)
    $.add(sb, "i");
  if (global === true)
    $.add(sb, "g");
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$isMultiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$isCaseSensitive(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length, patternLength, startIndex, position, t2, endIndex;
  result = $.List_List(0);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    t2 = $.getInterceptor(position);
    if (t2.$eq(position, -1) === true)
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = t2.$add(position, patternLength);
    if ($.$$eq(endIndex, length) === true)
      break;
    else
      startIndex = t2.$eq(position, endIndex) === true ? $.$$add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === "string")
    return $.$$eq($.CONSTANT4.indexOf$2(receiver, other, startIndex), -1) !== true;
  else if (typeof other === "object" && other !== null && !!other.$isJSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT4.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.CONSTANT4.substring$1(receiver, startIndex))).moveNext$0();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length, t1, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), true, false), true), to);
};

$.JsStringBuffer$ = function(content) {
  var t1 = typeof content === "string" ? content : $.S(content);
  return new $.JsStringBuffer(t1);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.$isJavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.CONSTANT2.$indexSet(dst, j, src[i]);
    }
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.CONSTANT2.$indexSet(dst, j, src[i]);
    }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.IterableMixinWorkaround_contains = function(iterable, element) {
  var t1, t2;
  for (t1 = $.iterator(iterable), t2 = $.getInterceptor(element); t1.moveNext$0() === true;)
    if (t2.$eq(element, t1.get$current()) === true)
      return true;
  return false;
};

$.IterableMixinWorkaround_reduce = function(iterable, initialValue, combine) {
  var t1;
  for (t1 = $.iterator(iterable); t1.moveNext$0() === true;)
    initialValue = combine.call$2(initialValue, t1.get$current());
  return initialValue;
};

$.IterableMixinWorkaround_removeAll = function(collection, elementsToRemove) {
  var t1, t2;
  for (t1 = $.CONSTANT2.get$iterator(elementsToRemove), t2 = $.getInterceptor$JSArray(collection); t1.moveNext$0() === true;)
    t2.remove$1(collection, t1.get$current());
};

$.IterableMixinWorkaround_removeAllList = function(collection, elementsToRemove) {
  $.removeMatching(collection, $.contains0(typeof elementsToRemove === "object" && elementsToRemove !== null && !!elementsToRemove.$isSet ? elementsToRemove : $.toSet(elementsToRemove)));
};

$.IterableMixinWorkaround_removeMatching = function(collection, test) {
  var elementsToRemove, t1, t2, t3;
  elementsToRemove = [];
  for (t1 = $.getInterceptor$JSArray(collection), t2 = t1.get$iterator(collection); t2.moveNext$0() === true;) {
    t3 = t2.get$current();
    if (test.call$1(t3) === true)
      elementsToRemove.push(t3);
  }
  t1.removeAll$1(collection, elementsToRemove);
};

$.IterableMixinWorkaround_removeMatchingList = function(list, test) {
  var retained, length, i, element, t1, t2, t3;
  if (typeof list !== "object" || list === null || (list.constructor !== Array || !!list.immutable$list) && !list.$isJavaScriptIndexingBehavior())
    return $.IterableMixinWorkaround_removeMatchingList$bailout(1, list, test);
  retained = [];
  length = list.length;
  for (i = 0; i < length; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    element = list[i];
    if (test.call$1(element) !== true)
      retained.push(element);
    if (length !== list.length)
      throw $.$$throw($.ConcurrentModificationError$(list));
  }
  t1 = retained.length;
  if (t1 === length)
    return;
  for (t2 = list.length, i = 0; i < t1; ++i) {
    t3 = retained[i];
    if (i >= t2)
      throw $.ioore(i);
    list[i] = t3;
  }
  $.CONSTANT2.set$length(list, t1);
};

$.IterableMixinWorkaround_removeMatchingList$bailout = function(state0, list, test) {
  var retained, length, i, element, t1;
  retained = [];
  length = list.length;
  for (i = 0; i < length; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    element = list[i];
    if (test.call$1(element) !== true)
      retained.push(element);
    if (length !== list.length)
      throw $.$$throw($.ConcurrentModificationError$(list));
  }
  if (retained.length === length)
    return;
  for (i = 0; t1 = retained.length, i < t1; ++i)
    $.CONSTANT2.$indexSet(list, i, retained[i]);
  $.CONSTANT2.set$length(list, t1);
};

$.IterableMixinWorkaround_sortList = function(l, compare) {
  if (compare == null)
    compare = $.Comparable_compare;
  $._Sort__doSort(l, 0, l.length - 1, compare);
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(0));
  return $.toString(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.$isList());
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, t2);
  for (t2 = $.iterator(c), first = true; t2.moveNext$0() === true; first = false) {
    t4 = t2.get$current();
    if (!first)
      t3.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t3.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.$isCollection()))
    if ($.Collections__containsRef(visiting, o) === true)
      $.add(result, typeof o === "object" && o !== null && (o.constructor === Array || o.$isList()) ? "[...]" : "{...}");
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && o.$isMap())
    if ($.Collections__containsRef(visiting, o) === true)
      $.add(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.CONSTANT0.$tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length) {
  return $.$$and($.$$add(currentProbe, numberOfProbes), $.$$sub(length, 1));
};

$._HashMapImplIndexIterator$ = function(map) {
  return new $._HashMapImplIndexIterator(map, -1, null);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(0));
  return $.toString(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.forEach(m, new $.Maps__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(sentinel) {
  return new $._DoubleLinkedQueueIterator(sentinel, sentinel, null);
};

$.HashSet$ = function() {
  return new $.HashSet($._HashMapImpl$());
};

$.HashSet_HashSet$from = function(other) {
  var set, t1;
  set = $.HashSet$();
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    set.add$1(t1.get$current());
  return set;
};

$._HashSetIterator$ = function(set) {
  return new $._HashSetIterator($.CONSTANT2.get$iterator(set._backingMap._keys));
};

$._Sort__doSort = function(a, left, right, compare) {
  if (right - left <= 32)
    $._Sort_insertionSort_(a, left, right, compare);
  else
    $._Sort__dualPivotQuicksort(a, left, right, compare);
};

$._Sort_insertionSort_ = function(a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  if (typeof a !== "object" || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.$isJavaScriptIndexingBehavior())
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.$$gt(compare.call$2(a[t1], el), 0) === true;
        t1 = t2;
      } else
        t1 = false;
      t2 = a.length;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= t2)
        throw $.ioore(j0);
      t1 = a[j0];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      a[j] = t1;
      j = j0;
    }
    if (j < 0 || j >= t2)
      throw $.ioore(j);
    a[j] = el;
  }
};

$._Sort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.$$gt(compare.call$2(a[t1], el), 0) === true;
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= a.length)
        throw $.ioore(j0);
      $.CONSTANT2.$indexSet(a, j, a[j0]);
      j = j0;
    }
    $.CONSTANT2.$indexSet(a, j, el);
  }
};

$._Sort__dualPivotQuicksort = function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, t2, less, great, k, ak, comp, t3, great0, less0, t4;
  if (typeof a !== "object" || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.$isJavaScriptIndexingBehavior())
    return $._Sort__dualPivotQuicksort$bailout(1, a, left, right, compare);
  sixth = $.CONSTANT0.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.CONSTANT0.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.$$gt(compare.call$2(el1, el2), 0) === true) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el3), 0) === true) {
    t0 = el1;
    el1 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el2;
    el2 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el4), 0) === true) {
    t0 = el1;
    el1 = el4;
    el4 = t0;
  }
  if ($.$$gt(compare.call$2(el3, el4), 0) === true) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el5), 0) === true) {
    t0 = el2;
    el2 = el5;
    el5 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el2;
    el2 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  less = left + 1;
  great = right - 1;
  t1 = $.$$eq(compare.call$2(el2, el4), 0) === true;
  if (t1)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      t2 = $.getInterceptor(comp);
      if (t2.$eq(comp, 0) === true)
        continue;
      if (t2.$lt(comp, 0) === true) {
        if (k !== less) {
          t2 = a.length;
          if (less >= t2)
            throw $.ioore(less);
          t3 = a[less];
          if (k >= t2)
            throw $.ioore(k);
          a[k] = t3;
          a[less] = ak;
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          t2 = $.getInterceptor$JSNumber(comp);
          if (t2.$gt(comp, 0) === true) {
            --great;
            continue;
          } else {
            t2 = t2.$lt(comp, 0);
            t3 = a.length;
            great0 = great - 1;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              t2 = a[less];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              less0 = less + 1;
              if (great >= t3)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              t2 = a[great];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$lt(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          t2 = a.length;
          if (less >= t2)
            throw $.ioore(less);
          t3 = a[less];
          if (k >= t2)
            throw $.ioore(k);
          a[k] = t3;
          a[less] = ak;
        }
        ++less;
      } else if ($.$$gt(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$gt(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t2 = $.$$lt(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t3 = a.length;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              t2 = a[less];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              less0 = less + 1;
              if (great >= t3)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              t2 = a[great];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
  t2 = less - 1;
  t3 = a.length;
  if (t2 >= t3)
    throw $.ioore(t2);
  t4 = a[t2];
  if (left >= t3)
    throw $.ioore(left);
  a[left] = t4;
  a[t2] = el2;
  t2 = great + 1;
  if (t2 < 0 || t2 >= t3)
    throw $.ioore(t2);
  t4 = a[t2];
  if (right >= t3)
    throw $.ioore(right);
  a[right] = t4;
  a[t2] = el4;
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (t1)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!($.$$eq(compare.call$2(a[less], el2), 0) === true))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!($.$$eq(compare.call$2(a[great], el4), 0) === true))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$eq(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          t1 = a.length;
          if (less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.$$eq(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$eq(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.$$lt(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1 === true) {
              if (less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$._Sort__dualPivotQuicksort$bailout = function(state0, a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, t2, t3, great0, less0;
  sixth = $.CONSTANT0.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.CONSTANT0.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.$$gt(compare.call$2(el1, el2), 0) === true) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el3), 0) === true) {
    t0 = el1;
    el1 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el2;
    el2 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el4), 0) === true) {
    t0 = el1;
    el1 = el4;
    el4 = t0;
  }
  if ($.$$gt(compare.call$2(el3, el4), 0) === true) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el5), 0) === true) {
    t0 = el2;
    el2 = el5;
    el5 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el2;
    el2 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  $.CONSTANT2.$indexSet(a, index1, el1);
  $.CONSTANT2.$indexSet(a, index3, el3);
  $.CONSTANT2.$indexSet(a, index5, el5);
  if (left < 0 || left >= a.length)
    throw $.ioore(left);
  $.CONSTANT2.$indexSet(a, index2, a[left]);
  if (right < 0 || right >= a.length)
    throw $.ioore(right);
  $.CONSTANT2.$indexSet(a, index4, a[right]);
  less = left + 1;
  great = right - 1;
  t1 = $.$$eq(compare.call$2(el2, el4), 0) === true;
  if (t1)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      t2 = $.getInterceptor(comp);
      if (t2.$eq(comp, 0) === true)
        continue;
      if (t2.$lt(comp, 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT2.$indexSet(a, k, a[less]);
          $.CONSTANT2.$indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          t2 = $.getInterceptor$JSNumber(comp);
          if (t2.$gt(comp, 0) === true) {
            --great;
            continue;
          } else {
            t2 = t2.$lt(comp, 0);
            t3 = a.length;
            great0 = great - 1;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              $.CONSTANT2.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT2.$indexSet(a, less, a[great]);
              $.CONSTANT2.$indexSet(a, great, ak);
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              $.CONSTANT2.$indexSet(a, k, a[great]);
              $.CONSTANT2.$indexSet(a, great, ak);
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$lt(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT2.$indexSet(a, k, a[less]);
          $.CONSTANT2.$indexSet(a, less, ak);
        }
        ++less;
      } else if ($.$$gt(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$gt(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t2 = $.$$lt(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t3 = a.length;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              $.CONSTANT2.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT2.$indexSet(a, less, a[great]);
              $.CONSTANT2.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              $.CONSTANT2.$indexSet(a, k, a[great]);
              $.CONSTANT2.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
  t2 = less - 1;
  if (t2 >= a.length)
    throw $.ioore(t2);
  $.CONSTANT2.$indexSet(a, left, a[t2]);
  $.CONSTANT2.$indexSet(a, t2, el2);
  t2 = great + 1;
  if (t2 < 0 || t2 >= a.length)
    throw $.ioore(t2);
  $.CONSTANT2.$indexSet(a, right, a[t2]);
  $.CONSTANT2.$indexSet(a, t2, el4);
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (t1)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!($.$$eq(compare.call$2(a[less], el2), 0) === true))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!($.$$eq(compare.call$2(a[great], el4), 0) === true))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$eq(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT2.$indexSet(a, k, a[less]);
          $.CONSTANT2.$indexSet(a, less, ak);
        }
        ++less;
      } else if ($.$$eq(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$eq(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.$$lt(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1 === true) {
              if (less >= t2)
                throw $.ioore(less);
              $.CONSTANT2.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT2.$indexSet(a, less, a[great]);
              $.CONSTANT2.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              $.CONSTANT2.$indexSet(a, k, a[great]);
              $.CONSTANT2.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$.WhereIterable$ = function(_iterable, _f) {
  return new $.WhereIterable(_iterable, _f);
};

$.WhereIterator$ = function(_iterator, _f) {
  return new $.WhereIterator(_iterator, _f);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(list, list.length, -1, null);
};

$.Comparable_compare = function(a, b) {
  return $.compareTo(a, b);
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString(object);
  if (typeof object === "string")
    return "\"" + $.S($.replaceAll($.replaceAll($.replaceAll($.CONSTANT4.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"")) + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.List_List = function(length) {
  if (!(typeof length === "number" && Math.floor(length) === length) || length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length) + "."));
  return new Array(length);
};

$.List_List$fixedLength = function(length, fill) {
  var result, t1, i;
  if (!(typeof length === "number" && Math.floor(length) === length) || length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length) + "."));
  result = $.Primitives_newFixedList(length);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.$isJavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, length, fill, result);
  if ($.$$eq(length, 0) !== true && !(fill == null))
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, length, fill, result) {
  var t1, i;
  if ($.$$eq(length, 0) !== true && !(fill == null))
    for (t1 = $.getInterceptor$JSStringJSArray(result), i = 0; $.CONSTANT0.$lt(i, t1.get$length(result)); ++i)
      t1.$indexSet(result, i, fill);
  return result;
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(0);
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.print = function(object) {
  $.Primitives_printString(object);
};

$.Set_Set = function() {
  return $.HashSet$();
};

$.Set_Set$from = function(other) {
  return $.HashSet_HashSet$from(other);
};

$.StringBuffer_StringBuffer = function(content) {
  return $.JsStringBuffer$(content);
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.Strings__toJsStringArray(strings).join(separator);
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, -1, null);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.Float32Array_Float32Array = function(length) {
  return new Float32Array(length);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.MediaStreamEvents$ = function(_ptr) {
  return new $.MediaStreamEvents(_ptr);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.TextTrackEvents$ = function(_ptr) {
  return new $.TextTrackEvents(_ptr);
};

$.TextTrackCueEvents$ = function(_ptr) {
  return new $.TextTrackCueEvents(_ptr);
};

$.TextTrackListEvents$ = function(_ptr) {
  return new $.TextTrackListEvents(_ptr);
};

$.WindowEvents$ = function(_ptr) {
  return new $.WindowEvents(_ptr);
};

$._FrameSetElementEvents$ = function(_ptr) {
  return new $._FrameSetElementEvents(_ptr);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains($._Device_userAgent(), "Opera", 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains($._Device_userAgent(), "MSIE", 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains($._Device_userAgent(), "Firefox", 0);
};

$._Device_isWebKit = function() {
  return $._Device_isOpera() !== true && $.contains($._Device_userAgent(), "WebKit", 0) === true;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._TypedImageData$ = function(data, height, width) {
  return new $._TypedImageData(data, height, width);
};

$._convertNativeToDart_ImageData = function(nativeImageData) {
  0;
  if (typeof nativeImageData === "object" && nativeImageData !== null && nativeImageData.$isImageData())
    return nativeImageData;
  return $._TypedImageData$(nativeImageData.data, nativeImageData.height, nativeImageData.width);
};

$._convertDartToNative_ImageData = function(imageData) {
  if (typeof imageData === "object" && imageData !== null && !!imageData.$is_TypedImageData)
    return {data: imageData.data, height: imageData.height, width: imageData.width};
  return imageData;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = window;
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.length(array), -1, null);
};

$.convertNativeToDart_SerializedScriptValue = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, t2, i;
  t1 = $.getInterceptor$JSStringJSArray(a);
  t2 = $.getInterceptor$JSNumber(startIndex);
  if (t2.$ge(startIndex, t1.get$length(a)) === true)
    return -1;
  if (t2.$lt(startIndex, 0) === true)
    startIndex = 0;
  for (i = startIndex; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, endIndex) === true; i = t2.$add(i, 1))
    if ($.$$eq(t1.$index(a, i), element) === true)
      return i;
  return -1;
};

$.Lists_getRange = function(a, start, length, accumulator) {
  var end, i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, length, accumulator);
  if (typeof start !== "number")
    return $.Lists_getRange$bailout(1, a, start, length, accumulator);
  if ($.$$lt(length, 0) === true)
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length !== "number")
    throw $.iae(length);
  end = start + length;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.Lists_getRange$bailout = function(state0, a, start, length, accumulator) {
  var t1, end, i, t2;
  if ($.$$lt(length, 0) === true)
    throw $.$$throw($.ArgumentError$("length"));
  t1 = $.getInterceptor$JSNumber(start);
  if (t1.$lt(start, 0) === true)
    throw $.$$throw($.RangeError$value(start));
  end = t1.$add(start, length);
  t1 = $.getInterceptor$JSStringJSArray(a);
  if ($.$$gt(end, t1.get$length(a)) === true)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, end) === true; i = t2.$add(i, 1))
    accumulator.push(t1.$index(a, i));
  return accumulator;
};

$.min = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.CONSTANT6.get$isNegative(b) === true || $.CONSTANT6.get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return a + b;
        if ($.CONSTANT6.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.CONSTANT1.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.Random_Random = function(seed) {
  return $.CONSTANT5;
};

$.ElementInstanceEvents$ = function(_ptr) {
  return new $.ElementInstanceEvents(_ptr);
};

$.Canvas_Interactive_Cubes$ = function() {
  return new $.Canvas_Interactive_Cubes(null, null, null, null, null, null, null, 600, 0);
};

$.main = function() {
  $.Canvas_Interactive_Cubes$().run$0();
};

$.CubeGeometry$ = function(width, height, depth, segmentsWidth, segmentsHeight, segmentsDepth, materialOrList, sides) {
  var t1 = $.GeometryCount;
  $.GeometryCount = $.$$add(t1, 1);
  t1 = new $.CubeGeometry(null, segmentsWidth, segmentsHeight, segmentsDepth, t1, "", [], [], [], [], [[]], [[]], [], [], [], [], [], null, null, null, false, false, null, null, null);
  t1.CubeGeometry$8(width, height, depth, segmentsWidth, segmentsHeight, segmentsDepth, materialOrList, sides);
  return t1;
};

$.CubeGeomSides$ = function(nx, ny, nz, px, py, pz) {
  return new $.CubeGeomSides(px, nx, py, ny, pz, nz);
};

$.PerspectiveCamera$ = function(fov, aspect, near, far) {
  var t1, t2, t3, t4;
  t1 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t2 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t3 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t4 = $.Object3DCount;
  $.Object3DCount = $.$$add(t4, 1);
  t4 = new $.PerspectiveCamera(fov, aspect, null, null, null, null, null, null, t1, t2, t3, near, far, t4, "", $.makeLiteralMap([]), null, [], $.Vector3$(0, 1, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(1, 1, 1), "XYZ", null, null, null, true, null, $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true, true, $.Quaternion$(0, 0, 0, 1), false, 0, 1, true, false, false, true, $.Vector3$(0, 0, 0), null);
  t4.PerspectiveCamera$4(fov, aspect, near, far);
  return t4;
};

$.Color$ = function(hex) {
  var t1 = new $.Color(1, 1, 1);
  t1.Color$1(hex);
  return t1;
};

$.Face4$ = function(a, b, c, d, normalOrVertexNormals, colorOrVertexColors, materialIndex) {
  var t1 = new $.Face4(a, b, c, d, null, null, null, null, null, materialIndex, null);
  t1.Face4$7(a, b, c, d, normalOrVertexNormals, colorOrVertexColors, materialIndex);
  return t1;
};

$.Frustum$ = function() {
  return new $.Frustum([$.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1)]);
};

$.BoundingSphere$ = function(radius) {
  return new $.BoundingSphere(radius);
};

$.Matrix4$ = function(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
  var t1 = new $.Matrix4($.Float32Array_Float32Array(16));
  t1.Matrix4$16(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44);
  return t1;
};

$.Projector$ = function() {
  var t1, t2, t3, t4, t5, t6;
  t1 = $.ProjectorRenderData$();
  t2 = $.Vector3$(0, 0, 0);
  t3 = $.Vector4$(0, 0, 0, 1);
  t4 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t5 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t6 = $.Frustum$();
  return new $.Projector([], [], [], [], [], [], null, null, null, null, null, null, null, null, null, null, t2, t3, $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), t1, t4, t5, t6);
};

$.ProjectorRenderData$ = function() {
  return new $.ProjectorRenderData([], [], [], []);
};

$.Quaternion$ = function(x, y, z, w) {
  return new $.Quaternion(x, y, z, w);
};

$.Ray$ = function(origin, direction, near, far) {
  var t1 = new $.Ray(origin, direction, near, far, $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), 0.0001);
  t1.Ray$4(origin, direction, near, far);
  return t1;
};

$.Intersect$ = function(distance, face, object, point) {
  return new $.Intersect(distance, point, face, object);
};

$.Rectangle$ = function() {
  return new $.Rectangle(0, 0, 0, 0, 0, 0, true);
};

$.UV$ = function(u, v) {
  return new $.UV(u, v);
};

$.Vector2$ = function(x, y) {
  return new $.Vector2(x, y);
};

$.Vector3$ = function(x, y, z) {
  return new $.Vector3(x, y, z);
};

$.Vector4$ = function(x, y, z, w) {
  return new $.Vector4(x, y, z, w);
};

$.MeshBasicMaterial$ = function(alphaTest, blendDst, blendEquation, blendSrc, blending, color, combine, depthTest, depthWrite, envMap, fog, lightMap, map, morphTargets, name, opacity, overdraw, polygonOffset, polygonOffsetFactor, polygonOffsetUnits, reflectivity, refractionRatio, shading, side, skinning, specularMap, transparent, vertexColors, visible, wireframe, wireframeLinecap, wireframeLinejoin, wireframeLinewidth) {
  var t1, t2;
  t1 = $.Color$(color);
  t2 = $.MaterialCount;
  $.MaterialCount = $.$$add(t2, 1);
  return new $.MeshBasicMaterial(t1, map, lightMap, specularMap, envMap, combine, reflectivity, refractionRatio, shading, wireframe, wireframeLinewidth, wireframeLinecap, wireframeLinejoin, skinning, morphTargets, vertexColors, fog, name, t2, side, opacity, blending, blendSrc, blendDst, blendEquation, alphaTest, polygonOffset, polygonOffsetFactor, polygonOffsetUnits, transparent, depthTest, depthWrite, overdraw, visible, true, null);
};

$.ParticleCanvasMaterial$ = function(alphaTest, blendDst, blendEquation, blendSrc, blending, color, depthTest, depthWrite, name, opacity, overdraw, polygonOffset, polygonOffsetFactor, polygonOffsetUnits, program, side, transparent, visible) {
  var t1, t2;
  t1 = $.Color$(color);
  t2 = $.MaterialCount;
  $.MaterialCount = $.$$add(t2, 1);
  t2 = new $.ParticleCanvasMaterial(t1, program, name, t2, side, opacity, blending, blendSrc, blendDst, blendEquation, alphaTest, polygonOffset, polygonOffsetFactor, polygonOffsetUnits, transparent, depthTest, depthWrite, overdraw, visible, true, null);
  t2.ParticleCanvasMaterial$18$alphaTest$blendDst$blendEquation$blendSrc$blending$color$depthTest$depthWrite$name$opacity$overdraw$polygonOffset$polygonOffsetFactor$polygonOffsetUnits$program$side$transparent$visible(alphaTest, blendDst, blendEquation, blendSrc, blending, color, depthTest, depthWrite, name, opacity, overdraw, polygonOffset, polygonOffsetFactor, polygonOffsetUnits, program, side, transparent, visible);
  return t2;
};

$.Mesh$ = function(geometry, material) {
  var t1 = $.Object3DCount;
  $.Object3DCount = $.$$add(t1, 1);
  t1 = new $.Mesh(geometry, material, 0, null, null, null, t1, "", $.makeLiteralMap([]), null, [], $.Vector3$(0, 1, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(1, 1, 1), "XYZ", null, null, null, true, null, $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true, true, $.Quaternion$(0, 0, 0, 1), false, 0, 1, true, false, false, true, $.Vector3$(0, 0, 0), null);
  t1.Mesh$2(geometry, material);
  return t1;
};

$.Particle$ = function(material) {
  var t1 = $.Object3DCount;
  $.Object3DCount = $.$$add(t1, 1);
  return new $.Particle(material, t1, "", $.makeLiteralMap([]), null, [], $.Vector3$(0, 1, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(1, 1, 1), "XYZ", null, null, null, true, null, $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true, true, $.Quaternion$(0, 0, 0, 1), false, 0, 1, true, false, false, true, $.Vector3$(0, 0, 0), null);
};

$.CanvasRenderer$ = function(parameters) {
  var t1 = new $.CanvasRenderer(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 6.283185307179586, null, null, null, null, null, null, null, null, null);
  t1.CanvasRenderer$1(parameters);
  return t1;
};

$.CanvasRenderData$ = function() {
  var t1 = new $.CanvasRenderData(null);
  t1.CanvasRenderData$0();
  return t1;
};

$.RenderInts$ = function() {
  var t1 = new $.RenderInts(null, null);
  t1.RenderInts$0();
  return t1;
};

$.RenderableFace3$ = function() {
  return new $.RenderableFace3($.RenderableVertex$(), $.RenderableVertex$(), $.RenderableVertex$(), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), [$.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0)], [[]], null, null, null);
};

$.RenderableFace4$ = function() {
  return new $.RenderableFace4($.RenderableVertex$(), $.RenderableVertex$(), $.RenderableVertex$(), $.RenderableVertex$(), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), [$.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0)], [[]], null, null, null);
};

$.RenderableLine$ = function() {
  return new $.RenderableLine(null, $.RenderableVertex$(), $.RenderableVertex$(), null);
};

$.RenderableObject$ = function() {
  return new $.RenderableObject(null, null);
};

$.RenderableParticle$ = function() {
  return new $.RenderableParticle(null, null, null, null, $.Vector2$(0, 0), null);
};

$.RenderableVertex$ = function() {
  return new $.RenderableVertex($.Vector3$(0, 0, 0), $.Vector4$(0, 0, 0, 1), true);
};

$.Scene$ = function() {
  var t1 = $.Object3DCount;
  $.Object3DCount = $.$$add(t1, 1);
  t1 = new $.Scene(null, null, null, null, null, null, t1, "", $.makeLiteralMap([]), null, [], $.Vector3$(0, 1, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(1, 1, 1), "XYZ", null, null, null, true, null, $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true, true, $.Quaternion$(0, 0, 0, 1), false, 0, 1, true, false, false, true, $.Vector3$(0, 0, 0), null);
  t1.Scene$0();
  return t1;
};

$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.Comparable_compare.call$2 = $.Comparable_compare;
$.Comparable_compare.$name = "Comparable_compare";
Isolate.$finishClasses($$);
$$ = {};
$.Gamepad = {builtin$cls: 'Gamepad'};
$.TextTrack = {builtin$cls: 'TextTrack'};
$.Map = {builtin$cls: 'Map'};
$.TextTrackCue = {builtin$cls: 'TextTrackCue'};
$.num = {builtin$cls: 'num'};
$.ElementInstance = {builtin$cls: 'ElementInstance'};
$.PathSeg = {builtin$cls: 'PathSeg'};
$.Match = {builtin$cls: 'Match'};
$.MediaStream = {builtin$cls: 'MediaStream'};
$.Touch = {builtin$cls: 'Touch'};
$.DomMimeType = {builtin$cls: 'DomMimeType'};
$.String = {builtin$cls: 'String'};
$.DomPlugin = {builtin$cls: 'DomPlugin'};
$.ClientRect = {builtin$cls: 'ClientRect'};
$.SourceBuffer = {builtin$cls: 'SourceBuffer'};
$.Element = {builtin$cls: 'Element'};
$.SpeechGrammar = {builtin$cls: 'SpeechGrammar'};
$.Node = {builtin$cls: 'Node'};
$.Entry = {builtin$cls: 'Entry'};
$.EntrySync = {builtin$cls: 'EntrySync'};
$.SpeechInputResult = {builtin$cls: 'SpeechInputResult'};
$.SpeechRecognitionResult = {builtin$cls: 'SpeechRecognitionResult'};
$.File = {builtin$cls: 'File'};
$.CssRule = {builtin$cls: 'CssRule'};
$.CssValue = {builtin$cls: 'CssValue'};
$.StyleSheet = {builtin$cls: 'StyleSheet'};
$.Transform = {builtin$cls: 'Transform'};
$.Length = {builtin$cls: 'Length'};
$.$int = {builtin$cls: '$int'};
$.Number = {builtin$cls: 'Number'};
$.CONSTANT2 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT1 = new Isolate.$isolateProperties.JSNumber();
$.CONSTANT = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT0 = new Isolate.$isolateProperties.JSInt();
$.CONSTANT4 = new Isolate.$isolateProperties.JSString();
$.CONSTANT3 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT6 = new Isolate.$isolateProperties.JSDouble();
$.CONSTANT5 = new Isolate.$isolateProperties._Random();
$.CONSTANT7 = new Isolate.$isolateProperties.Object();
$.Primitives_hashCodeSeed = 0;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._getTypeNameOf = null;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT3;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$._Sort__INSERTION_SORT_THRESHOLD = 32;
$.double_INFINITY = (1/0);
$._cachedBrowserPrefix = null;
$.PI = 3.141592653589793;
$.Frustum____v1 = null;
$.Matrix4____v1 = null;
$.Matrix4____v2 = null;
$.Matrix4____v3 = null;
$.LinePieces = 1;
$.GeometryCount = 0;
$.Object3DCount = 0;
$.MaterialCount = 0;
$.FrontSide = 0;
$.BackSide = 1;
$.DoubleSide = 2;
$.SmoothShading = 2;
$.NoColors = 0;
$.NormalBlending = 1;
$.AdditiveBlending = 2;
$.SubtractiveBlending = 3;
$.AddEquation = 100;
$.SrcAlphaFactor = 204;
$.OneMinusSrcAlphaFactor = 205;
$.MultiplyOperation = 0;
$.RepeatWrapping = 0;
$.toString = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.$$add = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$add(receiver, a0);
};
$.$$mul = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$mul(receiver, a0);
};
$.toInt = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).toInt$0(receiver);
};
$.$$div = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$div(receiver, a0);
};
$.$$indexSet = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).$indexSet(receiver, a0, a1);
};
$.iterator = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$iterator(receiver);
};
$.$$shr = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$shr(receiver, a0);
};
$.replaceAll = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).replaceAll$2(receiver, a0, a1);
};
$.$$tdiv = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$tdiv(receiver, a0);
};
$.length = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$length(receiver);
};
$.$$sub = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$sub(receiver, a0);
};
$.contains = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).contains$2(receiver, a0, a1);
};
$.length0 = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).length$0(receiver);
};
$.$$ge = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$ge(receiver, a0);
};
$.indexOf = function(receiver, a0, a1) {
  return $.getInterceptor$JSStringJSArray(receiver).indexOf$2(receiver, a0, a1);
};
$.$$negate = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).$negate(receiver);
};
$.add = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).add$1(receiver, a0);
};
$.getRange = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).getRange$2(receiver, a0, a1);
};
$.$$not = function(receiver) {
  return $.getInterceptor$JSInt(receiver).$not(receiver);
};
$.addAll = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addAll$1(receiver, a0);
};
$.hashCode = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.$$le = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$le(receiver, a0);
};
$.removeRange = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).removeRange$2(receiver, a0, a1);
};
$.contains0 = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$contains(receiver);
};
$.compareTo = function(receiver, a0) {
  return $.getInterceptor$JSStringJSNumber(receiver).compareTo$1(receiver, a0);
};
$.$$gt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$gt(receiver, a0);
};
$.last = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$last(receiver);
};
$.forEach = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).forEach$1(receiver, a0);
};
$.allMatches = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).allMatches$1(receiver, a0);
};
$.round = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).round$0(receiver);
};
$.toStringAsFixed = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).toStringAsFixed$1(receiver, a0);
};
$.contains1 = function(receiver, a0) {
  return $.getInterceptor$JSStringJSArray(receiver).contains$1(receiver, a0);
};
$.toSet = function(receiver) {
  return $.getInterceptor$JSArray(receiver).toSet$0(receiver);
};
$.$$lt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$lt(receiver, a0);
};
$.$$and = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$and(receiver, a0);
};
$.clear = function(receiver) {
  return $.getInterceptor$JSArray(receiver).clear$0(receiver);
};
$.addLast = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addLast$1(receiver, a0);
};
$.$$mod = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$mod(receiver, a0);
};
$.removeMatching = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeMatching$1(receiver, a0);
};
$.abs = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).abs$0(receiver);
};
$.length1 = function(receiver, value) {
  return $.getInterceptor$JSArray(receiver).set$length(receiver, value);
};
$.remove = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).remove$1(receiver, a0);
};
$.indexOf0 = function(receiver, a0) {
  return $.getInterceptor$JSStringJSArray(receiver).indexOf$1(receiver, a0);
};
$.floor = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).floor$0(receiver);
};
$.$$eq = function(receiver, a0) {
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.isEmpty = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$isEmpty(receiver);
};
$.where = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).where$1(receiver, a0);
};
$.sort = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).sort$1(receiver, a0);
};
$.$$index = function(receiver, a0) {
  return $.getInterceptor$JSStringJSArray(receiver).$index(receiver, a0);
};
$.getInterceptor$JSInt = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSNumber.prototype;
  }
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSStringJSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, "quoteRegExp", "quoteRegExp", "get$quoteRegExp", function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", true, false);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  $isJavaScriptIndexingBehavior: function() {
    return false;
  },
  $isCollection: function() {
    return false;
  },
  $isList: function() {
    return false;
  },
  $isMap: function() {
    return false;
  },
  $isElement: function() {
    return false;
  },
  $isImageData: function() {
    return false;
  },
  $isNode: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  },
  $eq: function(a) {
    return this === a;
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "name>,type>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Blob", {"": "type>"});

$.$defineNativeClass("HTMLBodyElement", {
  get$on: function() {
    return $.BodyElementEvents$(this);
  }
});

$.$defineNativeClass("HTMLButtonElement", {"": "name>,type>,value="});

$.$defineNativeClass("HTMLCanvasElement", {"": "height=,width=",
  getContext$1: function(contextId) {
    return this.getContext(contextId);
  }
});

$.$defineNativeClass("CanvasRenderingContext2D", {"": "fillStyle<,globalAlpha<,globalCompositeOperation<,lineCap<,lineJoin<,lineWidth<,strokeStyle<,textAlign<",
  arc$6: function(x, y, radius, startAngle, endAngle, anticlockwise) {
    return this.arc(x,y,radius,startAngle,endAngle,anticlockwise);
  },
  beginPath$0: function() {
    return this.beginPath();
  },
  clearRect$4: function(x, y, width, height) {
    return this.clearRect(x,y,width,height);
  },
  clip$0: function() {
    return this.clip();
  },
  closePath$0: function() {
    return this.closePath();
  },
  createPattern$2: function(canvas_OR_image, repetitionType) {
    return this.createPattern(canvas_OR_image,repetitionType);
  },
  drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
    return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
  },
  drawImage$3: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y) {
    return this.drawImage(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y);
  },
  fill$0: function() {
    return this.fill();
  },
  fillRect$4: function(x, y, width, height) {
    return this.fillRect(x,y,width,height);
  },
  getImageData$4: function(sx, sy, sw, sh) {
    return $._convertNativeToDart_ImageData(this._getImageData_1$4(sx, sy, sw, sh));
  },
  _getImageData_1$4: function(sx, sy, sw, sh) {
    return this.getImageData(sx,sy,sw,sh);
  },
  lineTo$2: function(x, y) {
    return this.lineTo(x,y);
  },
  moveTo$2: function(x, y) {
    return this.moveTo(x,y);
  },
  putImageData$7: function(imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
    var t1, t2, t3, t4;
    t1 = $ === dirtyX;
    if (t1)
      dirtyX = null;
    t2 = $ === dirtyY;
    if (t2)
      dirtyY = null;
    t3 = $ === dirtyWidth;
    if (t3)
      dirtyWidth = null;
    t4 = $ === dirtyHeight;
    if (t4)
      dirtyHeight = null;
    if (t1 && t2 && t3 && t4) {
      this._putImageData_1$3($._convertDartToNative_ImageData(imagedata), dx, dy);
      return;
    }
    this._putImageData_2$7($._convertDartToNative_ImageData(imagedata), dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight);
    return;
  },
  putImageData$3: function(imagedata, dx, dy) {
    return this.putImageData$7(imagedata, dx, dy, $, $, $, $);
  },
  _putImageData_1$3: function(imagedata, dx, dy) {
    return this.putImageData(imagedata,dx,dy);
  },
  _putImageData_2$7: function(imagedata, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {
    return this.putImageData(imagedata,dx,dy,dirtyX,dirtyY,dirtyWidth,dirtyHeight);
  },
  restore$0: function() {
    return this.restore();
  },
  rotate$1: function(angle) {
    return this.rotate(angle);
  },
  save$0: function() {
    return this.save();
  },
  scale$2: function(sx, sy) {
    return this.scale(sx,sy);
  },
  get$scale: function() {
    return new $.BoundClosure2(this, "scale$2");
  },
  setTransform$6: function(m11, m12, m21, m22, dx, dy) {
    return this.setTransform(m11,m12,m21,m22,dx,dy);
  },
  stroke$0: function() {
    return this.stroke();
  },
  strokeRect$5: function(x, y, width, height, lineWidth) {
    return this.strokeRect(x,y,width,height,lineWidth);
  },
  strokeRect$4: function(x, y, width, height) {
    return this.strokeRect(x, y, width, height);
  },
  transform$6: function(m11, m12, m21, m22, dx, dy) {
    return this.transform(m11,m12,m21,m22,dx,dy);
  },
  translate$2: function(tx, ty) {
    return this.translate(tx,ty);
  }
});

$.$defineNativeClass("CharacterData", {"": "data>,length>",
  length$0: function() {
    return this.length.call$0();
  },
  remove$0: function() {
    return this.remove();
  }
});

$.$defineNativeClass("ClientRect", {"": "height>,width>"});

$.$defineNativeClass("CompositionEvent", {"": "data>"});

$.$defineNativeClass("CSSFontFaceRule", {"": "style>"});

$.$defineNativeClass("WebKitCSSKeyframeRule", {"": "style>"});

$.$defineNativeClass("WebKitCSSKeyframesRule", {"": "name>"});

$.$defineNativeClass("CSSPageRule", {"": "style>"});

$.$defineNativeClass("CSSRule", {"": "type>"});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  },
  _getPropertyValue$1: function(propertyName) {
    return this.getPropertyValue(propertyName);
  },
  getPropertyValue$1: function(propertyName) {
    var propValue = this._getPropertyValue$1(propertyName);
    return !(propValue == null) ? propValue : "";
  },
  setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    if (!!this.setAttribute)
      this.setAttribute(propertyName, value);
  },
  get$clear: function() {
    return this.getPropertyValue$1("clear");
  },
  clear$0: function() {
    return this.get$clear().call$0();
  },
  get$clip: function() {
    return this.getPropertyValue$1("clip");
  },
  clip$0: function() {
    return this.get$clip().call$0();
  },
  get$color: function() {
    return this.getPropertyValue$1("color");
  },
  get$height: function() {
    return this.getPropertyValue$1("height");
  },
  set$height: function(value) {
    this.setProperty$3("height", value, "");
  },
  get$opacity: function() {
    return this.getPropertyValue$1("opacity");
  },
  get$position: function() {
    return this.getPropertyValue$1("position");
  },
  set$position: function(value) {
    this.setProperty$3("position", value, "");
  },
  set$textAlign: function(value) {
    this.setProperty$3("text-align", value, "");
  },
  set$top: function(value) {
    this.setProperty$3("top", value, "");
  },
  get$transform: function() {
    return this.getPropertyValue$1($.S($._browserPrefix()) + "transform");
  },
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  },
  get$width: function() {
    return this.getPropertyValue$1("width");
  },
  set$width: function(value) {
    this.setProperty$3("width", value, "");
  }
});

$.$defineNativeClass("CSSStyleRule", {"": "style>"});

$.$defineNativeClass("Document", {"": "$$dom_body:body~",
  get$on: function() {
    return $.DocumentEvents$(this);
  }
});

$.$defineNativeClass("DocumentFragment", {
  get$elements: function() {
    return this.get$children();
  },
  set$elements: function(value) {
    this.set$children(value);
  },
  get$children: function() {
    if (this._children == null)
      this._children = $.FilteredElementList$(this);
    return this._children;
  },
  set$children: function(value) {
    var copy, children, t1;
    copy = $.List_List$from(value);
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, copy);
  },
  set$innerHtml: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$innerHtml")) {
      var e, nodes;
      $.clear(this.get$nodes());
      e = $.Element_Element$tag("div");
      e.set$innerHtml(value);
      nodes = $.List_List$from(e.get$nodes());
      $.addAll(this.get$nodes(), nodes);
    } else
      return Object.prototype.set$innerHtml.call(this, value);
  },
  get$on: function() {
    return $.ElementEvents$(this);
  }
});

$.$defineNativeClass("DOMError", {"": "name>"});

$.$defineNativeClass("DOMException", {
  get$name: function() {
    var errorName = this.name;
    if ($._Device_isWebKit() === true && errorName === "SECURITY_ERR")
      return "SecurityError";
    if ($._Device_isWebKit() === true && errorName === "SYNTAX_ERR")
      return "SyntaxError";
    return errorName;
  },
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("MimeType", {"": "type>"});

$.$defineNativeClass("MimeTypeArray", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Plugin", {"": "length>,name>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("PluginArray", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("DOMStringList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  contains$1: function(string) {
    return this.contains(string);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Element", {"": "$$dom_children:children~,id>,innerHtml:innerHTML|,$$dom_lastElementChild:lastElementChild~,style>",
  set$innerHTML: function(value) {
    this.set$innerHtml(value);
  },
  set$elements: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$elements")) {
      this.set$children(value);
    } else
      return Object.prototype.set$elements.call(this, value);
  },
  get$elements: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$elements")) {
      return this.get$children();
    } else
      return Object.prototype.get$elements.call(this);
  },
  get$children: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$children")) {
      return $._ChildrenElementList$_wrap(this);
    } else
      return Object.prototype.get$children.call(this);
  },
  set$children: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$children")) {
      var copy, children, t1;
      copy = $.List_List$from(value);
      children = this.get$children();
      t1 = $.getInterceptor$JSArray(children);
      t1.clear$0(children);
      t1.addAll$1(children, copy);
    } else
      return Object.prototype.set$children.call(this, value);
  },
  get$on: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$on")) {
      return $.ElementEvents$(this);
    } else
      return Object.prototype.get$on.call(this);
  },
  translate$2: function(arg0, arg1) {
    return this.translate.call$2(arg0, arg1);
  },
  $isElement: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "height=,name>,type>,width="});

$.$defineNativeClass("Entry", {"": "name>",
  moveTo$4: function(parent, name, successCallback, errorCallback) {
    return this.moveTo(parent,name,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
  },
  moveTo$2: function(parent, name) {
    return this.moveTo(parent, name);
  },
  remove$2: function(successCallback, errorCallback) {
    return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
  },
  remove$1: function(successCallback) {
    successCallback = $.convertDartClosureToJS(successCallback, 0);
    return this.remove(successCallback);
  }
});

$.$defineNativeClass("EntrySync", {"": "name>",
  moveTo$2: function(parent, name) {
    return this.moveTo(parent,name);
  },
  remove$0: function() {
    return this.remove();
  }
});

$.$defineNativeClass("Event", {"": "type>",
  preventDefault$0: function() {
    return this.preventDefault();
  }
});

$.$defineNativeClass("EventException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  get$on: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$on")) {
      return $.Events$(this);
    } else
      return Object.prototype.get$on.call(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "elements>,name>,type>"});

$.$defineNativeClass("File", {"": "name>"});

$.$defineNativeClass("FileException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("FileList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Float32Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Float64Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>,name>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("Gamepad", {"": "id>"});

$.$defineNativeClass("HTMLAllCollection", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLDocument", {
  get$body: function() {
    return $.document().get$$$dom_body();
  }
});

$.$defineNativeClass("XMLHttpRequestException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("XMLHttpRequestProgressEvent", {"": "position>"});

$.$defineNativeClass("HTMLIFrameElement", {"": "height=,name>,width="});

$.$defineNativeClass("ImageData", {"": "data>,height>,width>",
  $isImageData: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLImageElement", {"": "height=,width=,x>,y>"});

$.$defineNativeClass("HTMLInputElement", {"": "height=,name>,pattern>,type>,value=,width=",
  get$on: function() {
    return $.InputElementEvents$(this);
  },
  $isElement: function() {
    return true;
  },
  $isNode: function() {
    return true;
  }
});

$.$defineNativeClass("Int16Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Int32Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Int8Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "name>,type>"});

$.$defineNativeClass("HTMLLIElement", {"": "type>,value="});

$.$defineNativeClass("HTMLLinkElement", {"": "type>"});

$.$defineNativeClass("HTMLMapElement", {"": "name>"});

$.$defineNativeClass("HTMLMediaElement", {
  get$on: function() {
    return $.MediaElementEvents$(this);
  }
});

$.$defineNativeClass("MediaStream", {"": "id>",
  get$on: function() {
    return $.MediaStreamEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("MessageEvent", {
  get$data: function() {
    return $.convertNativeToDart_SerializedScriptValue(this.data);
  }
});

$.$defineNativeClass("HTMLMetaElement", {"": "name>"});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("MouseEvent", {"": "clientX>,clientY>,x>,y>"});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Navigator", {"": "userAgent>"});

$.$defineNativeClass("Node", {"": "$$dom_childNodes:childNodes~,parent:parentElement~,text:textContent|",
  get$nodes: function() {
    return $._ChildNodeListLazy$(this);
  },
  remove$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$0")) {
      var t1 = this.parentNode;
      if (!(t1 == null))
        t1.$$dom_removeChild$1(this);
    } else
      return Object.prototype.remove$0.call(this);
  },
  replaceWith$1: function(otherNode) {
    var parent, exception;
    try {
      parent = this.parentNode;
      parent.$$dom_replaceChild$2(otherNode, this);
    } catch (exception) {
      $.unwrapException(exception);
    }

    return this;
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_appendChild$1: function(newChild) {
    return this.appendChild(newChild);
  },
  contains$1: function(other) {
    return this.contains(other);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  $$dom_removeChild$1: function(oldChild) {
    return this.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_replaceChild$2: function(newChild, oldChild) {
    return this.replaceChild(newChild,oldChild);
  },
  $isNode: function() {
    return true;
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLOListElement", {"": "type>"});

$.$defineNativeClass("HTMLObjectElement", {"": "data>,height=,name>,type>,width="});

$.$defineNativeClass("HTMLOptionElement", {"": "value="});

$.$defineNativeClass("HTMLOutputElement", {"": "name>,type>,value="});

$.$defineNativeClass("HTMLParamElement", {"": "name>,value="});

$.$defineNativeClass("ProcessingInstruction", {"": "data>"});

$.$defineNativeClass("HTMLProgressElement", {"": "position>,value="});

$.$defineNativeClass("RadioNodeList", {"": "value="});

$.$defineNativeClass("RangeException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLScriptElement", {"": "type>"});

$.$defineNativeClass("HTMLSelectElement", {"": "length=,name>,type>,value=",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("ShadowRoot", {"": "innerHtml:innerHTML|"});

$.$defineNativeClass("SourceBufferList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLSourceElement", {"": "type>"});

$.$defineNativeClass("SpeechGrammarList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SpeechRecognitionResult", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("SQLResultSetRowList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Storage", {
  containsKey$1: function(key) {
    return !(this.$$dom_getItem$1(key) == null);
  },
  $index: function(key) {
    return this.$$dom_getItem$1(key);
  },
  $indexSet: function(key, value) {
    this.$$dom_setItem$2(key, value);
  },
  remove$1: function(key) {
    var value = this.$index(key);
    this.$$dom_removeItem$1(key);
    return value;
  },
  clear$0: function() {
    return this.$$dom_clear$0();
  },
  forEach$1: function(f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = this.$$dom_key$1(i);
      if (key == null)
        return;
      f.call$2(key, this.$index(key));
    }
  },
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return this.$$dom_key$1(0) == null;
  },
  $$dom_clear$0: function() {
    return this.clear();
  },
  $$dom_getItem$1: function(key) {
    return this.getItem(key);
  },
  $$dom_key$1: function(index) {
    return this.key(index);
  },
  $$dom_removeItem$1: function(key) {
    return this.removeItem(key);
  },
  $$dom_setItem$2: function(key, data) {
    return this.setItem(key,data);
  },
  $isMap: function() {
    return true;
  }
});

$.$defineNativeClass("StorageEvent", {"": "key>"});

$.$defineNativeClass("HTMLStyleElement", {"": "type>"});

$.$defineNativeClass("StyleSheet", {"": "type>"});

$.$defineNativeClass("HTMLTextAreaElement", {"": "name>,type>,value="});

$.$defineNativeClass("TextEvent", {"": "data>"});

$.$defineNativeClass("TextTrack", {
  get$on: function() {
    return $.TextTrackEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("TextTrackCue", {"": "id>,position=,text<",
  get$on: function() {
    return $.TextTrackCueEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("TextTrackCueList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
});

$.$defineNativeClass("TextTrackList", {
  get$on: function() {
    return $.TextTrackListEvents$(this);
  },
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Touch", {"": "clientX>,clientY>"});

$.$defineNativeClass("TouchList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint16Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint32Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$index")) {
      return this[index];
    } else
      return Object.prototype.$index.call(this, index);
  },
  $indexSet: function(index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$indexSet")) {
      this[index] = value;
    } else
      return Object.prototype.$indexSet.call(this, index, value);
  },
  get$iterator: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(this);
    } else
      return Object.prototype.get$iterator.call(this);
  },
  reduce$2: function(initialValue, combine) {
    if (Object.getPrototypeOf(this).hasOwnProperty("reduce$2")) {
      return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
    } else
      return Object.prototype.reduce$2.call(this, initialValue, combine);
  },
  contains$1: function(element) {
    if (Object.getPrototypeOf(this).hasOwnProperty("contains$1")) {
      return $.IterableMixinWorkaround_contains(this, element);
    } else
      return Object.prototype.contains$1.call(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = $.iterator(this); t1.moveNext$0() === true;)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, f);
  },
  where$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("where$1")) {
      return $.WhereIterable$(this, f);
    } else
      return Object.prototype.where$1.call(this, f);
  },
  toSet$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toSet$0")) {
      return $.Set_Set$from(this);
    } else
      return Object.prototype.toSet$0.call(this);
  },
  get$isEmpty: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$isEmpty")) {
      return $.$$eq($.length(this), 0);
    } else
      return Object.prototype.get$isEmpty.call(this);
  },
  add$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, value);
  },
  addLast$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addLast$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addLast$1.call(this, value);
  },
  addAll$1: function(iterable) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addAll$1.call(this, iterable);
  },
  set$length: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$length")) {
      throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
    } else
      return Object.prototype.set$length.call(this, value);
  },
  clear$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("clear$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
    } else
      return Object.prototype.clear$0.call(this);
  },
  sort$1: function(compare) {
    if (Object.getPrototypeOf(this).hasOwnProperty("sort$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
    } else
      return Object.prototype.sort$1.call(this, compare);
  },
  indexOf$2: function(element, start) {
    if (Object.getPrototypeOf(this).hasOwnProperty("indexOf$2")) {
      return $.Lists_indexOf(this, element, start, $.length(this));
    } else
      return Object.prototype.indexOf$2.call(this, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$last")) {
      var t1 = $.getInterceptor$JSStringJSArray(this);
      if ($.$$gt(t1.get$length(this), 0) === true)
        return this.$index($.$$sub(t1.get$length(this), 1));
      throw $.$$throw($.StateError$("No elements"));
    } else
      return Object.prototype.get$last.call(this);
  },
  removeLast$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this);
  },
  remove$1: function(object) {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.remove$1.call(this, object);
  },
  removeAll$1: function(elements) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeAll$1.call(this, elements);
  },
  removeMatching$1: function(test) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeMatching$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeMatching$1.call(this, test);
  },
  removeRange$2: function(start, rangeLength) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeRange$2")) {
      throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
    } else
      return Object.prototype.removeRange$2.call(this, start, rangeLength);
  },
  getRange$2: function(start, rangeLength) {
    if (Object.getPrototypeOf(this).hasOwnProperty("getRange$2")) {
      return $.Lists_getRange(this, start, rangeLength, []);
    } else
      return Object.prototype.getRange$2.call(this, start, rangeLength);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height=,width="});

$.$defineNativeClass("DOMWindow", {"": "innerHeight>,innerWidth>,name>,navigator>",
  get$on: function() {
    return $.WindowEvents$(this);
  },
  get$parent: function() {
    return $._convertNativeToDart_Window(this.parent);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  moveTo$2: function(x, y) {
    return this.moveTo(x,y);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  setInterval$2: function(handler, timeout) {
    return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
  }
});

$.$defineNativeClass("XPathException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("ClientRectList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("CSSRuleList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("CSSValueList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
});

$.$defineNativeClass("EntryArray", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("EntryArraySync", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLFrameSetElement", {
  get$on: function() {
    return $._FrameSetElementEvents$(this);
  }
});

$.$defineNativeClass("GamepadList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("MediaStreamList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SpeechInputResultList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SpeechRecognitionResultList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("StyleSheetList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SVGAElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGCircleElement", {"": "r>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGClipPathElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "offset>,type>"});

$.$defineNativeClass("SVGCursorElement", {"": "x>,y>"});

$.$defineNativeClass("SVGDefsElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGElementInstance", {
  get$on: function() {
    return $.ElementInstanceEvents$(this);
  }
});

$.$defineNativeClass("SVGEllipseElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGFEBlendElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "type>,height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFECompositeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "scale>,height>,width>,x>,y>",
  scale$2: function(arg0, arg1) {
    return this.scale.call$2(arg0, arg1);
  }
});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEFloodElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEImageElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMergeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEPointLightElement", {"": "x>,y>,z>"});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFESpotLightElement", {"": "x>,y>,z>"});

$.$defineNativeClass("SVGFETileElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "type>,height>,width>,x>,y>"});

$.$defineNativeClass("SVGFilterElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGGElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGGlyphRefElement", {"": "x=,y="});

$.$defineNativeClass("SVGImageElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGLength", {"": "value="});

$.$defineNativeClass("SVGLengthList", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  get$length: function() {
    return this.numberOfItems;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  clear$0: function() {
    return this.clear();
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SVGLineElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGMaskElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGMatrix", {"": "a>,b>,c>,d>",
  rotate$1: function(angle) {
    return this.rotate(angle);
  },
  scale$1: function(scaleFactor) {
    return this.scale(scaleFactor);
  },
  get$scale: function() {
    return new $.BoundClosure(this, "scale$1");
  },
  translate$2: function(x, y) {
    return this.translate(x,y);
  }
});

$.$defineNativeClass("SVGNumber", {"": "value="});

$.$defineNativeClass("SVGNumberList", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  get$length: function() {
    return this.numberOfItems;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  clear$0: function() {
    return this.clear();
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SVGPathElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGPathSegArcAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegArcRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoCubicAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoCubicRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoCubicSmoothAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoCubicSmoothRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoQuadraticAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoQuadraticRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoQuadraticSmoothAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoQuadraticSmoothRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegLinetoAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegLinetoHorizontalAbs", {"": "x="});

$.$defineNativeClass("SVGPathSegLinetoHorizontalRel", {"": "x="});

$.$defineNativeClass("SVGPathSegLinetoRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegLinetoVerticalAbs", {"": "y="});

$.$defineNativeClass("SVGPathSegLinetoVerticalRel", {"": "y="});

$.$defineNativeClass("SVGPathSegList", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  get$length: function() {
    return this.numberOfItems;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  clear$0: function() {
    return this.clear();
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SVGPathSegMovetoAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegMovetoRel", {"": "x=,y="});

$.$defineNativeClass("SVGPatternElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPolygonElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGPolylineElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGRadialGradientElement", {"": "r>"});

$.$defineNativeClass("SVGRectElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGScriptElement", {"": "type>"});

$.$defineNativeClass("SVGStopElement", {"": "offset>"});

$.$defineNativeClass("SVGStringList", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  get$length: function() {
    return this.numberOfItems;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  clear$0: function() {
    return this.clear();
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SVGStyleElement", {"": "type>"});

$.$defineNativeClass("SVGElement", {
  get$elements: function() {
    return $.FilteredElementList$(this);
  },
  set$elements: function(value) {
    var elements, t1;
    elements = this.get$elements();
    t1 = $.getInterceptor$JSArray(elements);
    t1.clear$0(elements);
    t1.addAll$1(elements, value);
  },
  get$children: function() {
    return $.FilteredElementList$(this);
  },
  set$children: function(value) {
    var children, t1;
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, value);
  },
  set$innerHtml: function(svg) {
    var container = $.Element_Element$tag("div");
    container.set$innerHtml("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
    this.set$children($.$$index(container.get$children(), 0).get$children());
  },
  get$$$dom_children: function() {
    throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
  },
  get$id: function() {
    return this.id;
  }
});

$.$defineNativeClass("SVGException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGSwitchElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGTextElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGTextPositioningElement", {"": "x>,y>",
  rotate$1: function(arg0) {
    return this.rotate.call$1(arg0);
  }
});

$.$defineNativeClass("SVGTransform", {"": "type>"});

$.$defineNativeClass("SVGTransformList", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  get$length: function() {
    return this.numberOfItems;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  clear$0: function() {
    return this.clear();
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
});

$.$defineNativeClass("SVGUseElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGElementInstanceList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  reduce$2: function(initialValue, combine) {
    return $.IterableMixinWorkaround_reduce(this, initialValue, combine);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

// 191 dynamic classes.
// 325 classes
// 28 !leaf
(function() {
  var v0_TextPositioningElement = "SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement", v1_ComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncRElement|SVGFEFuncAElement", v2_MediaElement = "HTMLMediaElement|HTMLVideoElement|HTMLAudioElement", v3_SvgElement = [v0_TextPositioningElement, v1_ComponentTransferFunctionElement, "SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEConvolveMatrixElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEGaussianBlurElement|SVGFEColorMatrixElement|SVGFEImageElement|SVGFEPointLightElement|SVGFEMergeElement|SVGFESpecularLightingElement|SVGFEOffsetElement|SVGFilterElement|SVGFETurbulenceElement|SVGFESpotLightElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceSrcElement|SVGFEMorphologyElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGFETileElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGImageElement|SVGFontFaceNameElement|SVGHKernElement|SVGGlyphRefElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGLineElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGFEMergeNodeElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement"].join("|"), v4_MouseEvent = "MouseEvent|WheelEvent", v5_Element = [v2_MediaElement, v3_SvgElement, "Element|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLAppletElement|HTMLBaseFontElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLMarqueeElement|HTMLAnchorElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFormElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement"].join("|"), v6_DocumentFragment = "DocumentFragment|ShadowRoot", v7_CharacterData = "CharacterData|Text|CDATASection|Comment", v8_Document = "Document|SVGDocument|HTMLDocument", v9_Node = [v5_Element, v6_DocumentFragment, v7_CharacterData, v8_Document, "Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction"].join("|"), v10_MediaStream = "MediaStream|LocalMediaStream";
  $.dynamicSetMetadata([["SVGComponentTransferFunctionElement", v1_ComponentTransferFunctionElement], ["Blob", "Blob|File"], ["CharacterData", v7_CharacterData], ["CSSRule", "CSSRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSFontFaceRule|WebKitCSSKeyframesRule|CSSMediaRule|CSSCharsetRule|WebKitCSSKeyframeRule|CSSImportRule"], ["StyleSheet", "StyleSheet|CSSStyleSheet"], ["Document", v8_Document], ["DocumentFragment", v6_DocumentFragment], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["HTMLMediaElement", v2_MediaElement], ["SVGTextPositioningElement", v0_TextPositioningElement], ["SVGElement", v3_SvgElement], ["Element", v5_Element], ["Entry", "Entry|DirectoryEntry|FileEntry"], ["EntrySync", "EntrySync|FileEntrySync|DirectoryEntrySync"], ["MouseEvent", v4_MouseEvent], ["Event", [v4_MouseEvent, "Event|ProgressEvent|XMLHttpRequestProgressEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|UIEvent|TextEvent|TouchEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|DeviceMotionEvent|BeforeLoadEvent|CloseEvent|DeviceOrientationEvent|CustomEvent|ErrorEvent|HashChangeEvent|AudioProcessingEvent|OfflineAudioCompletionEvent|WebKitAnimationEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OverflowEvent|PageTransitionEvent|PopStateEvent"].join("|")], ["Node", v9_Node], ["MediaStream", v10_MediaStream], ["EventTarget", [v9_Node, v10_MediaStream, "EventTarget|SourceBufferList|TextTrack|TextTrackCue|TextTrackList|DOMWindow|SVGElementInstance"].join("|")], ["CSSValueList", "CSSValueList|WebKitCSSFilterValue|WebKitCSSMixFunctionValue|WebKitCSSTransformValue"], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["NodeList", "NodeList|RadioNodeList"]]);
})();


//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } finally {
          if (result === sentinelUndefined) {
            if ($[fieldName] === sentinelInProgress) {
              $[fieldName] = null;
            }
          }
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=Canvas_Interactive_Cubes.dart.js.map