// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function() {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.StackTrace = {"": "Object;stack",
  toString$0: function() {
    var t1 = this.stack;
    if (typeof t1 !== "string")
      return this.toString$0$bailout0(1, t1);
    return t1;
  },
  toString$0$bailout0: function(state0, t1) {
    return !(t1 == null) ? t1 : "";
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.Dynamic_ = {"": "Object;"};

$$.Null = {"": "Object;"};

$$.CastErrorImplementation = {"": "Object;actualType,expectedType",
  toString$0: function() {
    return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
  }
};

$$.MetaInfo = {"": "Object;_tag>,_tags,_set>"};

$$.JSSyntaxRegExp = {"": "Object;_liblib1$_pattern,_isMultiLine,_isCaseSensitive",
  firstMatch$1: function(str) {
    var m, matchStart, t1;
    m = $.regExpExec(this, $.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.length($.$$index(m, 0));
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchStart + t1, m);
  },
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  allMatches$1: function(str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function() {
    return this._liblib1$_pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  $isJSSyntaxRegExp: true,
  $isRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern>,str,start,end,_groups",
  start$1: function(arg0) {
    return this.start.call$1(arg0);
  },
  $index: function(index) {
    var t1 = this._groups;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout3(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout3: function(state0, index, t1) {
    return $.$$index(t1, index);
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function() {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib1$_current",
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    this._liblib1$_current = this._re.firstMatch$1(this._str);
    return !(this._liblib1$_current == null);
  }
};

$$.StringMatch = {"": "Object;start,str,pattern>",
  $index: function(g) {
    return this.group$1(g);
  },
  group$1: function(group_) {
    if ($.$$eq(group_, 0) !== true)
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  },
  start$1: function(arg0) {
    return this.start.call$1(arg0);
  }
};

$$.JsStringBuffer = {"": "Object;_contents",
  get$length: function() {
    return $.length(this._contents);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(obj) {
    var t1, t2;
    if (typeof obj !== "string")
      return this.add$1$bailout(1, obj);
    t1 = this._contents;
    t2 = obj;
    this._contents = t1 + t2;
  },
  add$1$bailout: function(state0, obj) {
    var t1, t2;
    t1 = this._contents;
    t2 = typeof obj === "string" ? obj : $.S(obj);
    this._contents = t1 + t2;
  },
  addAll$1: function(objects) {
    var t1, t2, t3;
    for (t1 = $.iterator(objects); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t3 = this._contents;
      t2 = typeof t2 === "string" ? t2 : $.S(t2);
      this._contents = t3 + t2;
    }
  },
  clear$0: function() {
    this._contents = "";
  },
  toString$0: function() {
    return this._contents;
  }
};

$$.Collection = {"": "Iterable;",
  addAll$1: function(elements) {
    var t1;
    for (t1 = $.iterator(elements); t1.moveNext$0() === true;)
      this.add$1(t1.get$current());
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  clear$0: function() {
    $.IterableMixinWorkaround_removeMatching(this, new $.Collection_clear_anon());
  },
  $isCollection: function() {
    return true;
  }
};

$$.DateTime = {"": "Object;millisecondsSinceEpoch>,isUtc",
  $eq: function(other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDateTime))
      return false;
    return $.$$eq(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch);
  },
  $lt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$lt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$lt$bailout(2, null, t1, t3);
    return t1 < t3;
  },
  $$lt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$lt(t1, t3);
    }
  },
  $le: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$le$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$le$bailout(2, null, t1, t3);
    return t1 <= t3;
  },
  $$le$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$le(t1, t3);
    }
  },
  $gt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$gt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$gt$bailout(2, null, t1, t3);
    return t1 > t3;
  },
  $$gt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$gt(t1, t3);
    }
  },
  $ge: function(other) {
    return $.$$ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  compareTo$1: function(other) {
    return $.compareTo(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  get$hashCode: function() {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function() {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_fourDigits();
    t2 = new $.DateTime_toString_threeDigits();
    t3 = new $.DateTime_toString_twoDigits();
    y = t1.call$1(this.get$year());
    m = t3.call$1(this.get$month());
    d = t3.call$1(this.get$day());
    h = t3.call$1(this.get$hour());
    min = t3.call$1(this.get$minute());
    sec = t3.call$1(this.get$second());
    ms = t2.call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(duration) {
    var ms, t2;
    ms = this.millisecondsSinceEpoch;
    t2 = duration.get$inMilliseconds();
    if (typeof ms !== "number")
      return this.add$1$bailout0(1, duration, ms);
    if (typeof t2 !== "number")
      return this.add$1$bailout0(2, null, ms, t2);
    return $.DateTime$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
  },
  add$1$bailout0: function(state0, duration, ms, t2) {
    switch (state0) {
      case 0:
        ms = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t2 = duration.get$inMilliseconds();
      case 2:
        state0 = 0;
        return $.DateTime$fromMillisecondsSinceEpoch($.$$add(ms, t2), this.isUtc);
    }
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  DateTime$_now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if ($.$$gt($.abs(millisecondsSinceEpoch), 8640000000000000) === true)
      throw $.$$throw($.ArgumentError$(millisecondsSinceEpoch));
    if (isUtc == null)
      throw $.$$throw($.ArgumentError$(isUtc));
  },
  $isDateTime: true
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (!(t1 == null))
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, i;
    t1 = {};
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout(1, t1, t2);
    for (; $.$$lt(t1.i_1, t2.length) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
      if ($.$$gt(t1.i_1, 0) === true)
        $.add(t1.sb_0, ", ");
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      $.add(t3, $.Error_safeToString(t2[t4]));
    }
    t2 = this._namedArguments;
    if (!(t2 == null))
      $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout(2, t1, t2);
    t3 = $.toString(t1.sb_0);
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0)
        $.add(t1.sb_0, ", ");
      t4 = t1.sb_0;
      if (i >= t2.length)
        throw $.ioore(i);
      $.add(t4, t2[i]);
    }
    t2 = $.toString(t1.sb_0);
    t4 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t4) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t4) + "(" + $.S(t3) + ")\n" + "Found: " + $.S(t4) + "(" + $.S(t2) + ")";
  },
  toString$0$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (!(t2 == null))
          for (t3 = $.getInterceptor$JSStringJSArray(t2); $.$$lt(t1.i_1, t3.get$length(t2)) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
            if ($.$$gt(t1.i_1, 0) === true)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, $.Error_safeToString(t3.$index(t2, t1.i_1)));
          }
        t2 = this._namedArguments;
        if (!(t2 == null))
          $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
        t2 = this._existingArgumentNames;
      case 2:
        var t3, t4, i;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          t3 = $.toString(t1.sb_0);
          t1.sb_0 = $.StringBuffer_StringBuffer("");
          for (t4 = $.getInterceptor$JSStringJSArray(t2), i = 0; $.CONSTANT.$lt(i, t4.get$length(t2)); ++i) {
            if (i > 0)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, t4.$index(t2, i));
          }
          t2 = $.toString(t1.sb_0);
          t4 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t4) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t4) + "(" + $.S(t3) + ")\n" + "Found: " + $.S(t4) + "(" + $.S(t2) + ")";
        }
    }
  }
};

$$.UnsupportedError = {"": "Object;message>",
  toString$0: function() {
    return "Unsupported operation: " + $.S(this.get$message());
  }
};

$$.UnimplementedError = {"": "Object;message>",
  toString$0: function() {
    var t1 = this.message;
    return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function() {
    return "Bad state: " + this.message;
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function() {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
};

$$.IllegalJSRegExpException = {"": "Object;_pattern,_errmsg",
  toString$0: function() {
    return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
  },
  $isException: true
};

$$.Iterable = {"": "Object;",
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  contains$1: function(element) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if ($.$$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  join$1: function(separator) {
    var t1, buffer, t2;
    if (typeof separator !== "string")
      return this.join$1$bailout(1, separator);
    t1 = $.iterator(this);
    if (t1.moveNext$0() !== true)
      return "";
    buffer = $.StringBuffer_StringBuffer("");
    if (separator === "")
      do
        $.add(buffer, $.S(t1.get$current()));
      while (t1.moveNext$0() === true);
    else {
      t2 = $.getInterceptor$JSArray(buffer);
      t2.add$1(buffer, $.S(t1.get$current()));
      for (; t1.moveNext$0() === true;) {
        t2.add$1(buffer, separator);
        t2.add$1(buffer, $.S(t1.get$current()));
      }
    }
    return $.toString(buffer);
  },
  join$1$bailout: function(state0, separator) {
    var t1, buffer, t2;
    t1 = $.iterator(this);
    if (t1.moveNext$0() !== true)
      return "";
    buffer = $.StringBuffer_StringBuffer("");
    if (separator == null || $.$$eq(separator, "") === true)
      do
        $.add(buffer, $.S(t1.get$current()));
      while (t1.moveNext$0() === true);
    else {
      t2 = $.getInterceptor$JSArray(buffer);
      t2.add$1(buffer, $.S(t1.get$current()));
      for (; t1.moveNext$0() === true;) {
        t2.add$1(buffer, separator);
        t2.add$1(buffer, $.S(t1.get$current()));
      }
    }
    return $.toString(buffer);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$length: function() {
    var t1, count;
    t1 = $.iterator(this);
    for (count = 0; t1.moveNext$0() === true;)
      ++count;
    return count;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.iterator(this).moveNext$0() !== true;
  },
  get$last: function() {
    var t1, result;
    t1 = $.iterator(this);
    if (t1.moveNext$0() !== true)
      throw $.$$throw($.StateError$("No elements"));
    do
      result = t1.get$current();
    while (t1.moveNext$0() === true);
    return result;
  }
};

$$.Iterator = {"": "Object;"};

$$.Object = {"": ";",
  $eq: function(other) {
    if (other == null)
      return false;
    return this === other;
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  }
};

$$.ObjectInterceptor = {"": "Object;",
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  $lt: function(receiver, a0) {
    return receiver.$lt(a0);
  },
  $index: function(receiver, a0) {
    return receiver.$index(a0);
  },
  get$length: function(receiver) {
    return receiver.get$length();
  },
  removeAt$1: function(receiver, a0) {
    return receiver.removeAt$1(a0);
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  $indexSet: function(receiver, a0, a1) {
    return receiver.$indexSet(a0, a1);
  },
  $ge: function(receiver, a0) {
    return receiver.$ge(a0);
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  $gt: function(receiver, a0) {
    return receiver.$gt(a0);
  },
  contains$2: function(receiver, a0, a1) {
    return receiver.contains$2(a0, a1);
  },
  abs$0: function(receiver) {
    return receiver.abs$0();
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  indexOf$2: function(receiver, a0, a1) {
    return receiver.indexOf$2(a0, a1);
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  $and: function(receiver, a0) {
    return receiver.$and(a0);
  },
  removeMatching$1: function(receiver, a0) {
    return receiver.removeMatching$1(a0);
  },
  floor$0: function(receiver) {
    return receiver.floor$0();
  },
  $tdiv: function(receiver, a0) {
    return receiver.$tdiv(a0);
  },
  split$1: function(receiver, a0) {
    return receiver.split$1(a0);
  },
  length$0: function(receiver) {
    return receiver.length$0();
  },
  $mod: function(receiver, a0) {
    return receiver.$mod(a0);
  },
  getRange$2: function(receiver, a0, a1) {
    return receiver.getRange$2(a0, a1);
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  $sub: function(receiver, a0) {
    return receiver.$sub(a0);
  },
  removeRange$2: function(receiver, a0, a1) {
    return receiver.removeRange$2(a0, a1);
  },
  toSet$0: function(receiver) {
    return receiver.toSet$0();
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  compareTo$1: function(receiver, a0) {
    return receiver.compareTo$1(a0);
  },
  substring$2: function(receiver, a0, a1) {
    return receiver.substring$2(a0, a1);
  },
  $le: function(receiver, a0) {
    return receiver.$le(a0);
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  $negate: function(receiver) {
    return receiver.$negate();
  },
  $mul: function(receiver, a0) {
    return receiver.$mul(a0);
  },
  get$contains: function(receiver) {
    return receiver.get$contains();
  },
  addAll$1: function(receiver, a0) {
    return receiver.addAll$1(a0);
  },
  $shl: function(receiver, a0) {
    return receiver.$shl(a0);
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  addLast$1: function(receiver, a0) {
    return receiver.addLast$1(a0);
  },
  sort$1: function(receiver, a0) {
    return receiver.sort$1(a0);
  },
  clear$0: function(receiver) {
    return receiver.clear$0();
  },
  $add: function(receiver, a0) {
    return receiver.$add(a0);
  },
  removeAll$1: function(receiver, a0) {
    return receiver.removeAll$1(a0);
  },
  contains$1: function(receiver, a0) {
    return receiver.contains$1(a0);
  },
  $or: function(receiver, a0) {
    return receiver.$or(a0);
  },
  get$last: function(receiver) {
    return receiver.get$last();
  },
  indexOf$1: function(receiver, a0) {
    return receiver.indexOf$1(a0);
  },
  allMatches$1: function(receiver, a0) {
    return receiver.allMatches$1(a0);
  },
  $xor: function(receiver, a0) {
    return receiver.$xor(a0);
  },
  trim$0: function(receiver) {
    return receiver.trim$0();
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  get$isNegative: function(receiver) {
    return receiver.get$isNegative();
  },
  $eq: function(receiver, a0) {
    return receiver.$eq(a0);
  },
  remove$1: function(receiver, a0) {
    return receiver.remove$1(a0);
  },
  join$1: function(receiver, a0) {
    return receiver.join$1(a0);
  },
  ceil$0: function(receiver) {
    return receiver.ceil$0();
  },
  where$1: function(receiver, a0) {
    return receiver.where$1(a0);
  },
  $div: function(receiver, a0) {
    return receiver.$div(a0);
  },
  toList$0: function(receiver) {
    return receiver.toList$0();
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  },
  $eq: function(receiver, a) {
    return receiver == a;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeAt$1: function(receiver, index) {
    if (index < 0 || index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    $.checkGrowable(receiver, "removeAt");
    return receiver.splice(index, 1)[0];
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    $.checkGrowable(receiver, "remove");
    for (i = 0; i < receiver.length; ++i)
      if ($.$$eq(receiver[i], element) === true) {
        receiver.splice(i, 1);
        return;
      }
  },
  removeAll$1: function(receiver, elements) {
    $.IterableMixinWorkaround_removeAllList(receiver, elements);
  },
  removeMatching$1: function(receiver, test) {
    $.IterableMixinWorkaround_removeMatchingList(receiver, test);
  },
  where$1: function(receiver, f) {
    return $.WhereIterable$(receiver, f);
  },
  addAll$1: function(receiver, collection) {
    var t1;
    for (t1 = $.iterator(collection); t1.moveNext$0() === true;)
      this.add$1(receiver, t1.get$current());
  },
  addLast$1: function(receiver, value) {
    $.checkGrowable(receiver, "addLast");
    receiver.push(value);
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(receiver, separator) {
    var list, i, t1;
    if (separator == null)
      separator = "";
    list = $.List_List(receiver.length);
    for (i = 0; i < receiver.length; ++i) {
      t1 = $.S(receiver[i]);
      if (i >= list.length)
        throw $.ioore(i);
      list[i] = t1;
    }
    return list.join(separator);
  },
  getRange$2: function(receiver, start, length) {
    var t1, end;
    if (0 === length)
      return [];
    $.checkNull(start);
    $.checkNull(length);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof length === "number" && Math.floor(length) === length))
      throw $.$$throw($.ArgumentError$(length));
    t1 = length < 0;
    if (t1)
      throw $.$$throw($.ArgumentError$(length));
    if (start < 0)
      throw $.$$throw($.RangeError$value(start));
    end = start + length;
    if (end > receiver.length)
      throw $.$$throw($.RangeError$value(length));
    if (t1)
      throw $.$$throw($.ArgumentError$(length));
    return receiver.slice(start, end);
  },
  get$last: function(receiver) {
    var t1 = receiver.length;
    if (t1 > 0)
      return receiver[t1 - 1];
    throw $.$$throw($.StateError$("No elements"));
  },
  removeRange$2: function(receiver, start, length) {
    var receiverLength, t1, t2;
    $.checkGrowable(receiver, "removeRange");
    if (length === 0)
      return;
    $.checkNull(start);
    $.checkNull(length);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (length < 0)
      throw $.$$throw($.ArgumentError$(length));
    receiverLength = receiver.length;
    if (start < 0 || start >= receiverLength)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + length;
    if (t1 > receiverLength)
      throw $.$$throw($.RangeError$value(t1));
    t2 = receiverLength - length;
    $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
    this.set$length(receiver, t2);
  },
  sort$1: function(receiver, compare) {
    $.checkMutable(receiver, "sort");
    $.IterableMixinWorkaround_sortList(receiver, compare);
  },
  indexOf$2: function(receiver, element, start) {
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  contains$1: function(receiver, other) {
    var t1, i;
    for (t1 = $.getInterceptor(other), i = 0; i < receiver.length; ++i)
      if (t1.$eq(other, receiver[i]) === true)
        return true;
    return false;
  },
  get$contains: function(receiver) {
    return new $.BoundClosure0(this, "contains$1", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.Collections_collectionToString(receiver);
  },
  toList$0: function(receiver) {
    return $.List_List$from(receiver);
  },
  toSet$0: function(receiver) {
    return $.Set_Set$from(receiver);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  length$0: function($receiver) {
    return this.get$length($receiver).call$0();
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNumber = {"": "Object;",
  compareTo$1: function(receiver, b) {
    var bIsNegative;
    if (!(typeof b === "number"))
      throw $.$$throw($.ArgumentError$(b));
    if (receiver < b)
      return -1;
    else if (receiver > b)
      return 1;
    else if (receiver === b) {
      if (receiver === 0) {
        bIsNegative = this.get$isNegative(b);
        if ($.$$eq(this.get$isNegative(receiver), bIsNegative) === true)
          return 0;
        if (this.get$isNegative(receiver) === true)
          return -1;
        return 1;
      }
      return 0;
    } else if (this.get$isNaN(receiver) === true) {
      if (this.get$isNaN(b) === true)
        return 0;
      return 1;
    } else
      return -1;
  },
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  ceil$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floor$0: function(receiver) {
    return Math.floor(receiver);
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver * other;
  },
  $mod: function(receiver, other) {
    var result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (other < 0)
      return result - other;
    else
      return result + other;
  },
  $tdiv: function(receiver, other) {
    return this.truncate$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return (receiver << other) >>> 0;
  },
  $and: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    return (receiver | other) >>> 0;
  },
  $xor: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver ^ other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver >= other;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSInt = {"": "JSNumber;",
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSDouble = {"": "JSNumber;",
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    $.checkNull(pattern);
    return receiver.split(pattern);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    t1 = $.getInterceptor$JSNumber(startIndex);
    if (t1.$lt(startIndex, 0) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.$$gt(endIndex, receiver.length) === true)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  trim$0: function(receiver) {
    return receiver.trim();
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  indexOf$1: function($receiver, other) {
    return this.indexOf$2($receiver, other, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$contains: function(receiver) {
    return new $.BoundClosure1(this, "contains$2", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  compareTo$1: function(receiver, other) {
    var t1;
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (receiver === other)
      t1 = 0;
    else
      t1 = receiver < other ? -1 : 1;
    return t1;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var hash, i, hash0, hash1;
    for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  length$0: function($receiver) {
    return this.get$length($receiver).call$0();
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$._HashMapImpl = {"": "Object;_keys>,_values>,_loadLimit,_numberOfEntries,_numberOfDeleted",
  _probeForAdding$1: function(key) {
    var t1, t3, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.hashCode(key);
    t3 = this._keys.length;
    if (t1 !== (t1 | 0))
      return this._probeForAdding$1$bailout(1, key, t1);
    hash = (t1 & t3 - 1) >>> 0;
    for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null) {
        if (insertionIndex < 0)
          return hash;
        return insertionIndex;
      } else if ($.$$eq(existingKey, key) === true)
        return hash;
      else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
        insertionIndex = hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
      if (hash !== (hash | 0))
        return this._probeForAdding$1$bailout(2, key, null, hash, numberOfProbes0, insertionIndex);
    }
  },
  _probeForAdding$1$bailout: function(state0, key, t1, hash, numberOfProbes0, insertionIndex) {
    switch (state0) {
      case 0:
        if (key == null)
          throw $.$$throw($.ArgumentError$(null));
        t1 = $.hashCode(key);
      case 1:
        state0 = 0;
        hash = $.$$and(t1, this._keys.length - 1);
        numberOfProbes = 1;
        insertionIndex = -1;
      case 2:
        var numberOfProbes, existingKey;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!true)
                  break L0;
                t1 = this._keys;
                if (hash !== (hash | 0))
                  throw $.iae(hash);
                if (hash < 0 || hash >= t1.length)
                  throw $.ioore(hash);
                existingKey = t1[hash];
                if (existingKey == null) {
                  if (insertionIndex < 0)
                    return hash;
                  return insertionIndex;
                } else if ($.$$eq(existingKey, key) === true)
                  return hash;
                else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
                  insertionIndex = hash;
                numberOfProbes0 = numberOfProbes + 1;
                hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
              case 2:
                state0 = 0;
                numberOfProbes = numberOfProbes0;
            }
    }
  },
  _probeForLookup$1: function(key) {
    var t1, hash, numberOfProbes, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.$$and($.hashCode(key), this._keys.length - 1);
    if (t1 !== (t1 | 0))
      return this._probeForLookup$1$bailout(1, key, t1);
    for (hash = t1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _probeForLookup$1$bailout: function(state0, key, t1) {
    var hash, numberOfProbes, existingKey, numberOfProbes0;
    for (hash = t1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _ensureCapacity$0: function() {
    var t1, capacity, t2;
    t1 = $.$$add(this._numberOfEntries, 1);
    if ($.$$ge(t1, this._loadLimit) === true) {
      this._grow$1(this._keys.length * 2);
      return;
    }
    capacity = this._keys.length;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = this._numberOfDeleted;
    if (t2 > capacity - t1 - t2)
      this._grow$1(capacity);
  },
  _grow$1: function(newCapacity) {
    var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
    capacity = this._keys.length;
    this._loadLimit = $.$$tdiv($.$$mul(newCapacity, 3), 4);
    oldKeys = this._keys;
    oldValues = this._values;
    this._keys = $.List_List$fixedLength(newCapacity, null);
    this._values = $.List_List$fixedLength(newCapacity, null);
    for (i = 0; i < capacity; ++i) {
      if (i >= oldKeys.length)
        throw $.ioore(i);
      key = oldKeys[i];
      if (key == null || key === $.CONSTANT3)
        continue;
      if (i >= oldValues.length)
        throw $.ioore(i);
      value = oldValues[i];
      newIndex = this._probeForAdding$1(key);
      t1 = this._keys;
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = key;
      t1 = this._values;
      if (newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = value;
    }
    this._numberOfDeleted = 0;
  },
  clear$0: function() {
    var t1, length, t2, t3, i;
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    t1 = this._keys;
    length = t1.length;
    for (t2 = this._values, t3 = t2.length, i = 0; i < length; ++i) {
      t1[i] = null;
      if (i >= t3)
        throw $.ioore(i);
      t2[i] = null;
    }
  },
  $indexSet: function(key, value) {
    var index, t1;
    this._ensureCapacity$0();
    index = this._probeForAdding$1(key);
    t1 = this._keys;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    t1 = t1[index];
    if (t1 == null || t1 === $.CONSTANT3) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.$$indexSet$bailout0(1, key, value, t1, index);
      this._numberOfEntries = t1 + 1;
    }
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = key;
    t1 = this._values;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = value;
  },
  $$indexSet$bailout0: function(state0, key, value, t1, index) {
    switch (state0) {
      case 0:
        this._ensureCapacity$0();
        index = this._probeForAdding$1(key);
        t1 = this._keys;
        if (index !== (index | 0))
          throw $.iae(index);
        if (index < 0 || index >= t1.length)
          throw $.ioore(index);
        t1 = t1[index];
      case 1:
        if (state0 === 1 || state0 === 0 && (t1 == null || t1 === $.CONSTANT3))
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 1:
              state0 = 0;
              this._numberOfEntries = $.$$add(t1, 1);
          }
        t1 = this._keys;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = key;
        t1 = this._values;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = value;
    }
  },
  $index: function(key) {
    var index, t1;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.$$index$bailout0(1, index);
    if (index < 0)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout0: function(state0, index) {
    var t1;
    if ($.$$lt(index, 0) === true)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  remove$1: function(key) {
    var index, t1, value;
    index = this._probeForLookup$1(key);
    if ($.$$ge(index, 0) === true) {
      this._numberOfEntries = $.$$sub(this._numberOfEntries, 1);
      t1 = this._values;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t1.length)
        throw $.ioore(index);
      value = t1[index];
      t1[index] = null;
      t1 = this._keys;
      if (index >= t1.length)
        throw $.ioore(index);
      t1[index] = $.CONSTANT3;
      this._numberOfDeleted = this._numberOfDeleted + 1;
      return value;
    }
    return;
  },
  get$isEmpty: function() {
    return $.$$eq(this._numberOfEntries, 0);
  },
  get$length: function() {
    return this._numberOfEntries;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  forEach$1: function(f) {
    var it, t1, t2, t3;
    it = $._HashMapImplIndexIterator$(this);
    for (; it.moveNext$0() === true;) {
      t1 = this._keys;
      t2 = it.get$current();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t2 = t1[t2];
      t1 = this._values;
      t3 = it.get$current();
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      f.call$2(t2, t1[t3]);
    }
  },
  get$keys: function() {
    return $._HashMapImplKeyIterable$(this);
  },
  get$values: function() {
    return $._HashMapImplValueIterable$(this);
  },
  containsKey$1: function(key) {
    return $.$$eq(this._probeForLookup$1(key), -1) !== true;
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _HashMapImpl$0: function() {
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
    this._keys = $.List_List$fixedLength(8, null);
    this._values = $.List_List$fixedLength(8, null);
  },
  $isMap: function() {
    return true;
  }
};

$$._HashMapImplKeyIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplKeyIterator$(this._map);
  }
};

$$._HashMapImplValueIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplValueIterator$(this._map);
  }
};

$$._HashMapImplIterator = {"": "Object;",
  moveNext$0: function() {
    var t1, t2, t4, newIndex, t3, t5;
    t1 = this._map;
    t2 = $.length(t1.get$_keys());
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout1(1, t2, t1);
    t4 = this._index;
    if (typeof t4 !== "number")
      return this.moveNext$0$bailout1(2, t2, t1, t4);
    newIndex = t4 + 1;
    for (t3 = t1.get$_keys(); newIndex < t2;) {
      if (typeof t3 !== "string" && (typeof t3 !== "object" || t3 === null || t3.constructor !== Array && !t3.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout1(3, t2, t1, t3, newIndex, $.CONSTANT4);
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t3.length)
        throw $.ioore(newIndex);
      t5 = t3[newIndex];
      if (!(t5 == null) && !(t5 === $.CONSTANT3)) {
        this._liblib0$_current = this._computeCurrentFromIndex$3(newIndex, t3, t1.get$_values());
        this._index = newIndex;
        return true;
      }
      ++newIndex;
    }
    this._index = t2;
    this._liblib0$_current = null;
    return false;
  },
  moveNext$0$bailout1: function(state0, t2, t1, t4, newIndex, t3) {
    switch (state0) {
      case 0:
        t1 = this._map;
        t2 = $.length(t1.get$_keys());
      case 1:
        state0 = 0;
        t4 = this._index;
      case 2:
        state0 = 0;
        newIndex = $.$$add(t4, 1);
      case 3:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t3 = $.getInterceptor$JSNumber(newIndex);
                if (!(t3.$lt(newIndex, t2) === true))
                  break L0;
                t4 = t1.get$_keys();
              case 3:
                state0 = 0;
                t4 = $.$$index(t4, newIndex);
                if (!(t4 == null) && !(t4 === $.CONSTANT3)) {
                  this._liblib0$_current = this._computeCurrentFromIndex$3(newIndex, t1.get$_keys(), t1.get$_values());
                  this._index = newIndex;
                  return true;
                }
                newIndex = t3.$add(newIndex, 1);
            }
        this._index = t2;
        this._liblib0$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$._HashMapImplKeyIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.$$index(keys, index);
  }
};

$$._HashMapImplValueIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.$$index(values, index);
  }
};

$$._HashMapImplIndexIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return index;
  }
};

$$._DeletedKeySentinel = {"": "Object;"};

$$._KeyValuePair = {"": "Object;key>,value="};

$$._LinkedHashMapImpl = {"": "Object;_liblib0$_list,_map",
  $indexSet: function(key, value) {
    var t1, t3;
    if (this._map.containsKey$1(key) === true) {
      t1 = this._map;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.$$indexSet$bailout(1, key, value, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key].get$element().set$value(value);
    } else {
      this._liblib0$_list.addLast$1($._KeyValuePair$(key, value));
      t1 = this._map;
      t3 = this._liblib0$_list.lastEntry$0();
      if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
        return this.$$indexSet$bailout(2, key, null, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key] = t3;
    }
  },
  $$indexSet$bailout: function(state0, key, value, t1) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 1 || state0 === 0 && this._map.containsKey$1(key) === true)
          switch (state0) {
            case 0:
              t1 = this._map;
            case 1:
              state0 = 0;
              $.$$index(t1, key).get$element().set$value(value);
          }
        else
          switch (state0) {
            case 0:
              this._liblib0$_list.addLast$1($._KeyValuePair$(key, value));
              t1 = this._map;
            case 2:
              state0 = 0;
              $.$$indexSet(t1, key, this._liblib0$_list.lastEntry$0());
          }
    }
  },
  $index: function(key) {
    var t1 = this._map;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, key, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    t1 = t1[key];
    if (t1 == null)
      return;
    return t1.get$element().get$value();
  },
  $$index$bailout: function(state0, key, t1) {
    t1 = $.$$index(t1, key);
    if (t1 == null)
      return;
    return t1.get$element().get$value();
  },
  remove$1: function(key) {
    var t1 = $.remove(this._map, key);
    if (t1 == null)
      return;
    t1.remove$0();
    return t1.get$element().get$value();
  },
  get$keys: function() {
    return $.MappedIterable$(this._liblib0$_list, new $._LinkedHashMapImpl_keys_anon());
  },
  get$values: function() {
    return $.MappedIterable$(this._liblib0$_list, new $._LinkedHashMapImpl_values_anon());
  },
  forEach$1: function(f) {
    this._liblib0$_list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
  },
  containsKey$1: function(key) {
    return this._map.containsKey$1(key);
  },
  get$length: function() {
    return $.length(this._map);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  clear$0: function() {
    $.clear(this._map);
    this._liblib0$_list.clear$0();
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _LinkedHashMapImpl$0: function() {
    this._map = $.HashMap_HashMap();
    this._liblib0$_list = $.DoubleLinkedQueue$();
  },
  $isMap: function() {
    return true;
  }
};

$$.DoubleLinkedQueueEntry = {"": "Object;_previous=,_next=,_element",
  _link$2: function(p, n) {
    this._next = n;
    this._previous = p;
    p.set$_next(this);
    n.set$_previous(this);
  },
  prepend$1: function(e) {
    $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
  },
  remove$0: function() {
    var t1 = this._next;
    this._previous.set$_next(t1);
    t1 = this._previous;
    this._next.set$_previous(t1);
    this._next = null;
    this._previous = null;
    return this._element;
  },
  _asNonSentinelEntry$0: function() {
    return this;
  },
  previousEntry$0: function() {
    return this._previous._asNonSentinelEntry$0();
  },
  nextEntry$0: function() {
    return this._next._asNonSentinelEntry$0();
  },
  get$element: function() {
    return this._element;
  },
  DoubleLinkedQueueEntry$1: function(e) {
    this._element = e;
  }
};

$$._DoubleLinkedQueueEntrySentinel = {"": "DoubleLinkedQueueEntry;_previous,_next,_element",
  remove$0: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _asNonSentinelEntry$0: function() {
    return;
  },
  get$element: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _DoubleLinkedQueueEntrySentinel$0: function() {
    this._link$2(this, this);
  }
};

$$.DoubleLinkedQueue = {"": "Iterable;_sentinel",
  addLast$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  add$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      this._sentinel.prepend$1(t2);
    }
  },
  removeLast$0: function() {
    return this._sentinel._previous.remove$0();
  },
  removeFirst$0: function() {
    return this._sentinel._next.remove$0();
  },
  remove$1: function(o) {
    var entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel);) {
      if ($.$$eq(entry.get$element(), o) === true) {
        entry.remove$0();
        return;
      }
      entry = entry.get$_next();
    }
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAllList(this, elements);
  },
  removeMatching$1: function(test) {
    var entry, next;
    entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel); entry = next) {
      next = entry.get$_next();
      if (test.call$1(entry.get$element()) === true)
        entry.remove$0();
    }
  },
  get$last: function() {
    return this._sentinel._previous.get$element();
  },
  lastEntry$0: function() {
    return this._sentinel.previousEntry$0();
  },
  get$isEmpty: function() {
    var t1 = this._sentinel;
    return t1._next === t1;
  },
  clear$0: function() {
    var t1 = this._sentinel;
    t1._next = t1;
    t1 = this._sentinel;
    t1._previous = t1;
  },
  get$iterator: function() {
    return $._DoubleLinkedQueueIterator$(this._sentinel);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  DoubleLinkedQueue$0: function() {
    this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
  },
  $isCollection: function() {
    return true;
  }
};

$$._DoubleLinkedQueueIterator = {"": "Object;_sentinel,_currentEntry,_liblib0$_current",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._currentEntry;
    if (t1 == null)
      return false;
    this._currentEntry = t1.get$_next();
    t1 = this._currentEntry;
    t2 = this._sentinel;
    if (t1 == null ? t2 == null : t1 === t2) {
      this._currentEntry = null;
      this._liblib0$_current = null;
      this._sentinel = null;
      return false;
    }
    this._liblib0$_current = t1.get$element();
    return true;
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$.HashSet = {"": "Collection;_backingMap",
  clear$0: function() {
    this._backingMap.clear$0();
  },
  add$1: function(value) {
    this._backingMap.$indexSet(value, value);
  },
  remove$1: function(value) {
    var t1 = this._backingMap;
    if (t1.containsKey$1(value) !== true)
      return false;
    t1.remove$1(value);
    return true;
  },
  contains$1: function(value) {
    return this._backingMap.containsKey$1(value);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    this._backingMap.forEach$1(new $.HashSet_forEach_anon(f));
  },
  get$isEmpty: function() {
    return $.isEmpty(this._backingMap);
  },
  get$length: function() {
    return $.length(this._backingMap);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$iterator: function() {
    return $._HashSetIterator$(this);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  $isSet: true,
  $isCollection: function() {
    return true;
  }
};

$$._HashSetIterator = {"": "Object;_keysIterator",
  get$current: function() {
    var result = this._keysIterator.get$current();
    if (result === $.CONSTANT3)
      throw $.$$throw($.StateError$("Concurrent modification."));
    return result;
  },
  moveNext$0: function() {
    var t1, result, t2;
    t1 = this._keysIterator;
    do {
      result = t1.moveNext$0();
      if (result === true)
        t2 = t1.get$current() == null || t1.get$current() === $.CONSTANT3;
      else
        t2 = false;
    } while (t2);
    return result;
  }
};

$$.MappedIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    return $.MappedIterator$($.iterator(this._iterable), this._f);
  },
  get$length: function() {
    return $.length(this._iterable);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return $.isEmpty(this._iterable);
  }
};

$$.MappedIterator = {"": "Iterator;_liblib$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib$_current = this._f$1(t1.get$current());
      return true;
    } else {
      this._liblib$_current = null;
      return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$.WhereIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    return $.WhereIterator$($.iterator(this._iterable), this._f);
  }
};

$$.WhereIterator = {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
};

$$.ListIterator = {"": "Object;_list,_liblib$_length,_liblib$_position,_liblib$_current",
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._list;
    t2 = t1.length;
    t3 = this._liblib$_length;
    if (t2 !== t3)
      throw $.$$throw($.ConcurrentModificationError$(t1));
    t2 = this._liblib$_position;
    if (t2 !== (t2 | 0))
      return this.moveNext$0$bailout0(1, t2, t1, t3);
    ++t2;
    if (t2 < t3) {
      this._liblib$_position = t2;
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      this._liblib$_current = t1[t2];
      return true;
    }
    this._liblib$_current = null;
    return false;
  },
  moveNext$0$bailout0: function(state0, t2, t1, t3) {
    t2 = $.$$add(t2, 1);
    if ($.$$lt(t2, t3) === true) {
      this._liblib$_position = t2;
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      this._liblib$_current = t1[t2];
      return true;
    }
    this._liblib$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$._Manager = {"": "Object;nextIsolateId=,currentManagerId=,nextManagerId=,currentContext=,rootContext=,topEventLoop>,fromCommandLine>,isWorker>,supportsWorkers,isolates>,mainManager>,managers>",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = !($.get$globalWorker() == null) && !($.get$IsolateNatives_thisScript() == null);
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true && $.isEmpty(this.isolates) === true && $.$$eq(this.topEventLoop.get$activeTimerCount(), 0) === true)
      this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map();
    this.managers = $.Map_Map();
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id=,ports>,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.get$currentContext();
    $globalState.set$currentContext(this);
    this._setGlobals$0();
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.set$currentContext(old);
      if (!(old == null))
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    return $.$$index(this.ports, portId);
  },
  register$2: function(portId, port) {
    if (this.ports.containsKey$1(portId) === true)
      throw $.$$throw($.Exception_Exception("Registry: ports must be registered only once."));
    $.$$indexSet(this.ports, portId, port);
    $.$$indexSet($globalState.get$isolates(), this.id, this);
  },
  unregister$1: function(portId) {
    $.remove(this.ports, portId);
    if ($.isEmpty(this.ports) === true)
      $.remove($globalState.get$isolates(), this.id);
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId($.$$add(t2, 1));
    this.id = t2;
    this.ports = $.Map_Map();
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount=",
  enqueue$3: function(isolate, fn, msg) {
    $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if ($.isEmpty(t1) === true)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if (!($globalState.get$rootContext() == null) && $globalState.get$isolates().containsKey$1($globalState.get$rootContext().get$id()) === true && $globalState.get$fromCommandLine() === true && $.isEmpty($globalState.get$rootContext().get$ports()) === true)
      throw $.$$throw($.Exception_Exception("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var event = this.dequeue$0();
    if (event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if (!($.get$globalWindow() == null))
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0() === true;)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.get$isWorker() !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function() {
    return 0;
  },
  set$id: function(i) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  set$onmessage: function(f) {
    throw $.$$throw($.Exception_Exception("onmessage should not be set on MainManagerStub"));
  },
  postMessage$1: function(msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function() {
  }
};

$$._BaseSendPort = {"": "Object;_isolateId>",
  _checkReplyTo$1: function(replyTo) {
    if (!(replyTo == null) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_WorkerSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_BufferingSendPort))
      throw $.$$throw($.Exception_Exception("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $.Completer_Completer();
    port = $.ReceivePortImpl$();
    this.send$2(message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.get$future();
  },
  $isSendPort: true
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort>,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_NativeJsSendPort && $.$$eq(this._receivePort, other._receivePort) === true;
  },
  get$hashCode: function() {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId>,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!other.$is_WorkerSendPort)
      t1 = $.$$eq(this._workerId, other._workerId) === true && $.$$eq(this._isolateId, other._isolateId) === true && $.$$eq(this._receivePortId, other._receivePortId) === true;
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function() {
    return $.$$xor($.$$xor($.$$shl(this._workerId, 16), $.$$shl(this._isolateId, 8)), this._receivePortId);
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
};

$$.ReceivePortImpl = {"": "Object;_id>,_callback>",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._callback = onMessage;
  },
  close$0: function() {
    this._callback = null;
    $globalState.get$currentContext().unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $globalState.get$currentContext().get$id());
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports>,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    if (!($.$$index(this._visited, list) == null))
      return;
    $.$$indexSet(this._visited, list, true);
    $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    if (!($.$$index(this._visited, map) == null))
      return;
    $.$$indexSet(this._visited, map, true);
    $.forEach(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (!!port.$is_BufferingSendPort && port._port == null)
      this.ports.push(port.get$_futurePort());
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $globalState.get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(x) {
    var t1, managerId, isolateId, receivePortId, receivePort;
    t1 = $.getInterceptor$JSStringJSArray(x);
    managerId = t1.$index(x, 1);
    isolateId = t1.$index(x, 2);
    receivePortId = t1.$index(x, 3);
    if ($.$$eq(managerId, $globalState.get$currentManagerId()) === true) {
      t1 = $.$$index($globalState.get$isolates(), isolateId);
      if (t1 == null)
        return;
      receivePort = t1.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  $index: function(object) {
    return object['__MessageTraverser__attached_info__'];
  },
  $indexSet: function(object, info) {
    $.add(this.tagged, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function() {
    this.tagged = $.List_List(0);
  },
  cleanup$0: function() {
    var t1, i;
    t1 = $.length(this.tagged);
    if (typeof t1 !== "number")
      return this.cleanup$0$bailout(1, t1);
    i = 0;
    for (; i < t1; ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  },
  cleanup$0$bailout: function(state0, t1) {
    var i = 0;
    for (; $.CONSTANT.$lt(i, t1); ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  $index: function(object) {
    return;
  },
  $indexSet: function(object, info) {
  },
  reset$0: function() {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    this._visited.reset$0();
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.$isList()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && x.$isMap())
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPortSync)
      return this.visitSendPortSync$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, len, copy, i;
    if (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior())
      return this.visitList$1$bailout(1, list);
    t1 = $.$$index(this._visited, list);
    if (!(t1 == null))
      return t1;
    len = list.length;
    copy = $.List_List(len);
    $.$$indexSet(this._visited, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  },
  visitList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.$$index(this._visited, list);
        if (!(t1 == null))
          return t1;
        t1 = $.getInterceptor$JSStringJSArray(list);
        len = t1.get$length(list);
      case 2:
        var copy, i, t2;
        state0 = 0;
        copy = $.List_List(len);
        $.$$indexSet(this._visited, list, copy);
        for (i = 0; $.CONSTANT.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= copy.length)
            throw $.ioore(i);
          copy[i] = t2;
        }
        return copy;
    }
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t1.copy_0 = $.$$index(this._visited, map);
    t2 = t1.copy_0;
    if (!(t2 == null))
      return t2;
    t1.copy_0 = $.Map_Map();
    $.$$indexSet(this._visited, map, t1.copy_0);
    map.forEach$1(new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, id;
    t1 = $.$$index(this._visited, list);
    if (!(t1 == null))
      return ["ref", t1];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, id;
    t1 = $.$$index(this._visited, map);
    if (!(t1 == null))
      return ["ref", t1];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, map, id);
    return ["map", id, this._serializeList$1($.toList(map.get$keys())), this._serializeList$1($.toList(map.get$values()))];
  },
  _serializeList$1: function(list) {
    var len, result, i, t1;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSStringJSArray(list);
        len = t1.get$length(list);
      case 2:
        var result, i, t2;
        state0 = 0;
        result = $.List_List(len);
        for (i = 0; $.CONSTANT.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= result.length)
            throw $.ioore(i);
          result[i] = t2;
        }
        return result;
    }
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $.HashMap_HashMap();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.$$index(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var t1 = $.$$index(x, 1);
    return $.$$index(this._deserialized, t1);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$JSStringJSArray(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.$isJavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    $.$$indexSet(this._deserialized, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id, t2, len) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(x);
        id = t1.$index(x, 1);
        dartList = t1.$index(x, 2);
      case 1:
        state0 = 0;
        $.$$indexSet(this._deserialized, id, dartList);
        t2 = $.getInterceptor$JSStringJSArray(dartList);
        len = t2.get$length(dartList);
      case 2:
        var t1, i;
        state0 = 0;
        for (i = 0; $.CONSTANT.$lt(i, len); ++i)
          t2.$indexSet(dartList, i, this._deserializeHelper$1(t2.$index(dartList, i)));
        return dartList;
    }
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, keys, values, len, i, key;
    result = $.Map_Map();
    t1 = $.getInterceptor$JSStringJSArray(x);
    id = t1.$index(x, 1);
    $.$$indexSet(this._deserialized, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, null, result, keys, null, values);
    len = keys.length;
    for (t1 = $.getInterceptor$JSArray(result), i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      t1.$indexSet(result, key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values, t3, len) {
    switch (state0) {
      case 0:
        result = $.Map_Map();
        t1 = $.getInterceptor$JSStringJSArray(x);
        id = t1.$index(x, 1);
        $.$$indexSet(this._deserialized, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(keys);
        len = t3.get$length(keys);
      case 3:
        var id, t2, i;
        state0 = 0;
        for (t1 = $.getInterceptor$JSStringJSArray(values), t2 = $.getInterceptor$JSArray(result), i = 0; $.CONSTANT.$lt(i, len); ++i)
          t2.$indexSet(result, this._deserializeHelper$1(t3.$index(keys, i)), this._deserializeHelper$1(t1.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle<",
  cancel$0: function() {
    if (!($.get$globalThis().setTimeout == null)) {
      if (this._inEventLoop === true)
        throw $.$$throw($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.get$topEventLoop();
      t1.set$activeTimerCount($.$$sub(t1.get$activeTimerCount(), 1));
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.$$throw($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if ($.$$eq(milliseconds, 0) === true)
      t1 = $.hasTimer() !== true || $._globalState().get$isWorker() === true;
    else
      t1 = false;
    if (t1) {
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), new $.anon0(this, callback), "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer() === true) {
      t1 = $._globalState().get$topEventLoop();
      t1.set$activeTimerCount($.$$add(t1.get$activeTimerCount(), 1));
      t1 = new $.internalCallback(this, callback);
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(t1, 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Timer greater than 0."));
  }
};

$$.AsyncError = {"": "Object;error>,stackTrace>,cause>",
  _writeOn$1: function(buffer) {
    var message, t1, exception, t2;
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, "'");
    message = null;
    try {
      message = $.toString(this.error);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    t1.add$1(buffer, message);
    t1.add$1(buffer, "'\n");
    t2 = this.stackTrace;
    if (!(t2 == null)) {
      t1.add$1(buffer, "Stack trace:\n");
      t1.add$1(buffer, $.toString(t2));
      t1.add$1(buffer, "\n");
    }
  },
  toString$0: function() {
    var buffer, t1, cause;
    buffer = $.StringBuffer_StringBuffer("");
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, "AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; !(cause == null);) {
      t1.add$1(buffer, "Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return t1.toString$0(buffer);
  },
  throwDelayed$0: function() {
    var reportError, exception;
    reportError = new $.AsyncError_throwDelayed_reportError(this);
    try {
      $.Timer_Timer(0, new $.AsyncError_throwDelayed_anon(this, reportError));
    } catch (exception) {
      $.unwrapException(exception);
      reportError.call$0();
    }

  },
  $isAsyncError: true
};

$$._CompleterImpl = {"": "Object;future>,_isComplete>",
  complete$1: function(value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var asyncError;
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    asyncError = typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace);
    this.future._setError$1(asyncError);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future>,_nextListener=",
  _sendValue$1: function(value) {
    this.future._setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_liblib3$_state,_resultOrListeners>",
  get$_isComplete: function() {
    return $.$$eq(this._liblib3$_state, 0) !== true;
  },
  get$_hasValue: function() {
    return $.$$eq(this._liblib3$_state, 1);
  },
  get$_hasError: function() {
    return $.$$eq($.$$and(this._liblib3$_state, 2), 0) !== true;
  },
  get$_hasUnhandledError: function() {
    return $.$$eq($.$$and(this._liblib3$_state, 4), 0) !== true;
  },
  _clearUnhandledError$0: function() {
    this._liblib3$_state = $.$$and(this._liblib3$_state, 4294967291);
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (this.get$_isComplete() !== true) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError() === true) {
      if (!(onError == null))
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue() === true)
      return $._FutureWrapper$(this);
    if (this.get$_isComplete() !== true) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.Timer_Timer(0, new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._clearUnhandledError$0();
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.Timer_Timer(0, new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  get$_handleError: function() {
    return new $.BoundClosure2(this, "_handleError$2");
  },
  _setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._liblib3$_state = 1;
    this._resultOrListeners = value;
    for (; !(listeners == null); listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_setValue: function() {
    return new $.BoundClosure(this, "_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._liblib3$_state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (!(listeners0 == null)) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    this._liblib3$_state = $.$$or(this._liblib3$_state, 4);
    $.Timer_Timer(0, new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; !(current == null); prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (this.get$_isComplete() !== true)
      this._addListener$1(future._asListener$0());
    else if (this.get$_hasValue() === true)
      future._setValue$1(this._resultOrListeners);
    else {
      this._clearUnhandledError$0();
      future._setError$1(this._resultOrListeners);
    }
  },
  _asListener$0: function() {
    return $._FutureListener__FutureListener$wrap(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._liblib3$_state = 1;
    this._resultOrListeners = value;
  },
  $is_FutureImpl: true,
  $isFuture: true
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener=",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.$isFuture)
      if (!!result.$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    else
      this._setValue$1(result);
  }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_liblib3$_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_liblib3$_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, e1, s0, exception, t1;
    if (!(this._test == null)) {
      matchesTest = null;
      try {
        matchesTest = this._test$1(error.get$error());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_liblib3$_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function($function, onError) {
    return this._future.then$2$onError($function, onError);
  },
  then$1: function($function) {
    return this.then$2$onError($function, null);
  },
  catchError$2$test: function($function, test) {
    return this._future.catchError$2$test($function, test);
  },
  catchError$1: function($function) {
    return this.catchError$2$test($function, null);
  },
  $isFuture: true
};

$$.Stream = {"": "Object;",
  where$1: function(test) {
    return $.WhereStream$(this, test);
  },
  contains$1: function(match) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_contains_anon(t1, match, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_contains_anon0(future), t3, true);
    return future;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  get$length: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    t2 = new $.Stream_length_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_length_anon0(t1, future), t3, true);
    return future;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_isEmpty_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_isEmpty_anon0(future), t3, true);
    return future;
  },
  toList$0: function() {
    var result, future, t1, t2;
    result = [];
    future = $._FutureImpl$();
    t1 = new $.Stream_toList_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toList_anon0(result, future), t2, true);
    return future;
  },
  toSet$0: function() {
    var result, future, t1, t2;
    result = $.Set_Set();
    future = $._FutureImpl$();
    t1 = new $.Stream_toSet_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toSet_anon0(result, future), t2, true);
    return future;
  },
  get$last: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.result_0 = null;
    t1.foundResult_1 = false;
    t2 = new $.Stream_last_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_last_anon0(t1, future), t3, true);
    return future;
  }
};

$$.StreamSubscription = {"": "Object;"};

$$._ForwardingStream = {"": "Stream;",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    if (onData == null)
      onData = $._nullDataHandler;
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    return $._ForwardingStreamSubscription$(this, onData, onError, onDone, true === unsubscribeOnError);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  _handleData$2: function(data, sink) {
    sink._sendData$1(data);
  },
  get$_handleData: function() {
    return new $.BoundClosure2(this, "_handleData$2");
  },
  _handleError$2: function(error, sink) {
    sink._sendError$1(error);
  },
  get$_handleError: function() {
    return new $.BoundClosure2(this, "_handleError$2");
  },
  _handleDone$1: function(sink) {
    sink._sendDone$0();
  },
  get$_handleDone: function() {
    return new $.BoundClosure(this, "_handleDone$1");
  }
};

$$._ForwardingStreamSubscription = {"": "Object;_stream,_liblib3$_onData,_onError,_onDone,_subscription",
  _liblib3$_onData$1: function(arg0) {
    return this._liblib3$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  cancel$0: function() {
    var t1 = this._subscription;
    if (t1 == null)
      throw $.$$throw($.StateError$("Subscription has been unsubscribed"));
    t1.cancel$0();
    this._subscription = null;
  },
  _sendData$1: function(data) {
    this._liblib3$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
  },
  _sendDone$0: function() {
    var t1 = this._subscription;
    if (!(t1 == null)) {
      t1.cancel$0();
      this._subscription = null;
    }
    this._onDone$0();
  },
  _handleData$1: function(data) {
    this._stream._handleData$2(data, this);
  },
  get$_handleData: function() {
    return new $.BoundClosure(this, "_handleData$1");
  },
  _handleError$1: function(error) {
    this._stream._handleError$2(error, this);
  },
  get$_handleError: function() {
    return new $.BoundClosure(this, "_handleError$1");
  },
  _handleDone$0: function() {
    this._stream._handleDone$1(this);
  },
  get$_handleDone: function() {
    return new $.BoundClosure3(this, "_handleDone$0");
  },
  _ForwardingStreamSubscription$5: function(_stream, _onData, _onError, _onDone, unsubscribeOnError) {
    var t1, t2, t3;
    t1 = this._stream._source;
    t2 = this.get$_handleData();
    t3 = this.get$_handleError();
    this._subscription = t1.listen$4$onDone$onError$unsubscribeOnError(t2, this.get$_handleDone(), t3, unsubscribeOnError);
  }
};

$$.WhereStream = {"": "_ForwardingStream;_test,_source",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var satisfies, e, s, exception, t1;
    satisfies = null;
    try {
      satisfies = this._test$1(inputEvent);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      sink._sendError$1($._asyncError(e, s, null));
      return;
    }

    if (satisfies === true)
      sink._sendData$1(inputEvent);
  },
  get$_handleData: function() {
    return new $.BoundClosure2(this, "_handleData$2");
  }
};

$$.AbstractWorkerEvents = {"": "Events;_ptr",
  get$error: function() {
    return this.$index("error");
  }
};

$$.ApplicationCacheEvents = {"": "Events;_ptr",
  get$error: function() {
    return this.$index("error");
  }
};

$$.BatteryManagerEvents = {"": "Events;_ptr"};

$$.BodyElementEvents = {"": "ElementEvents;_ptr",
  get$error: function() {
    return this.$index("error");
  },
  get$resize: function() {
    return this.$index("resize");
  }
};

$$.DedicatedWorkerContextEvents = {"": "WorkerContextEvents;_ptr"};

$$.DocumentEvents = {"": "ElementEvents;_ptr"};

$$._ChildrenElementList = {"": "Object;_liblib2$_element,_childElements",
  toList$0: function() {
    var t1, t3, output, len, i, t2;
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.toList$0$bailout(1, t1);
    t3 = t1.length;
    output = $.List_List$fixedLength(t3, null);
    for (len = t1.length, i = 0; i < len; ++i) {
      t2 = t1[i];
      if (i >= t3)
        throw $.ioore(i);
      output[i] = t2;
    }
    return output;
  },
  toList$0$bailout: function(state0, t1, t3, len, output) {
    switch (state0) {
      case 0:
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        output = $.List_List$fixedLength(t3.get$length(t1), null);
        len = t3.get$length(t1);
      case 2:
        var i, t2;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT.$lt(i, len); ++i) {
          t2 = t3.$index(t1, i);
          if (i >= output.length)
            throw $.ioore(i);
          output[i] = t2;
        }
        return output;
    }
  },
  toSet$0: function() {
    var output, t1, len, t3, i;
    output = $.Set_Set();
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.toSet$0$bailout(1, output, t1);
    len = t1.length;
    t3 = $.getInterceptor$JSArray(output);
    i = 0;
    for (; i < len; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      t3.add$1(output, t1[i]);
    }
    return output;
  },
  toSet$0$bailout: function(state0, output, t1, len, t3) {
    switch (state0) {
      case 0:
        output = $.Set_Set();
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        len = t3.get$length(t1);
      case 2:
        var t5, i;
        state0 = 0;
        t5 = $.getInterceptor$JSArray(output);
        i = 0;
        for (; $.CONSTANT.$lt(i, len); ++i)
          t5.add$1(output, t3.$index(t1, i));
        return output;
    }
  },
  contains$1: function(element) {
    return $.contains0(this._childElements, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this._childElements); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  get$isEmpty: function() {
    return this._liblib2$_element.firstElementChild == null;
  },
  get$length: function() {
    return $.length(this._childElements);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    var t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout4(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout4: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  $indexSet: function(index, value) {
    var t1, t2;
    t1 = this._liblib2$_element;
    t2 = this._childElements;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.$$indexSet$bailout1(1, index, value, t1, t2);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t2.length)
      throw $.ioore(index);
    t1.$$dom_replaceChild$2(value, t2[index]);
  },
  $$indexSet$bailout1: function(state0, index, value, t1, t2) {
    t1.$$dom_replaceChild$2(value, $.$$index(t2, index));
  },
  set$length: function(newLength) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  add$1: function(value) {
    this._liblib2$_element.$$dom_appendChild$1(value);
    return value;
  },
  addLast$1: function(value) {
    this._liblib2$_element.$$dom_appendChild$1(value);
    return value;
  },
  get$iterator: function() {
    return $.iterator(this.toList$0());
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable), t2 = this._liblib2$_element; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("TODO(jacobr): should we impl?"));
  },
  remove$1: function(object) {
    if (typeof object === "object" && object !== null && object.$isElement())
      if (object.parentNode === this)
        this._liblib2$_element.$$dom_removeChild$1(object);
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  getRange$2: function(start, rangeLength) {
    return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  clear$0: function() {
    this._liblib2$_element.textContent = "";
  },
  removeAt$1: function(index) {
    var result = this.$index(index);
    if (!(result == null))
      this._liblib2$_element.$$dom_removeChild$1(result);
    return result;
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      this._liblib2$_element.$$dom_removeChild$1(t1);
    return t1;
  },
  get$last: function() {
    var result = this._liblib2$_element.lastElementChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._FrozenElementList = {"": "Object;_nodeList",
  contains$1: function(element) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if ($.$$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.isEmpty(this._nodeList);
  },
  get$length: function() {
    return $.length(this._nodeList);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    var t1 = this._nodeList;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout5(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout5: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  set$length: function(newLength) {
    $.length1(this._nodeList, newLength);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$iterator: function() {
    return $._FrozenElementListIterator$(this);
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  getRange$2: function(start, rangeLength) {
    return $._FrozenElementList$_wrap($.getRange(this._nodeList, start, rangeLength));
  },
  indexOf$2: function(element, start) {
    return $.indexOf(this._nodeList, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeAt$1: function(index) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$(""));
  },
  remove$1: function(element) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$last: function() {
    return $.last(this._nodeList);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._FrozenElementListIterator = {"": "Object;_liblib2$_list,_liblib2$_index,_current",
  moveNext$0: function() {
    var t1, t2, t3, t4;
    t1 = this._liblib2$_index;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout2(1, t1);
    ++t1;
    t2 = this._liblib2$_list;
    t3 = $.getInterceptor$JSStringJSArray(t2);
    t4 = t3.get$length(t2);
    if (typeof t4 !== "number")
      return this.moveNext$0$bailout2(2, t1, t2, t4, t3);
    if (t1 < t4) {
      this._current = t2.$index(t1);
      this._liblib2$_index = t1;
      return true;
    }
    this._liblib2$_index = t3.get$length(t2);
    this._current = null;
    return false;
  },
  moveNext$0$bailout2: function(state0, t1, t2, t4, t3) {
    switch (state0) {
      case 0:
        t1 = this._liblib2$_index;
      case 1:
        state0 = 0;
        t1 = $.$$add(t1, 1);
        t2 = this._liblib2$_list;
        t3 = $.getInterceptor$JSStringJSArray(t2);
        t4 = t3.get$length(t2);
      case 2:
        state0 = 0;
        if ($.$$lt(t1, t4) === true) {
          this._current = t2.$index(t1);
          this._liblib2$_index = t1;
          return true;
        }
        this._liblib2$_index = t3.get$length(t2);
        this._current = null;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$._ElementCssClassSet = {"": "CssClassSet;_liblib2$_element",
  readClasses$0: function() {
    var s, t1, t2, t3;
    s = $.Set_Set();
    for (t1 = $.iterator($.split(this._liblib2$_element.className, " ")), t2 = $.getInterceptor$JSArray(s); t1.moveNext$0() === true;) {
      t3 = $.trim(t1.get$current());
      if ($.isEmpty(t3) !== true)
        t2.add$1(s, t3);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var t1;
    $.List_List$from(s);
    t1 = $.join(s, " ");
    this._liblib2$_element.className = t1;
  }
};

$$.ElementEvents = {"": "Events;_ptr",
  get$click: function() {
    return this.$index("click");
  },
  get$copy: function() {
    return this.$index("copy");
  },
  copy$1: function(arg0) {
    return this.get$copy().call$1(arg0);
  },
  get$error: function() {
    return this.$index("error");
  },
  get$reset: function() {
    return this.$index("reset");
  },
  reset$0: function() {
    return this.get$reset().call$0();
  }
};

$$.EventSourceEvents = {"": "Events;_ptr",
  get$error: function() {
    return this.$index("error");
  }
};

$$.Events = {"": "Object;_ptr",
  $index: function(type) {
    return $.EventListenerList$(this._ptr, type);
  }
};

$$.EventListenerList = {"": "Object;_ptr,_type",
  add$2: function(listener, useCapture) {
    this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
    return this;
  },
  add$1: function(listener) {
    return this.add$2(listener, false);
  },
  remove$2: function(listener, useCapture) {
    this._ptr.$$dom_removeEventListener$3(this._type, listener, useCapture);
    return this;
  },
  remove$1: function(listener) {
    return this.remove$2(listener, false);
  }
};

$$.FileReaderEvents = {"": "Events;_ptr",
  get$error: function() {
    return this.$index("error");
  }
};

$$.FileWriterEvents = {"": "Events;_ptr",
  get$error: function() {
    return this.$index("error");
  }
};

$$.HttpRequestEvents = {"": "Events;_ptr",
  get$error: function() {
    return this.$index("error");
  }
};

$$.HttpRequestUploadEvents = {"": "Events;_ptr",
  get$error: function() {
    return this.$index("error");
  }
};

$$.InputElementEvents = {"": "ElementEvents;_ptr"};

$$.MediaElementEvents = {"": "ElementEvents;_ptr"};

$$.MediaStreamEvents = {"": "Events;_ptr"};

$$.MediaStreamTrackEvents = {"": "Events;_ptr"};

$$.MessagePortEvents = {"": "Events;_ptr"};

$$._ChildNodeListLazy = {"": "Object;_this",
  get$last: function() {
    var result = this._this.lastChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  add$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addLast$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable), t2 = this._this; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      this._this.$$dom_removeChild$1(t1);
    return t1;
  },
  removeAt$1: function(index) {
    var result = this.$index(index);
    if (!(result == null))
      this._this.$$dom_removeChild$1(result);
    return result;
  },
  remove$1: function(object) {
    if (!(typeof object === "object" && object !== null && object.$isNode()))
      return;
    if (!(this === object.parentNode))
      return;
    this._this.$$dom_removeChild$1(object);
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  clear$0: function() {
    this._this.textContent = "";
  },
  $indexSet: function(index, value) {
    this._this.$$dom_replaceChild$2(value, this.$index(index));
  },
  get$iterator: function() {
    return $.iterator(this._this.childNodes);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  get$length: function() {
    return $.length(this._this.childNodes);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot set length on immutable List."));
  },
  $index: function(index) {
    var t1 = this._this.childNodes;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout2(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout2: function(state0, index, t1) {
    return $.$$index(t1, index);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$.NotificationEvents = {"": "Events;_ptr",
  get$click: function() {
    return this.$index("click");
  },
  get$close: function() {
    return this.$index("close");
  },
  close$0: function() {
    return this.get$close().call$0();
  },
  get$error: function() {
    return this.$index("error");
  }
};

$$.RtcDataChannelEvents = {"": "Events;_ptr",
  get$close: function() {
    return this.$index("close");
  },
  close$0: function() {
    return this.get$close().call$0();
  },
  get$error: function() {
    return this.$index("error");
  }
};

$$.RtcPeerConnectionEvents = {"": "Events;_ptr"};

$$.SharedWorkerContextEvents = {"": "WorkerContextEvents;_ptr"};

$$.SpeechRecognitionEvents = {"": "Events;_ptr",
  get$error: function() {
    return this.$index("error");
  },
  get$start: function() {
    return this.$index("start");
  },
  start$1: function(arg0) {
    return this.get$start().call$1(arg0);
  }
};

$$.TextTrackEvents = {"": "Events;_ptr"};

$$.TextTrackCueEvents = {"": "Events;_ptr"};

$$.TextTrackListEvents = {"": "Events;_ptr"};

$$.WebSocketEvents = {"": "Events;_ptr",
  get$close: function() {
    return this.$index("close");
  },
  close$0: function() {
    return this.get$close().call$0();
  },
  get$error: function() {
    return this.$index("error");
  }
};

$$.WindowEvents = {"": "Events;_ptr",
  get$click: function() {
    return this.$index("click");
  },
  get$error: function() {
    return this.$index("error");
  },
  get$reset: function() {
    return this.$index("reset");
  },
  reset$0: function() {
    return this.get$reset().call$0();
  },
  get$resize: function() {
    return this.$index("resize");
  }
};

$$.WorkerEvents = {"": "AbstractWorkerEvents;_ptr"};

$$.WorkerContextEvents = {"": "Events;_ptr",
  get$error: function() {
    return this.$index("error");
  }
};

$$._FrameSetElementEvents = {"": "ElementEvents;_ptr",
  get$error: function() {
    return this.$index("error");
  },
  get$resize: function() {
    return this.$index("resize");
  }
};

$$._AttributeMap = {"": "Object;",
  clear$0: function() {
    for (var t1 = $.iterator(this.get$keys()); t1.moveNext$0() === true;)
      this.remove$1(t1.get$current());
  },
  forEach$1: function(f) {
    var t1, t2;
    for (t1 = $.iterator(this.get$keys()); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      f.call$2(t2, this.$index(t2));
    }
  },
  get$keys: function() {
    var attributes, keys, len, i;
    attributes = this._liblib2$_element.attributes;
    if (typeof attributes !== "string" && (typeof attributes !== "object" || attributes === null || attributes.constructor !== Array && !attributes.$isJavaScriptIndexingBehavior()))
      return this.get$keys$bailout(1, attributes);
    keys = $.List_List(0);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw $.ioore(i);
      if (this._matches$1(attributes[i]) === true) {
        if (i >= attributes.length)
          throw $.ioore(i);
        keys.push(attributes[i].get$$$dom_localName());
      }
    }
    return keys;
  },
  get$keys$bailout: function(state0, attributes, t1, len, keys) {
    switch (state0) {
      case 0:
        attributes = this._liblib2$_element.attributes;
      case 1:
        state0 = 0;
        keys = $.List_List(0);
        t1 = $.getInterceptor$JSStringJSArray(attributes);
        len = t1.get$length(attributes);
      case 2:
        var i;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT.$lt(i, len); ++i)
          if (this._matches$1(t1.$index(attributes, i)) === true)
            keys.push(t1.$index(attributes, i).get$$$dom_localName());
        return keys;
    }
  },
  get$values: function() {
    var attributes, values, len, i;
    attributes = this._liblib2$_element.attributes;
    if (typeof attributes !== "string" && (typeof attributes !== "object" || attributes === null || attributes.constructor !== Array && !attributes.$isJavaScriptIndexingBehavior()))
      return this.get$values$bailout(1, attributes);
    values = $.List_List(0);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw $.ioore(i);
      if (this._matches$1(attributes[i]) === true) {
        if (i >= attributes.length)
          throw $.ioore(i);
        values.push(attributes[i].get$value());
      }
    }
    return values;
  },
  get$values$bailout: function(state0, attributes, t1, len, values) {
    switch (state0) {
      case 0:
        attributes = this._liblib2$_element.attributes;
      case 1:
        state0 = 0;
        values = $.List_List(0);
        t1 = $.getInterceptor$JSStringJSArray(attributes);
        len = t1.get$length(attributes);
      case 2:
        var i;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT.$lt(i, len); ++i)
          if (this._matches$1(t1.$index(attributes, i)) === true)
            values.push(t1.$index(attributes, i).get$value());
        return values;
    }
  },
  get$isEmpty: function() {
    var t1 = $.length(this);
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  $isMap: function() {
    return true;
  }
};

$$._ElementAttributeMap = {"": "_AttributeMap;_liblib2$_element",
  containsKey$1: function(key) {
    return this._liblib2$_element.$$dom_hasAttribute$1(key);
  },
  $index: function(key) {
    return this._liblib2$_element.$$dom_getAttribute$1(key);
  },
  $indexSet: function(key, value) {
    this._liblib2$_element.$$dom_setAttribute$2(key, $.S(value));
  },
  remove$1: function(key) {
    var t1, value;
    t1 = this._liblib2$_element;
    value = t1.$$dom_getAttribute$1(key);
    t1.$$dom_removeAttribute$1(key);
    return value;
  },
  get$length: function() {
    return $.length(this.get$keys());
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  _matches$1: function(node) {
    return node.get$$$dom_namespaceUri() == null;
  }
};

$$.CssClassSet = {"": "Object;",
  toString$0: function() {
    return $.Strings_join($.List_List$from(this.readClasses$0()), " ");
  },
  get$iterator: function() {
    return $.iterator(this.readClasses$0());
  },
  forEach$1: function(f) {
    $.forEach(this.readClasses$0(), f);
  },
  join$1: function(separator) {
    return $.join(this.readClasses$0(), separator);
  },
  where$1: function(f) {
    return $.where(this.readClasses$0(), f);
  },
  get$isEmpty: function() {
    return $.isEmpty(this.readClasses$0());
  },
  get$length: function() {
    return $.length(this.readClasses$0());
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  contains$1: function(value) {
    return $.contains0(this.readClasses$0(), value);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  add$1: function(value) {
    this._modify$1(new $.CssClassSet_add_anon(value));
  },
  remove$1: function(value) {
    var s, t1;
    if (!(typeof value === "string"))
      return false;
    s = this.readClasses$0();
    t1 = $.remove(s, value);
    this.writeClasses$1(s);
    return t1;
  },
  addAll$1: function(iterable) {
    this._modify$1(new $.CssClassSet_addAll_anon(iterable));
  },
  removeAll$1: function(iterable) {
    this._modify$1(new $.CssClassSet_removeAll_anon(iterable));
  },
  removeMatching$1: function(test) {
    this._modify$1(new $.CssClassSet_removeMatching_anon(test));
  },
  get$last: function() {
    return $.last(this.readClasses$0());
  },
  toList$0: function() {
    return $.toList(this.readClasses$0());
  },
  toSet$0: function() {
    return $.toSet(this.readClasses$0());
  },
  clear$0: function() {
    this._modify$1(new $.CssClassSet_clear_anon());
  },
  _modify$1: function(f) {
    var s = this.readClasses$0();
    f.call$1(s);
    this.writeClasses$1(s);
  },
  $isSet: true,
  $isCollection: function() {
    return true;
  }
};

$$._EventStream = {"": "Stream;_target,_eventType,_useCapture",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    return $._EventStreamSubscription$(this._target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  }
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._onData;
    if (!(t1 == null))
      this._target.$$dom_removeEventListener$3(this._eventType, t1, this._useCapture);
    this._target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._target == null;
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  _tryResume$0: function() {
    if (!(this._onData == null) && this.get$_paused() !== true)
      this._target.$$dom_addEventListener$3(this._eventType, this._onData, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._CustomEventStreamProvider = {"": "Object;_eventTypeGetter",
  _eventTypeGetter$1: function(arg0) {
    return this._eventTypeGetter.call$1(arg0);
  },
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventTypeGetter$1(e), useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$parent: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.parent);
  },
  close$0: function() {
    return this._window.close();
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    ++t1;
    t2 = this._length;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(2, t1, t2);
    if (t1 < t2) {
      t2 = this._array;
      if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, t1, t2);
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t2.length)
        throw $.ioore(t1);
      this._current = t2[t1];
      this._position = t1;
      return true;
    }
    this._current = null;
    this._position = t2;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        t1 = $.$$add(t1, 1);
        t2 = this._length;
      case 2:
        state0 = 0;
      case 3:
        if (state0 === 3 || state0 === 0 && $.$$lt(t1, t2) === true)
          switch (state0) {
            case 0:
              t2 = this._array;
            case 3:
              state0 = 0;
              this._current = $.$$index(t2, t1);
              this._position = t1;
              return true;
          }
        this._current = null;
        this._position = t2;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$.FilteredElementList = {"": "Object;_node,_childNodes",
  get$_filtered: function() {
    return $.List_List$from($.where(this._childNodes, new $.FilteredElementList__filtered_anon()));
  },
  forEach$1: function(f) {
    $.forEach(this.get$_filtered(), f);
  },
  $indexSet: function(index, value) {
    this.$index(index).replaceWith$1(value);
  },
  set$length: function(newLength) {
    var t1, t2;
    t1 = $.length(this);
    t2 = $.getInterceptor$JSNumber(newLength);
    if (t2.$ge(newLength, t1) === true)
      return;
    else if (t2.$lt(newLength, 0) === true)
      throw $.$$throw($.ArgumentError$("Invalid list length"));
    this.removeRange$2(newLength, $.$$sub(t1, newLength));
  },
  join$1: function(separator) {
    return $.join(this.get$_filtered(), separator);
  },
  add$1: function(value) {
    $.add(this._childNodes, value);
  },
  addAll$1: function(iterable) {
    var t1, t2, t3;
    for (t1 = $.iterator(iterable), t2 = this._childNodes, t3 = $.getInterceptor$JSArray(t2); t1.moveNext$0() === true;)
      t3.add$1(t2, t1.get$current());
  },
  addLast$1: function(value) {
    $.add(this._childNodes, value);
  },
  contains$1: function(element) {
    return typeof element === "object" && element !== null && element.$isElement() && $.contains0(this._childNodes, element) === true;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("TODO(jacobr): should we impl?"));
  },
  removeRange$2: function(start, rangeLength) {
    $.forEach($.getRange(this.get$_filtered(), start, rangeLength), new $.FilteredElementList_removeRange_anon());
  },
  clear$0: function() {
    $.clear(this._childNodes);
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      t1.remove$0();
    return t1;
  },
  where$1: function(f) {
    return $.where(this.get$_filtered(), f);
  },
  removeAt$1: function(index) {
    var result = this.$index(index);
    result.remove$0();
    return result;
  },
  remove$1: function(element) {
    var t1, i, indexElement;
    if (!(typeof element === "object" && element !== null && element.$isElement()))
      return;
    for (t1 = $.getInterceptor$JSStringJSArray(this), i = 0; $.CONSTANT.$lt(i, t1.get$length(this)); ++i) {
      indexElement = this.$index(i);
      if (indexElement === element) {
        indexElement.remove$0();
        return;
      }
    }
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.isEmpty(this.get$_filtered());
  },
  get$length: function() {
    return $.length(this.get$_filtered());
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    var t1 = this.get$_filtered();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout1(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout1: function(state0, index, t1) {
    return $.$$index(t1, index);
  },
  get$iterator: function() {
    return $.iterator(this.get$_filtered());
  },
  getRange$2: function(start, rangeLength) {
    return $.getRange(this.get$_filtered(), start, rangeLength);
  },
  indexOf$2: function(element, start) {
    return $.indexOf(this.get$_filtered(), element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    return $.last(this.get$_filtered());
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$.DatabaseEvents = {"": "Events;_ptr",
  get$error: function() {
    return this.$index("error");
  }
};

$$.OpenDBRequestEvents = {"": "RequestEvents;_ptr"};

$$.RequestEvents = {"": "Events;_ptr",
  get$error: function() {
    return this.$index("error");
  }
};

$$.TransactionEvents = {"": "Events;_ptr",
  get$complete: function() {
    return this.$index("complete");
  },
  complete$1: function(arg0) {
    return this.get$complete().call$1(arg0);
  },
  get$error: function() {
    return this.$index("error");
  }
};

$$.VersionChangeRequestEvents = {"": "RequestEvents;_ptr"};

$$._Random = {"": "Object;",
  nextInt$1: function(max) {
    if (max < 0)
      throw $.$$throw($.ArgumentError$("negative max: " + $.S(max)));
    if (max > 4294967295)
      max = 4294967295;
    return (Math.random() * max) >>> 0;
  },
  nextDouble$0: function() {
    return Math.random();
  }
};

$$.ElementInstanceEvents = {"": "Events;_ptr",
  get$click: function() {
    return this.$index("click");
  },
  get$copy: function() {
    return this.$index("copy");
  },
  copy$1: function(arg0) {
    return this.get$copy().call$1(arg0);
  },
  get$error: function() {
    return this.$index("error");
  },
  get$reset: function() {
    return this.$index("reset");
  },
  reset$0: function() {
    return this.get$reset().call$0();
  },
  get$resize: function() {
    return this.$index("resize");
  }
};

$$._AttributeClassSet = {"": "CssClassSet;_liblib4$_element",
  readClasses$0: function() {
    var t1, s, t2, t3;
    t1 = $.$$index(this._liblib4$_element.get$attributes(), "class");
    s = $.Set_Set();
    if (t1 == null)
      return s;
    for (t2 = $.iterator($.split(t1, " ")), t3 = $.getInterceptor$JSArray(s); t2.moveNext$0() === true;) {
      t1 = $.trim(t2.get$current());
      if ($.isEmpty(t1) !== true)
        t3.add$1(s, t1);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var list = $.List_List$from(s);
    $.$$indexSet(this._liblib4$_element.get$attributes(), "class", $.Strings_join(list, " "));
  }
};

$$.AudioContextEvents = {"": "Events;_ptr",
  get$complete: function() {
    return this.$index("complete");
  },
  complete$1: function(arg0) {
    return this.get$complete().call$1(arg0);
  }
};

$$.Camera = {"": "Object3D;matrixWorldInverse>,projectionMatrix>,near>,far>",
  lookAt$1: function(vector) {
    var t1 = this.matrix;
    t1.lookAt$3(this.position, vector, this.up);
    if (this.rotationAutoUpdate)
      this.rotation.setEulerFromRotationMatrix$2(t1, this.eulerOrder);
  },
  $isCamera: true
};

$$.PerspectiveCamera = {"": "Camera;fov>,aspect<,_fullWidth,_fullHeight,_x,_y,_width,_height,matrixWorldInverse,projectionMatrix,projectionMatrixInverse,near,far,id,name,properties,parent,children,up,position,rotation,scale,eulerOrder,_dynamic,doubleSided,flipSided,rotationAutoUpdate,renderDepth,matrix,matrixWorld,matrixRotationWorld,matrixAutoUpdate,matrixWorldNeedsUpdate,quaternion,useQuaternion,boundRadius,boundRadiusScale,visible,castShadow,receiveShadow,frustumCulled,_vector,__data",
  updateProjectionMatrix$0: function() {
    var t1, t2, t3, t4, t5, t6, aspect, t7, top, bottom, left, t8, height, t9, t10, t11, t12, t13;
    t1 = this._fullWidth;
    t2 = this.projectionMatrix;
    t3 = this.near;
    t4 = this.fov;
    t5 = this.far;
    if (!(t1 == null)) {
      t6 = this._fullHeight;
      aspect = $.CONSTANT.$div(t1, t6);
      t7 = Math.tan($.checkNum($.$$div($.$$mul(t4, 3.141592653589793), 360)));
      if (typeof t3 !== "number")
        throw $.iae(t3);
      top = t7 * t3;
      bottom = -top;
      t7 = $.getInterceptor$JSNumber(aspect);
      left = t7.$mul(aspect, bottom);
      t8 = $.abs($.$$sub(t7.$mul(aspect, top), left));
      height = $.CONSTANT5.abs$0(top - bottom);
      t9 = this._x;
      t10 = $.getInterceptor$JSNumber(left);
      t11 = t10.$add(left, $.$$div($.CONSTANT.$mul(t9, t8), t1));
      t10 = t10.$add(left, $.$$div($.$$mul($.CONSTANT.$add(t9, t8), t8), t1));
      t12 = this._y;
      t13 = $.$$div($.$$mul($.CONSTANT.$add(t12, height), height), t6);
      if (typeof t13 !== "number")
        throw $.iae(t13);
      t6 = $.$$div($.CONSTANT.$mul(t12, height), t6);
      if (typeof t6 !== "number")
        throw $.iae(t6);
      t2.makeFrustum$6(t11, t10, top - t13, top - t6, t3, t5);
    } else
      t2.makePerspective$4(t4, this.aspect, t3, t5);
  },
  PerspectiveCamera$4: function(fov, aspect, near, far) {
    this.updateProjectionMatrix$0();
  }
};

$$.Vector3 = {"": "Object;x=,y=,z=",
  setValues$3: function(x, y, z) {
    this.x = x;
    this.y = y;
    this.z = z;
    return this;
  },
  copy$1: function(v) {
    this.x = v.get$x();
    this.y = v.get$y();
    this.z = v.get$z();
    return this;
  },
  add$2: function(v1, v2) {
    this.x = $.$$add(v1.get$x(), v2.get$x());
    this.y = $.$$add(v1.get$y(), v2.get$y());
    this.z = $.$$add(v1.get$z(), v2.get$z());
    return this;
  },
  addSelf$1: function(v) {
    this.x = $.$$add(this.x, v.get$x());
    this.y = $.$$add(this.y, v.get$y());
    this.z = $.$$add(this.z, v.get$z());
    return this;
  },
  sub$2: function(v1, v2) {
    this.x = $.$$sub(v1.get$x(), v2.get$x());
    this.y = $.$$sub(v1.get$y(), v2.get$y());
    this.z = $.$$sub(v1.get$z(), v2.get$z());
    return this;
  },
  subSelf$1: function(v) {
    this.x = $.$$sub(this.x, v.get$x());
    this.y = $.$$sub(this.y, v.get$y());
    this.z = $.$$sub(this.z, v.get$z());
    return this;
  },
  multiply$2: function(a, b) {
    this.x = $.$$mul(a.get$x(), b.get$x());
    this.y = $.$$mul(a.get$y(), b.get$y());
    this.z = $.$$mul(a.get$z(), b.get$z());
    return this;
  },
  multiplyScalar$1: function(s) {
    var t1, t3, t5;
    if (typeof s !== "number")
      return this.multiplyScalar$1$bailout2(1, s);
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.multiplyScalar$1$bailout2(2, s, t1);
    this.x = t1 * s;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.multiplyScalar$1$bailout2(3, s, null, t3);
    this.y = t3 * s;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.multiplyScalar$1$bailout2(4, s, null, null, t5);
    this.z = t5 * s;
    return this;
  },
  multiplyScalar$1$bailout2: function(state0, s, t1, t3, t5) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.x;
      case 2:
        state0 = 0;
        this.x = $.$$mul(t1, s);
        t3 = this.y;
      case 3:
        state0 = 0;
        this.y = $.$$mul(t3, s);
        t5 = this.z;
      case 4:
        state0 = 0;
        this.z = $.$$mul(t5, s);
        return this;
    }
  },
  divideScalar$1: function(s) {
    if (!(s === 0)) {
      this.x = $.$$div(this.x, s);
      this.y = $.$$div(this.y, s);
      this.z = $.$$div(this.z, s);
    } else {
      this.x = 0;
      this.y = 0;
      this.z = 0;
    }
    return this;
  },
  negate$0: function() {
    var t1, t3, t5;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.negate$0$bailout0(1, t1);
    this.x = t1 * -1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.negate$0$bailout0(2, null, t3);
    this.y = t3 * -1;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.negate$0$bailout0(3, null, null, t5);
    this.z = t5 * -1;
    return this;
  },
  negate$0$bailout0: function(state0, t1, t3, t5) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        this.x = $.$$mul(t1, -1);
        t3 = this.y;
      case 2:
        state0 = 0;
        this.y = $.$$mul(t3, -1);
        t5 = this.z;
      case 3:
        state0 = 0;
        this.z = $.$$mul(t5, -1);
        return this;
    }
  },
  dot$1: function(v) {
    return $.$$add($.$$add($.$$mul(this.x, v.get$x()), $.$$mul(this.y, v.get$y())), $.$$mul(this.z, v.get$z()));
  },
  lengthSq$0: function() {
    var t1, t2, t3;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    return $.$$add(t1, $.$$mul(t3, t3));
  },
  length$0: function() {
    var t1, t3, t5;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.length$0$bailout(1, t1);
    t1 *= t1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.length$0$bailout(2, t1, t3);
    t1 += t3 * t3;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.length$0$bailout(3, t1, null, t5);
    return Math.sqrt($.checkNum(t1 + t5 * t5));
  },
  length$0$bailout: function(state0, t1, t3, t5) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t1 = $.$$mul(t1, t1);
        t3 = this.y;
      case 2:
        state0 = 0;
        t1 = $.$$add(t1, $.$$mul(t3, t3));
        t5 = this.z;
      case 3:
        state0 = 0;
        return Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t5, t5))));
    }
  },
  get$length: function() {
    return new $.BoundClosure3(this, "length$0");
  },
  normalize$0: function() {
    var t1, t2, t3;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    return this.divideScalar$1(Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t3, t3)))));
  },
  setLength$1: function(l) {
    var t1, t2, t3;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    return this.divideScalar$1(Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t3, t3))))).multiplyScalar$1(l);
  },
  lerpSelf$2: function(v, alpha) {
    var t1, t2, t3;
    t1 = this.x;
    this.x = $.$$add(t1, $.$$mul($.$$sub(v.get$x(), t1), alpha));
    t2 = this.y;
    this.y = $.$$add(t2, $.$$mul($.$$sub(v.get$y(), t2), alpha));
    t3 = this.z;
    this.z = $.$$add(t3, $.$$mul($.$$sub(v.get$z(), t3), alpha));
    return this;
  },
  cross$2: function(a, b) {
    this.x = $.$$sub($.$$mul(a.get$y(), b.get$z()), $.$$mul(a.get$z(), b.get$y()));
    this.y = $.$$sub($.$$mul(a.get$z(), b.get$x()), $.$$mul(a.get$x(), b.get$z()));
    this.z = $.$$sub($.$$mul(a.get$x(), b.get$y()), $.$$mul(a.get$y(), b.get$x()));
    return this;
  },
  crossSelf$1: function(v) {
    var x2, y2, z2, t1, t2, t3;
    x2 = this.x;
    y2 = this.y;
    z2 = this.z;
    t1 = $.getInterceptor$JSNumber(y2);
    t2 = $.getInterceptor$JSNumber(z2);
    this.x = $.$$sub(t1.$mul(y2, v.get$z()), t2.$mul(z2, v.get$y()));
    t3 = $.getInterceptor$JSNumber(x2);
    this.y = $.$$sub(t2.$mul(z2, v.get$x()), t3.$mul(x2, v.get$z()));
    this.z = $.$$sub(t3.$mul(x2, v.get$y()), t1.$mul(y2, v.get$x()));
    return this;
  },
  distanceToSquared$1: function(v) {
    return $.Vector3$(0, 0, 0).sub$2(this, v).lengthSq$0();
  },
  setEulerFromRotationMatrix$2: function(m, order) {
    var clamp, te, t1, m11, m12, m13, m21, m22, m23, m31, m32, m33;
    clamp = new $.Vector3_setEulerFromRotationMatrix_anon();
    te = m.get$elements();
    t1 = $.getInterceptor$JSStringJSArray(te);
    m11 = t1.$index(te, 0);
    m12 = t1.$index(te, 4);
    m13 = t1.$index(te, 8);
    m21 = t1.$index(te, 1);
    m22 = t1.$index(te, 5);
    m23 = t1.$index(te, 9);
    m31 = t1.$index(te, 2);
    m32 = t1.$index(te, 6);
    m33 = t1.$index(te, 10);
    t1 = $.getInterceptor(order);
    if (t1.$eq(order, "XYZ") === true) {
      this.y = Math.asin($.checkNum(clamp.call$1(m13)));
      if ($.$$lt($.abs(m13), 0.99999) === true) {
        this.x = Math.atan2($.checkNum($.$$negate(m23)), $.checkNum(m33));
        this.z = Math.atan2($.checkNum($.$$negate(m12)), $.checkNum(m11));
      } else {
        this.x = Math.atan2($.checkNum(m21), $.checkNum(m22));
        this.z = 0;
      }
    } else if (t1.$eq(order, "YXZ") === true) {
      this.x = Math.asin($.checkNum($.$$negate(clamp.call$1(m23))));
      if ($.$$lt($.abs(m23), 0.99999) === true) {
        this.y = Math.atan2($.checkNum(m13), $.checkNum(m33));
        this.z = Math.atan2($.checkNum(m21), $.checkNum(m22));
      } else {
        this.y = Math.atan2($.checkNum($.$$negate(m31)), $.checkNum(m11));
        this.z = 0;
      }
    } else if (t1.$eq(order, "ZXY") === true) {
      this.x = Math.asin($.checkNum(clamp.call$1(m32)));
      if ($.$$lt($.abs(m32), 0.99999) === true) {
        this.y = Math.atan2($.checkNum($.$$negate(m31)), $.checkNum(m33));
        this.z = Math.atan2($.checkNum($.$$negate(m12)), $.checkNum(m22));
      } else {
        this.y = 0;
        this.z = Math.atan2($.checkNum(m13), $.checkNum(m11));
      }
    } else if (t1.$eq(order, "ZYX") === true) {
      this.y = Math.asin($.checkNum($.$$negate(clamp.call$1(m31))));
      if ($.$$lt($.abs(m31), 0.99999) === true) {
        this.x = Math.atan2($.checkNum(m32), $.checkNum(m33));
        this.z = Math.atan2($.checkNum(m21), $.checkNum(m11));
      } else {
        this.x = 0;
        this.z = Math.atan2($.checkNum($.$$negate(m12)), $.checkNum(m22));
      }
    } else if (t1.$eq(order, "YZX") === true) {
      this.z = Math.asin($.checkNum(clamp.call$1(m21)));
      if ($.$$lt($.abs(m21), 0.99999) === true) {
        this.x = Math.atan2($.checkNum($.$$negate(m23)), $.checkNum(m22));
        this.y = Math.atan2($.checkNum($.$$negate(m31)), $.checkNum(m11));
      } else {
        this.x = 0;
        this.y = Math.atan2($.checkNum(m31), $.checkNum(m33));
      }
    } else if (t1.$eq(order, "XZY") === true) {
      this.z = Math.asin($.checkNum($.$$negate(clamp.call$1(m12))));
      if ($.$$lt($.abs(m12), 0.99999) === true) {
        this.x = Math.atan2($.checkNum(m32), $.checkNum(m22));
        this.y = Math.atan2($.checkNum(m13), $.checkNum(m11));
      } else {
        this.x = Math.atan2($.checkNum($.$$negate(m13)), $.checkNum(m33));
        this.y = 0;
      }
    }
    return this;
  },
  clone$0: function() {
    return $.Vector3$(this.x, this.y, this.z);
  },
  toString$0: function() {
    return "(" + $.S(this.x) + ", " + $.S(this.y) + ", " + $.S(this.z) + ")";
  }
};

$$.Matrix4 = {"": "Object;elements=",
  setValues$16: function(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
    var te, t1;
    te = this.elements;
    t1 = $.getInterceptor$JSArray(te);
    t1.$indexSet(te, 0, n11);
    t1.$indexSet(te, 4, n12);
    t1.$indexSet(te, 8, n13);
    t1.$indexSet(te, 12, n14);
    t1.$indexSet(te, 1, n21);
    t1.$indexSet(te, 5, n22);
    t1.$indexSet(te, 9, n23);
    t1.$indexSet(te, 13, n24);
    t1.$indexSet(te, 2, n31);
    t1.$indexSet(te, 6, n32);
    t1.$indexSet(te, 10, n33);
    t1.$indexSet(te, 14, n34);
    t1.$indexSet(te, 3, n41);
    t1.$indexSet(te, 7, n42);
    t1.$indexSet(te, 11, n43);
    t1.$indexSet(te, 15, n44);
    return this;
  },
  copy$1: function(m) {
    var me, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
    me = m.get$elements();
    if (typeof me !== "string" && (typeof me !== "object" || me === null || me.constructor !== Array && !me.$isJavaScriptIndexingBehavior()))
      return this.copy$1$bailout(1, me);
    t2 = me.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = me[0];
    if (4 >= t2)
      throw $.ioore(4);
    t4 = me[4];
    if (8 >= t2)
      throw $.ioore(8);
    t5 = me[8];
    if (12 >= t2)
      throw $.ioore(12);
    t6 = me[12];
    t7 = me[1];
    t8 = me[5];
    t9 = me[9];
    if (13 >= t2)
      throw $.ioore(13);
    t10 = me[13];
    t11 = me[2];
    t12 = me[6];
    t13 = me[10];
    if (14 >= t2)
      throw $.ioore(14);
    t14 = me[14];
    t15 = me[3];
    t16 = me[7];
    t17 = me[11];
    if (15 >= t2)
      throw $.ioore(15);
    this.setValues$16(t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, me[15]);
    return this;
  },
  copy$1$bailout: function(state0, me) {
    var t2 = $.getInterceptor$JSStringJSArray(me);
    this.setValues$16(t2.$index(me, 0), t2.$index(me, 4), t2.$index(me, 8), t2.$index(me, 12), t2.$index(me, 1), t2.$index(me, 5), t2.$index(me, 9), t2.$index(me, 13), t2.$index(me, 2), t2.$index(me, 6), t2.$index(me, 10), t2.$index(me, 14), t2.$index(me, 3), t2.$index(me, 7), t2.$index(me, 11), t2.$index(me, 15));
    return this;
  },
  lookAt$3: function(eye, center, up) {
    var te, x, y, z, t1;
    te = this.elements;
    if ($.Matrix4____v1 == null)
      $.Matrix4____v1 = $.Vector3$(0, 0, 0);
    x = $.Matrix4____v1;
    if ($.Matrix4____v2 == null)
      $.Matrix4____v2 = $.Vector3$(0, 0, 0);
    y = $.Matrix4____v2;
    if ($.Matrix4____v3 == null)
      $.Matrix4____v3 = $.Vector3$(0, 0, 0);
    z = $.Matrix4____v3;
    z.sub$2(eye, center).normalize$0();
    if ($.$$eq($.length0(z), 0) === true)
      z.set$z(1);
    x.cross$2(up, z).normalize$0();
    if ($.$$eq($.length0(x), 0) === true) {
      z.set$x($.$$add(z.get$x(), 0.0001));
      x.cross$2(up, z).normalize$0();
    }
    y.cross$2(z, x).normalize$0();
    t1 = $.getInterceptor$JSArray(te);
    t1.$indexSet(te, 0, x.get$x());
    t1.$indexSet(te, 4, y.get$x());
    t1.$indexSet(te, 8, z.get$x());
    t1.$indexSet(te, 1, x.get$y());
    t1.$indexSet(te, 5, y.get$y());
    t1.$indexSet(te, 9, z.get$y());
    t1.$indexSet(te, 2, x.get$z());
    t1.$indexSet(te, 6, y.get$z());
    t1.$indexSet(te, 10, z.get$z());
    return this;
  },
  multiply$2: function(a, b) {
    var ae, be, te, t1, a11, a12, a13, a14, a21, a22, a23, a24, a31, a32, a33, a34, a41, a42, a43, a44, b11, b12, b13, b14, b21, b22, b23, b24, b31, b32, b33, b34, b41, b42, b43, b44, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
    ae = a.get$elements();
    be = b.get$elements();
    te = this.elements;
    t1 = $.getInterceptor$JSStringJSArray(ae);
    a11 = t1.$index(ae, 0);
    a12 = t1.$index(ae, 4);
    a13 = t1.$index(ae, 8);
    a14 = t1.$index(ae, 12);
    a21 = t1.$index(ae, 1);
    a22 = t1.$index(ae, 5);
    a23 = t1.$index(ae, 9);
    a24 = t1.$index(ae, 13);
    a31 = t1.$index(ae, 2);
    a32 = t1.$index(ae, 6);
    a33 = t1.$index(ae, 10);
    a34 = t1.$index(ae, 14);
    a41 = t1.$index(ae, 3);
    a42 = t1.$index(ae, 7);
    a43 = t1.$index(ae, 11);
    a44 = t1.$index(ae, 15);
    t1 = $.getInterceptor$JSStringJSArray(be);
    b11 = t1.$index(be, 0);
    b12 = t1.$index(be, 4);
    b13 = t1.$index(be, 8);
    b14 = t1.$index(be, 12);
    b21 = t1.$index(be, 1);
    b22 = t1.$index(be, 5);
    b23 = t1.$index(be, 9);
    b24 = t1.$index(be, 13);
    b31 = t1.$index(be, 2);
    b32 = t1.$index(be, 6);
    b33 = t1.$index(be, 10);
    b34 = t1.$index(be, 14);
    b41 = t1.$index(be, 3);
    b42 = t1.$index(be, 7);
    b43 = t1.$index(be, 11);
    b44 = t1.$index(be, 15);
    t1 = $.getInterceptor$JSNumber(a11);
    t2 = $.getInterceptor$JSNumber(a12);
    t3 = $.getInterceptor$JSNumber(a13);
    t4 = $.getInterceptor$JSNumber(a14);
    t5 = $.getInterceptor$JSArray(te);
    t5.$indexSet(te, 0, $.$$add($.$$add($.$$add(t1.$mul(a11, b11), t2.$mul(a12, b21)), t3.$mul(a13, b31)), t4.$mul(a14, b41)));
    t5.$indexSet(te, 4, $.$$add($.$$add($.$$add(t1.$mul(a11, b12), t2.$mul(a12, b22)), t3.$mul(a13, b32)), t4.$mul(a14, b42)));
    t5.$indexSet(te, 8, $.$$add($.$$add($.$$add(t1.$mul(a11, b13), t2.$mul(a12, b23)), t3.$mul(a13, b33)), t4.$mul(a14, b43)));
    t5.$indexSet(te, 12, $.$$add($.$$add($.$$add(t1.$mul(a11, b14), t2.$mul(a12, b24)), t3.$mul(a13, b34)), t4.$mul(a14, b44)));
    t6 = $.getInterceptor$JSNumber(a21);
    t7 = $.getInterceptor$JSNumber(a22);
    t8 = $.getInterceptor$JSNumber(a23);
    t9 = $.getInterceptor$JSNumber(a24);
    t5.$indexSet(te, 1, $.$$add($.$$add($.$$add(t6.$mul(a21, b11), t7.$mul(a22, b21)), t8.$mul(a23, b31)), t9.$mul(a24, b41)));
    t5.$indexSet(te, 5, $.$$add($.$$add($.$$add(t6.$mul(a21, b12), t7.$mul(a22, b22)), t8.$mul(a23, b32)), t9.$mul(a24, b42)));
    t5.$indexSet(te, 9, $.$$add($.$$add($.$$add(t6.$mul(a21, b13), t7.$mul(a22, b23)), t8.$mul(a23, b33)), t9.$mul(a24, b43)));
    t5.$indexSet(te, 13, $.$$add($.$$add($.$$add(t6.$mul(a21, b14), t7.$mul(a22, b24)), t8.$mul(a23, b34)), t9.$mul(a24, b44)));
    t10 = $.getInterceptor$JSNumber(a31);
    t11 = $.getInterceptor$JSNumber(a32);
    t12 = $.getInterceptor$JSNumber(a33);
    t13 = $.getInterceptor$JSNumber(a34);
    t5.$indexSet(te, 2, $.$$add($.$$add($.$$add(t10.$mul(a31, b11), t11.$mul(a32, b21)), t12.$mul(a33, b31)), t13.$mul(a34, b41)));
    t5.$indexSet(te, 6, $.$$add($.$$add($.$$add(t10.$mul(a31, b12), t11.$mul(a32, b22)), t12.$mul(a33, b32)), t13.$mul(a34, b42)));
    t5.$indexSet(te, 10, $.$$add($.$$add($.$$add(t10.$mul(a31, b13), t11.$mul(a32, b23)), t12.$mul(a33, b33)), t13.$mul(a34, b43)));
    t5.$indexSet(te, 14, $.$$add($.$$add($.$$add(t10.$mul(a31, b14), t11.$mul(a32, b24)), t12.$mul(a33, b34)), t13.$mul(a34, b44)));
    t14 = $.getInterceptor$JSNumber(a41);
    t15 = $.getInterceptor$JSNumber(a42);
    t16 = $.getInterceptor$JSNumber(a43);
    t17 = $.getInterceptor$JSNumber(a44);
    t5.$indexSet(te, 3, $.$$add($.$$add($.$$add(t14.$mul(a41, b11), t15.$mul(a42, b21)), t16.$mul(a43, b31)), t17.$mul(a44, b41)));
    t5.$indexSet(te, 7, $.$$add($.$$add($.$$add(t14.$mul(a41, b12), t15.$mul(a42, b22)), t16.$mul(a43, b32)), t17.$mul(a44, b42)));
    t5.$indexSet(te, 11, $.$$add($.$$add($.$$add(t14.$mul(a41, b13), t15.$mul(a42, b23)), t16.$mul(a43, b33)), t17.$mul(a44, b43)));
    t5.$indexSet(te, 15, $.$$add($.$$add($.$$add(t14.$mul(a41, b14), t15.$mul(a42, b24)), t16.$mul(a43, b34)), t17.$mul(a44, b44)));
    return this;
  },
  multiplyScalar$1: function(s) {
    var te, t2, t3, t5, t7, t9, t11, t13, t15, t17, t19, t21, t23, t25, t27, t29, t31, t33;
    if (typeof s !== "number")
      return this.multiplyScalar$1$bailout(1, s);
    te = this.elements;
    if (typeof te !== "object" || te === null || (te.constructor !== Array || !!te.immutable$list) && !te.$isJavaScriptIndexingBehavior())
      return this.multiplyScalar$1$bailout(2, s, te);
    t2 = te.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = te[0];
    if (typeof t3 !== "number")
      return this.multiplyScalar$1$bailout(3, s, te, $.CONSTANT1, t3);
    te[0] = t3 * s;
    if (4 >= t2)
      throw $.ioore(4);
    t5 = te[4];
    if (typeof t5 !== "number")
      return this.multiplyScalar$1$bailout(4, s, te, $.CONSTANT1, null, t5);
    te[4] = t5 * s;
    if (8 >= t2)
      throw $.ioore(8);
    t7 = te[8];
    if (typeof t7 !== "number")
      return this.multiplyScalar$1$bailout(5, s, te, $.CONSTANT1, null, null, t7);
    te[8] = t7 * s;
    if (12 >= t2)
      throw $.ioore(12);
    t9 = te[12];
    if (typeof t9 !== "number")
      return this.multiplyScalar$1$bailout(6, s, te, $.CONSTANT1, null, null, null, t9);
    te[12] = t9 * s;
    t11 = te[1];
    if (typeof t11 !== "number")
      return this.multiplyScalar$1$bailout(7, s, te, $.CONSTANT1, null, null, null, null, t11);
    te[1] = t11 * s;
    t13 = te[5];
    if (typeof t13 !== "number")
      return this.multiplyScalar$1$bailout(8, s, te, $.CONSTANT1, null, null, null, null, null, t13);
    te[5] = t13 * s;
    t15 = te[9];
    if (typeof t15 !== "number")
      return this.multiplyScalar$1$bailout(9, s, te, $.CONSTANT1, null, null, null, null, null, null, t15);
    te[9] = t15 * s;
    if (13 >= t2)
      throw $.ioore(13);
    t17 = te[13];
    if (typeof t17 !== "number")
      return this.multiplyScalar$1$bailout(10, s, te, $.CONSTANT1, null, null, null, null, null, null, null, t17);
    te[13] = t17 * s;
    t19 = te[2];
    if (typeof t19 !== "number")
      return this.multiplyScalar$1$bailout(11, s, te, $.CONSTANT1, null, null, null, null, null, null, null, null, t19);
    te[2] = t19 * s;
    t21 = te[6];
    if (typeof t21 !== "number")
      return this.multiplyScalar$1$bailout(12, s, te, $.CONSTANT1, null, null, null, null, null, null, null, null, null, t21);
    te[6] = t21 * s;
    t23 = te[10];
    if (typeof t23 !== "number")
      return this.multiplyScalar$1$bailout(13, s, te, $.CONSTANT1, null, null, null, null, null, null, null, null, null, null, t23);
    te[10] = t23 * s;
    if (14 >= t2)
      throw $.ioore(14);
    t25 = te[14];
    if (typeof t25 !== "number")
      return this.multiplyScalar$1$bailout(14, s, te, $.CONSTANT1, null, null, null, null, null, null, null, null, null, null, null, t25);
    te[14] = t25 * s;
    t27 = te[3];
    if (typeof t27 !== "number")
      return this.multiplyScalar$1$bailout(15, s, te, $.CONSTANT1, null, null, null, null, null, null, null, null, null, null, null, null, t27);
    te[3] = t27 * s;
    t29 = te[7];
    if (typeof t29 !== "number")
      return this.multiplyScalar$1$bailout(16, s, te, $.CONSTANT1, null, null, null, null, null, null, null, null, null, null, null, null, null, t29);
    te[7] = t29 * s;
    t31 = te[11];
    if (typeof t31 !== "number")
      return this.multiplyScalar$1$bailout(17, s, te, $.CONSTANT1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t31);
    te[11] = t31 * s;
    if (15 >= t2)
      throw $.ioore(15);
    t33 = te[15];
    if (typeof t33 !== "number")
      return this.multiplyScalar$1$bailout(18, s, te, $.CONSTANT1, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, t33);
    te[15] = t33 * s;
    return this;
  },
  multiplyScalar$1$bailout: function(state0, s, te, t2, t3, t5, t7, t9, t11, t13, t15, t17, t19, t21, t23, t25, t27, t29, t31, t33) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        te = this.elements;
      case 2:
        state0 = 0;
        t2 = $.getInterceptor$JSStringJSArray(te);
        t3 = t2.$index(te, 0);
      case 3:
        state0 = 0;
        t2.$indexSet(te, 0, $.$$mul(t3, s));
        t5 = t2.$index(te, 4);
      case 4:
        state0 = 0;
        t2.$indexSet(te, 4, $.$$mul(t5, s));
        t7 = t2.$index(te, 8);
      case 5:
        state0 = 0;
        t2.$indexSet(te, 8, $.$$mul(t7, s));
        t9 = t2.$index(te, 12);
      case 6:
        state0 = 0;
        t2.$indexSet(te, 12, $.$$mul(t9, s));
        t11 = t2.$index(te, 1);
      case 7:
        state0 = 0;
        t2.$indexSet(te, 1, $.$$mul(t11, s));
        t13 = t2.$index(te, 5);
      case 8:
        state0 = 0;
        t2.$indexSet(te, 5, $.$$mul(t13, s));
        t15 = t2.$index(te, 9);
      case 9:
        state0 = 0;
        t2.$indexSet(te, 9, $.$$mul(t15, s));
        t17 = t2.$index(te, 13);
      case 10:
        state0 = 0;
        t2.$indexSet(te, 13, $.$$mul(t17, s));
        t19 = t2.$index(te, 2);
      case 11:
        state0 = 0;
        t2.$indexSet(te, 2, $.$$mul(t19, s));
        t21 = t2.$index(te, 6);
      case 12:
        state0 = 0;
        t2.$indexSet(te, 6, $.$$mul(t21, s));
        t23 = t2.$index(te, 10);
      case 13:
        state0 = 0;
        t2.$indexSet(te, 10, $.$$mul(t23, s));
        t25 = t2.$index(te, 14);
      case 14:
        state0 = 0;
        t2.$indexSet(te, 14, $.$$mul(t25, s));
        t27 = t2.$index(te, 3);
      case 15:
        state0 = 0;
        t2.$indexSet(te, 3, $.$$mul(t27, s));
        t29 = t2.$index(te, 7);
      case 16:
        state0 = 0;
        t2.$indexSet(te, 7, $.$$mul(t29, s));
        t31 = t2.$index(te, 11);
      case 17:
        state0 = 0;
        t2.$indexSet(te, 11, $.$$mul(t31, s));
        t33 = t2.$index(te, 15);
      case 18:
        state0 = 0;
        t2.$indexSet(te, 15, $.$$mul(t33, s));
        return this;
    }
  },
  multiplyVector3$1: function(v) {
    var te, vx, vy, vz, t5, t6, t7, t9, t11, t13, d, t15, t17, t19, t21, t23, t24, t26, t28, t30, t32, t33, t35, t37, t39;
    te = this.elements;
    if (typeof te !== "string" && (typeof te !== "object" || te === null || te.constructor !== Array && !te.$isJavaScriptIndexingBehavior()))
      return this.multiplyVector3$1$bailout(1, v, te);
    vx = v.get$x();
    if (typeof vx !== "number")
      return this.multiplyVector3$1$bailout(2, v, te, vx);
    vy = v.get$y();
    if (typeof vy !== "number")
      return this.multiplyVector3$1$bailout(3, v, te, vx, vy);
    vz = v.get$z();
    if (typeof vz !== "number")
      return this.multiplyVector3$1$bailout(4, v, te, vx, vy, vz);
    t5 = $.getInterceptor$JSStringJSArray(te);
    t6 = te.length;
    if (3 >= t6)
      throw $.ioore(3);
    t7 = te[3];
    if (typeof t7 !== "number")
      return this.multiplyVector3$1$bailout(5, v, te, vx, vy, vz, t5, t7);
    t7 *= vx;
    if (7 >= t6)
      throw $.ioore(7);
    t9 = te[7];
    if (typeof t9 !== "number")
      return this.multiplyVector3$1$bailout(6, v, te, vx, vy, vz, t5, t7, t9);
    t7 += t9 * vy;
    if (11 >= t6)
      throw $.ioore(11);
    t11 = te[11];
    if (typeof t11 !== "number")
      return this.multiplyVector3$1$bailout(7, v, te, vx, vy, vz, t5, t7, null, t11);
    t7 += t11 * vz;
    if (15 >= t6)
      throw $.ioore(15);
    t13 = te[15];
    if (typeof t13 !== "number")
      return this.multiplyVector3$1$bailout(8, v, te, vx, vy, vz, t5, t7, null, null, t13);
    d = 1 / (t7 + t13);
    t15 = te[0];
    if (typeof t15 !== "number")
      return this.multiplyVector3$1$bailout(10, v, te, vx, vy, vz, t5, t15, null, null, null, d);
    t15 *= vx;
    t17 = te[4];
    if (typeof t17 !== "number")
      return this.multiplyVector3$1$bailout(11, v, te, vx, vy, vz, t5, t15, null, null, null, d, t17);
    t15 += t17 * vy;
    t19 = te[8];
    if (typeof t19 !== "number")
      return this.multiplyVector3$1$bailout(12, v, te, vx, vy, vz, t5, t15, null, null, null, d, null, t19);
    t15 += t19 * vz;
    t21 = te[12];
    if (typeof t21 !== "number")
      return this.multiplyVector3$1$bailout(13, v, te, vx, vy, vz, t5, t15, null, null, null, d, null, null, t21);
    v.set$x((t15 + t21) * d);
    t23 = te.length;
    if (1 >= t23)
      throw $.ioore(1);
    t24 = te[1];
    if (typeof t24 !== "number")
      return this.multiplyVector3$1$bailout(14, v, te, vx, vy, vz, t5, null, null, null, null, d, null, null, null, t24);
    t24 *= vx;
    if (5 >= t23)
      throw $.ioore(5);
    t26 = te[5];
    if (typeof t26 !== "number")
      return this.multiplyVector3$1$bailout(15, v, te, vx, vy, vz, t5, null, null, null, null, d, null, null, null, t24, t26);
    t24 += t26 * vy;
    if (9 >= t23)
      throw $.ioore(9);
    t28 = te[9];
    if (typeof t28 !== "number")
      return this.multiplyVector3$1$bailout(16, v, te, vx, vy, vz, t5, null, null, null, null, d, null, null, null, t24, null, t28);
    t24 += t28 * vz;
    if (13 >= t23)
      throw $.ioore(13);
    t30 = te[13];
    if (typeof t30 !== "number")
      return this.multiplyVector3$1$bailout(17, v, te, vx, vy, vz, t5, null, null, null, null, d, null, null, null, t24, null, null, t30);
    v.set$y((t24 + t30) * d);
    t32 = te.length;
    if (2 >= t32)
      throw $.ioore(2);
    t33 = te[2];
    if (typeof t33 !== "number")
      return this.multiplyVector3$1$bailout(18, v, te, vx, vy, vz, t5, null, null, null, null, d, null, null, null, null, null, null, null, t33);
    t33 *= vx;
    if (6 >= t32)
      throw $.ioore(6);
    t35 = te[6];
    if (typeof t35 !== "number")
      return this.multiplyVector3$1$bailout(19, v, te, null, vy, vz, t5, null, null, null, null, d, null, null, null, null, null, null, null, t33, t35);
    t33 += t35 * vy;
    if (10 >= t32)
      throw $.ioore(10);
    t37 = te[10];
    if (typeof t37 !== "number")
      return this.multiplyVector3$1$bailout(20, v, te, null, null, vz, t5, null, null, null, null, d, null, null, null, null, null, null, null, t33, null, t37);
    t33 += t37 * vz;
    if (14 >= t32)
      throw $.ioore(14);
    t39 = te[14];
    if (typeof t39 !== "number")
      return this.multiplyVector3$1$bailout(21, v, null, null, null, null, t39, null, null, null, null, d, null, null, null, null, null, null, null, t33);
    v.set$z((t33 + t39) * d);
    return v;
  },
  multiplyVector3$1$bailout: function(state0, v, te, vx, vy, vz, t5, t6, t8, t10, t12, d, t15, t17, t19, t21, t23, t25, t27, t29, t31, t33) {
    switch (state0) {
      case 0:
        te = this.elements;
      case 1:
        state0 = 0;
        vx = v.get$x();
      case 2:
        state0 = 0;
        vy = v.get$y();
      case 3:
        state0 = 0;
        vz = v.get$z();
      case 4:
        state0 = 0;
        t5 = $.getInterceptor$JSStringJSArray(te);
        t6 = t5.$index(te, 3);
      case 5:
        state0 = 0;
        t6 = $.$$mul(t6, vx);
        t8 = t5.$index(te, 7);
      case 6:
        state0 = 0;
        t6 = $.$$add(t6, $.$$mul(t8, vy));
        t10 = t5.$index(te, 11);
      case 7:
        state0 = 0;
        t6 = $.$$add(t6, $.$$mul(t10, vz));
        t12 = t5.$index(te, 15);
      case 8:
        state0 = 0;
        t12 = $.$$add(t6, t12);
        if (typeof t12 !== "number")
          throw $.iae(t12);
        d = 1 / t12;
      case 9:
        state0 = 0;
        t6 = t5.$index(te, 0);
      case 10:
        state0 = 0;
        t6 = $.$$mul(t6, vx);
        t15 = t5.$index(te, 4);
      case 11:
        state0 = 0;
        t6 = $.$$add(t6, $.$$mul(t15, vy));
        t17 = t5.$index(te, 8);
      case 12:
        state0 = 0;
        t6 = $.$$add(t6, $.$$mul(t17, vz));
        t19 = t5.$index(te, 12);
      case 13:
        state0 = 0;
        v.set$x($.$$mul($.$$add(t6, t19), d));
        t21 = t5.$index(te, 1);
      case 14:
        state0 = 0;
        t21 = $.$$mul(t21, vx);
        t23 = t5.$index(te, 5);
      case 15:
        state0 = 0;
        t21 = $.$$add(t21, $.$$mul(t23, vy));
        t25 = t5.$index(te, 9);
      case 16:
        state0 = 0;
        t21 = $.$$add(t21, $.$$mul(t25, vz));
        t27 = t5.$index(te, 13);
      case 17:
        state0 = 0;
        v.set$y($.$$mul($.$$add(t21, t27), d));
        t29 = t5.$index(te, 2);
      case 18:
        state0 = 0;
        t29 = $.$$mul(t29, vx);
        t31 = t5.$index(te, 6);
      case 19:
        state0 = 0;
        t29 = $.$$add(t29, $.$$mul(t31, vy));
        t33 = t5.$index(te, 10);
      case 20:
        state0 = 0;
        t29 = $.$$add(t29, $.$$mul(t33, vz));
        t5 = t5.$index(te, 14);
      case 21:
        state0 = 0;
        v.set$z($.$$mul($.$$add(t29, t5), d));
        return v;
    }
  },
  multiplyVector4$1: function(v) {
    var te, vx, vy, vz, vw, t6, t7, t8, t10, t12, t14, t16, t17, t19, t21, t23, t25, t26, t28, t30, t32, t34, t35, t37, t39, t41;
    te = this.elements;
    if (typeof te !== "string" && (typeof te !== "object" || te === null || te.constructor !== Array && !te.$isJavaScriptIndexingBehavior()))
      return this.multiplyVector4$1$bailout(1, v, te);
    vx = v.get$x();
    if (typeof vx !== "number")
      return this.multiplyVector4$1$bailout(2, v, te, vx);
    vy = v.get$y();
    if (typeof vy !== "number")
      return this.multiplyVector4$1$bailout(3, v, te, vx, vy);
    vz = v.get$z();
    if (typeof vz !== "number")
      return this.multiplyVector4$1$bailout(4, v, te, vx, vy, vz);
    vw = v.get$w();
    if (typeof vw !== "number")
      return this.multiplyVector4$1$bailout(5, v, te, vx, vy, vz, vw);
    t6 = $.getInterceptor$JSStringJSArray(te);
    t7 = te.length;
    if (0 >= t7)
      throw $.ioore(0);
    t8 = te[0];
    if (typeof t8 !== "number")
      return this.multiplyVector4$1$bailout(6, v, te, vx, vy, vz, vw, t6, t8);
    t8 *= vx;
    if (4 >= t7)
      throw $.ioore(4);
    t10 = te[4];
    if (typeof t10 !== "number")
      return this.multiplyVector4$1$bailout(7, v, te, vx, vy, vz, vw, t6, t8, t10);
    t8 += t10 * vy;
    if (8 >= t7)
      throw $.ioore(8);
    t12 = te[8];
    if (typeof t12 !== "number")
      return this.multiplyVector4$1$bailout(8, v, te, vx, vy, vz, vw, t6, t8, null, t12);
    t8 += t12 * vz;
    if (12 >= t7)
      throw $.ioore(12);
    t14 = te[12];
    if (typeof t14 !== "number")
      return this.multiplyVector4$1$bailout(9, v, te, vx, vy, vz, vw, t6, t8, null, null, t14);
    v.set$x(t8 + t14 * vw);
    t16 = te.length;
    if (1 >= t16)
      throw $.ioore(1);
    t17 = te[1];
    if (typeof t17 !== "number")
      return this.multiplyVector4$1$bailout(10, v, te, vx, vy, vz, vw, t6, null, null, null, null, t17);
    t17 *= vx;
    if (5 >= t16)
      throw $.ioore(5);
    t19 = te[5];
    if (typeof t19 !== "number")
      return this.multiplyVector4$1$bailout(11, v, te, vx, vy, vz, vw, t6, null, null, null, null, t17, t19);
    t17 += t19 * vy;
    if (9 >= t16)
      throw $.ioore(9);
    t21 = te[9];
    if (typeof t21 !== "number")
      return this.multiplyVector4$1$bailout(12, v, te, vx, vy, vz, vw, t6, null, null, null, null, t17, null, t21);
    t17 += t21 * vz;
    if (13 >= t16)
      throw $.ioore(13);
    t23 = te[13];
    if (typeof t23 !== "number")
      return this.multiplyVector4$1$bailout(13, v, te, vx, vy, vz, vw, t6, null, null, null, null, t17, null, null, t23);
    v.set$y(t17 + t23 * vw);
    t25 = te.length;
    if (2 >= t25)
      throw $.ioore(2);
    t26 = te[2];
    if (typeof t26 !== "number")
      return this.multiplyVector4$1$bailout(14, v, te, vx, vy, vz, vw, t6, null, null, null, null, null, null, null, null, t26);
    t26 *= vx;
    if (6 >= t25)
      throw $.ioore(6);
    t28 = te[6];
    if (typeof t28 !== "number")
      return this.multiplyVector4$1$bailout(15, v, te, vx, vy, vz, vw, t6, null, null, null, null, null, null, null, null, t26, t28);
    t26 += t28 * vy;
    if (10 >= t25)
      throw $.ioore(10);
    t30 = te[10];
    if (typeof t30 !== "number")
      return this.multiplyVector4$1$bailout(16, v, te, vx, vy, vz, vw, t6, null, null, null, null, null, null, null, null, t26, null, t30);
    t26 += t30 * vz;
    if (14 >= t25)
      throw $.ioore(14);
    t32 = te[14];
    if (typeof t32 !== "number")
      return this.multiplyVector4$1$bailout(17, v, te, vx, vy, vz, vw, t6, null, null, null, null, null, null, null, null, t26, null, null, t32);
    v.set$z(t26 + t32 * vw);
    t34 = te.length;
    if (3 >= t34)
      throw $.ioore(3);
    t35 = te[3];
    if (typeof t35 !== "number")
      return this.multiplyVector4$1$bailout(18, v, te, vx, vy, vz, vw, t6, null, null, null, null, null, null, null, null, null, null, null, null, t35);
    t35 *= vx;
    if (7 >= t34)
      throw $.ioore(7);
    t37 = te[7];
    if (typeof t37 !== "number")
      return this.multiplyVector4$1$bailout(19, v, te, null, vy, vz, vw, t6, null, null, null, null, null, null, null, null, null, null, null, null, t35, t37);
    t35 += t37 * vy;
    if (11 >= t34)
      throw $.ioore(11);
    t39 = te[11];
    if (typeof t39 !== "number")
      return this.multiplyVector4$1$bailout(20, v, te, null, null, vz, vw, t6, null, null, null, null, null, null, null, null, null, null, null, null, t35, null, t39);
    t35 += t39 * vz;
    if (15 >= t34)
      throw $.ioore(15);
    t41 = te[15];
    if (typeof t41 !== "number")
      return this.multiplyVector4$1$bailout(21, v, null, null, null, null, vw, t41, null, null, null, null, null, null, null, null, null, null, null, null, t35);
    v.set$w(t35 + t41 * vw);
    return v;
  },
  multiplyVector4$1$bailout: function(state0, v, te, vx, vy, vz, vw, t6, t7, t9, t11, t13, t15, t17, t19, t21, t23, t25, t27, t29, t31, t33, t35) {
    switch (state0) {
      case 0:
        te = this.elements;
      case 1:
        state0 = 0;
        vx = v.get$x();
      case 2:
        state0 = 0;
        vy = v.get$y();
      case 3:
        state0 = 0;
        vz = v.get$z();
      case 4:
        state0 = 0;
        vw = v.get$w();
      case 5:
        state0 = 0;
        t6 = $.getInterceptor$JSStringJSArray(te);
        t7 = t6.$index(te, 0);
      case 6:
        state0 = 0;
        t7 = $.$$mul(t7, vx);
        t9 = t6.$index(te, 4);
      case 7:
        state0 = 0;
        t7 = $.$$add(t7, $.$$mul(t9, vy));
        t11 = t6.$index(te, 8);
      case 8:
        state0 = 0;
        t7 = $.$$add(t7, $.$$mul(t11, vz));
        t13 = t6.$index(te, 12);
      case 9:
        state0 = 0;
        v.set$x($.$$add(t7, $.$$mul(t13, vw)));
        t15 = t6.$index(te, 1);
      case 10:
        state0 = 0;
        t15 = $.$$mul(t15, vx);
        t17 = t6.$index(te, 5);
      case 11:
        state0 = 0;
        t15 = $.$$add(t15, $.$$mul(t17, vy));
        t19 = t6.$index(te, 9);
      case 12:
        state0 = 0;
        t15 = $.$$add(t15, $.$$mul(t19, vz));
        t21 = t6.$index(te, 13);
      case 13:
        state0 = 0;
        v.set$y($.$$add(t15, $.$$mul(t21, vw)));
        t23 = t6.$index(te, 2);
      case 14:
        state0 = 0;
        t23 = $.$$mul(t23, vx);
        t25 = t6.$index(te, 6);
      case 15:
        state0 = 0;
        t23 = $.$$add(t23, $.$$mul(t25, vy));
        t27 = t6.$index(te, 10);
      case 16:
        state0 = 0;
        t23 = $.$$add(t23, $.$$mul(t27, vz));
        t29 = t6.$index(te, 14);
      case 17:
        state0 = 0;
        v.set$z($.$$add(t23, $.$$mul(t29, vw)));
        t31 = t6.$index(te, 3);
      case 18:
        state0 = 0;
        t31 = $.$$mul(t31, vx);
        t33 = t6.$index(te, 7);
      case 19:
        state0 = 0;
        t31 = $.$$add(t31, $.$$mul(t33, vy));
        t35 = t6.$index(te, 11);
      case 20:
        state0 = 0;
        t31 = $.$$add(t31, $.$$mul(t35, vz));
        t6 = t6.$index(te, 15);
      case 21:
        state0 = 0;
        v.set$w($.$$add(t31, $.$$mul(t6, vw)));
        return v;
    }
  },
  determinant$0: function() {
    var te, t1, n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44, t2, t3, t4;
    te = this.elements;
    t1 = $.getInterceptor$JSStringJSArray(te);
    n11 = t1.$index(te, 0);
    n12 = t1.$index(te, 4);
    n13 = t1.$index(te, 8);
    n14 = t1.$index(te, 12);
    n21 = t1.$index(te, 1);
    n22 = t1.$index(te, 5);
    n23 = t1.$index(te, 9);
    n24 = t1.$index(te, 13);
    n31 = t1.$index(te, 2);
    n32 = t1.$index(te, 6);
    n33 = t1.$index(te, 10);
    n34 = t1.$index(te, 14);
    n41 = t1.$index(te, 3);
    n42 = t1.$index(te, 7);
    n43 = t1.$index(te, 11);
    n44 = t1.$index(te, 15);
    t1 = $.getInterceptor$JSNumber(n14);
    t2 = $.getInterceptor$JSNumber(n13);
    t3 = $.getInterceptor$JSNumber(n12);
    t4 = $.getInterceptor$JSNumber(n11);
    return $.$$add($.$$sub($.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul($.$$mul(t1.$mul(n14, n23), n32), n41), $.$$mul($.$$mul(t2.$mul(n13, n24), n32), n41)), $.$$mul($.$$mul(t1.$mul(n14, n22), n33), n41)), $.$$mul($.$$mul(t3.$mul(n12, n24), n33), n41)), $.$$mul($.$$mul(t2.$mul(n13, n22), n34), n41)), $.$$mul($.$$mul(t3.$mul(n12, n23), n34), n41)), $.$$mul($.$$mul(t1.$mul(n14, n23), n31), n42)), $.$$mul($.$$mul(t2.$mul(n13, n24), n31), n42)), $.$$mul($.$$mul(t1.$mul(n14, n21), n33), n42)), $.$$mul($.$$mul(t4.$mul(n11, n24), n33), n42)), $.$$mul($.$$mul(t2.$mul(n13, n21), n34), n42)), $.$$mul($.$$mul(t4.$mul(n11, n23), n34), n42)), $.$$mul($.$$mul(t1.$mul(n14, n22), n31), n43)), $.$$mul($.$$mul(t3.$mul(n12, n24), n31), n43)), $.$$mul($.$$mul(t1.$mul(n14, n21), n32), n43)), $.$$mul($.$$mul(t4.$mul(n11, n24), n32), n43)), $.$$mul($.$$mul(t3.$mul(n12, n21), n34), n43)), $.$$mul($.$$mul(t4.$mul(n11, n22), n34), n43)), $.$$mul($.$$mul(t2.$mul(n13, n22), n31), n44)), $.$$mul($.$$mul(t3.$mul(n12, n23), n31), n44)), $.$$mul($.$$mul(t2.$mul(n13, n21), n32), n44)), $.$$mul($.$$mul(t4.$mul(n11, n23), n32), n44)), $.$$mul($.$$mul(t3.$mul(n12, n21), n33), n44)), $.$$mul($.$$mul(t4.$mul(n11, n22), n33), n44));
  },
  getPosition$0: function() {
    var t1, t2, t4, t5;
    if ($.Matrix4____v1 == null)
      $.Matrix4____v1 = $.Vector3$(0, 0, 0);
    t1 = $.Matrix4____v1;
    t2 = this.elements;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.getPosition$0$bailout(1, t2, t1);
    if (12 >= t2.length)
      throw $.ioore(12);
    t4 = t2[12];
    if (13 >= t2.length)
      throw $.ioore(13);
    t5 = t2[13];
    if (14 >= t2.length)
      throw $.ioore(14);
    return t1.setValues$3(t4, t5, t2[14]);
  },
  getPosition$0$bailout: function(state0, t2, t1, t4, t6) {
    switch (state0) {
      case 0:
        if ($.Matrix4____v1 == null)
          $.Matrix4____v1 = $.Vector3$(0, 0, 0);
        t1 = $.Matrix4____v1;
        t2 = this.elements;
      case 1:
        state0 = 0;
        t2 = $.$$index(t2, 12);
        t4 = this.elements;
      case 2:
        state0 = 0;
        t4 = $.$$index(t4, 13);
        t6 = this.elements;
      case 3:
        state0 = 0;
        return t1.setValues$3(t2, t4, $.$$index(t6, 14));
    }
  },
  setPosition$1: function(v) {
    var te, t1;
    te = this.elements;
    t1 = $.getInterceptor$JSArray(te);
    t1.$indexSet(te, 12, v.get$x());
    t1.$indexSet(te, 13, v.get$y());
    t1.$indexSet(te, 14, v.get$z());
    return this;
  },
  getInverse$1: function(m) {
    var te, me, t1, n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44, t2, t3, t4, t5, t6, t7, t8, t9;
    te = this.elements;
    me = m.get$elements();
    t1 = $.getInterceptor$JSStringJSArray(me);
    n11 = t1.$index(me, 0);
    n12 = t1.$index(me, 4);
    n13 = t1.$index(me, 8);
    n14 = t1.$index(me, 12);
    n21 = t1.$index(me, 1);
    n22 = t1.$index(me, 5);
    n23 = t1.$index(me, 9);
    n24 = t1.$index(me, 13);
    n31 = t1.$index(me, 2);
    n32 = t1.$index(me, 6);
    n33 = t1.$index(me, 10);
    n34 = t1.$index(me, 14);
    n41 = t1.$index(me, 3);
    n42 = t1.$index(me, 7);
    n43 = t1.$index(me, 11);
    n44 = t1.$index(me, 15);
    t1 = $.getInterceptor$JSNumber(n23);
    t2 = $.getInterceptor$JSNumber(n24);
    t3 = $.getInterceptor$JSNumber(n22);
    t4 = $.getInterceptor$JSArray(te);
    t4.$indexSet(te, 0, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t1.$mul(n23, n34), n42), $.$$mul(t2.$mul(n24, n33), n42)), $.$$mul(t2.$mul(n24, n32), n43)), $.$$mul(t3.$mul(n22, n34), n43)), $.$$mul(t1.$mul(n23, n32), n44)), $.$$mul(t3.$mul(n22, n33), n44)));
    t5 = $.getInterceptor$JSNumber(n14);
    t6 = $.getInterceptor$JSNumber(n13);
    t7 = $.getInterceptor$JSNumber(n12);
    t4.$indexSet(te, 4, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t5.$mul(n14, n33), n42), $.$$mul(t6.$mul(n13, n34), n42)), $.$$mul(t5.$mul(n14, n32), n43)), $.$$mul(t7.$mul(n12, n34), n43)), $.$$mul(t6.$mul(n13, n32), n44)), $.$$mul(t7.$mul(n12, n33), n44)));
    t4.$indexSet(te, 8, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t6.$mul(n13, n24), n42), $.$$mul(t5.$mul(n14, n23), n42)), $.$$mul(t5.$mul(n14, n22), n43)), $.$$mul(t7.$mul(n12, n24), n43)), $.$$mul(t6.$mul(n13, n22), n44)), $.$$mul(t7.$mul(n12, n23), n44)));
    t4.$indexSet(te, 12, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t5.$mul(n14, n23), n32), $.$$mul(t6.$mul(n13, n24), n32)), $.$$mul(t5.$mul(n14, n22), n33)), $.$$mul(t7.$mul(n12, n24), n33)), $.$$mul(t6.$mul(n13, n22), n34)), $.$$mul(t7.$mul(n12, n23), n34)));
    t8 = $.getInterceptor$JSNumber(n21);
    t4.$indexSet(te, 1, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t2.$mul(n24, n33), n41), $.$$mul(t1.$mul(n23, n34), n41)), $.$$mul(t2.$mul(n24, n31), n43)), $.$$mul(t8.$mul(n21, n34), n43)), $.$$mul(t1.$mul(n23, n31), n44)), $.$$mul(t8.$mul(n21, n33), n44)));
    t9 = $.getInterceptor$JSNumber(n11);
    t4.$indexSet(te, 5, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t6.$mul(n13, n34), n41), $.$$mul(t5.$mul(n14, n33), n41)), $.$$mul(t5.$mul(n14, n31), n43)), $.$$mul(t9.$mul(n11, n34), n43)), $.$$mul(t6.$mul(n13, n31), n44)), $.$$mul(t9.$mul(n11, n33), n44)));
    t4.$indexSet(te, 9, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t5.$mul(n14, n23), n41), $.$$mul(t6.$mul(n13, n24), n41)), $.$$mul(t5.$mul(n14, n21), n43)), $.$$mul(t9.$mul(n11, n24), n43)), $.$$mul(t6.$mul(n13, n21), n44)), $.$$mul(t9.$mul(n11, n23), n44)));
    t4.$indexSet(te, 13, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t6.$mul(n13, n24), n31), $.$$mul(t5.$mul(n14, n23), n31)), $.$$mul(t5.$mul(n14, n21), n33)), $.$$mul(t9.$mul(n11, n24), n33)), $.$$mul(t6.$mul(n13, n21), n34)), $.$$mul(t9.$mul(n11, n23), n34)));
    t4.$indexSet(te, 2, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t3.$mul(n22, n34), n41), $.$$mul(t2.$mul(n24, n32), n41)), $.$$mul(t2.$mul(n24, n31), n42)), $.$$mul(t8.$mul(n21, n34), n42)), $.$$mul(t3.$mul(n22, n31), n44)), $.$$mul(t8.$mul(n21, n32), n44)));
    t4.$indexSet(te, 6, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t5.$mul(n14, n32), n41), $.$$mul(t7.$mul(n12, n34), n41)), $.$$mul(t5.$mul(n14, n31), n42)), $.$$mul(t9.$mul(n11, n34), n42)), $.$$mul(t7.$mul(n12, n31), n44)), $.$$mul(t9.$mul(n11, n32), n44)));
    t4.$indexSet(te, 10, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t7.$mul(n12, n24), n41), $.$$mul(t5.$mul(n14, n22), n41)), $.$$mul(t5.$mul(n14, n21), n42)), $.$$mul(t9.$mul(n11, n24), n42)), $.$$mul(t7.$mul(n12, n21), n44)), $.$$mul(t9.$mul(n11, n22), n44)));
    t4.$indexSet(te, 14, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t5.$mul(n14, n22), n31), $.$$mul(t7.$mul(n12, n24), n31)), $.$$mul(t5.$mul(n14, n21), n32)), $.$$mul(t9.$mul(n11, n24), n32)), $.$$mul(t7.$mul(n12, n21), n34)), $.$$mul(t9.$mul(n11, n22), n34)));
    t4.$indexSet(te, 3, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t1.$mul(n23, n32), n41), $.$$mul(t3.$mul(n22, n33), n41)), $.$$mul(t1.$mul(n23, n31), n42)), $.$$mul(t8.$mul(n21, n33), n42)), $.$$mul(t3.$mul(n22, n31), n43)), $.$$mul(t8.$mul(n21, n32), n43)));
    t4.$indexSet(te, 7, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t7.$mul(n12, n33), n41), $.$$mul(t6.$mul(n13, n32), n41)), $.$$mul(t6.$mul(n13, n31), n42)), $.$$mul(t9.$mul(n11, n33), n42)), $.$$mul(t7.$mul(n12, n31), n43)), $.$$mul(t9.$mul(n11, n32), n43)));
    t4.$indexSet(te, 11, $.$$sub($.$$add($.$$add($.$$sub($.$$sub($.$$mul(t6.$mul(n13, n22), n41), $.$$mul(t7.$mul(n12, n23), n41)), $.$$mul(t6.$mul(n13, n21), n42)), $.$$mul(t9.$mul(n11, n23), n42)), $.$$mul(t7.$mul(n12, n21), n43)), $.$$mul(t9.$mul(n11, n22), n43)));
    t4.$indexSet(te, 15, $.$$add($.$$sub($.$$sub($.$$add($.$$sub($.$$mul(t7.$mul(n12, n23), n31), $.$$mul(t6.$mul(n13, n22), n31)), $.$$mul(t6.$mul(n13, n21), n32)), $.$$mul(t9.$mul(n11, n23), n32)), $.$$mul(t7.$mul(n12, n21), n33)), $.$$mul(t9.$mul(n11, n22), n33)));
    t4 = m.determinant$0();
    if (typeof t4 !== "number")
      throw $.iae(t4);
    this.multiplyScalar$1(1 / t4);
    return this;
  },
  setRotationFromEuler$2: function(v, order) {
    var te, x, y, z, a, b, c, d, e, f, t1, t2, t3, ce, cf, de, df, t4, af, be, bf, ad, bc, bd;
    te = this.elements;
    x = v.get$x();
    y = v.get$y();
    z = v.get$z();
    a = Math.cos($.checkNum(x));
    b = Math.sin($.checkNum(x));
    c = Math.cos($.checkNum(y));
    d = Math.sin($.checkNum(y));
    e = Math.cos($.checkNum(z));
    f = Math.sin($.checkNum(z));
    t1 = a * e;
    t2 = $.getInterceptor$JSArray(te);
    t3 = a * c;
    ce = c * e;
    switch (order) {
      case "YXZ":
        cf = c * f;
        de = d * e;
        df = d * f;
        t2.$indexSet(te, 0, ce + df * b);
        t2.$indexSet(te, 4, de * b - cf);
        t2.$indexSet(te, 8, a * d);
        t2.$indexSet(te, 1, a * f);
        t2.$indexSet(te, 5, t1);
        t2.$indexSet(te, 9, -b);
        t2.$indexSet(te, 2, cf * b - de);
        t2.$indexSet(te, 6, df + ce * b);
        t2.$indexSet(te, 10, t3);
        break;
      case "ZXY":
        cf = c * f;
        de = d * e;
        df = d * f;
        t2.$indexSet(te, 0, ce - df * b);
        t4 = -a;
        t2.$indexSet(te, 4, t4 * f);
        t2.$indexSet(te, 8, de + cf * b);
        t2.$indexSet(te, 1, cf + de * b);
        t2.$indexSet(te, 5, t1);
        t2.$indexSet(te, 9, df - ce * b);
        t2.$indexSet(te, 2, t4 * d);
        t2.$indexSet(te, 6, b);
        t2.$indexSet(te, 10, t3);
        break;
      case "ZYX":
        af = a * f;
        be = b * e;
        bf = b * f;
        t2.$indexSet(te, 0, ce);
        t2.$indexSet(te, 4, be * d - af);
        t2.$indexSet(te, 8, t1 * d + bf);
        t2.$indexSet(te, 1, c * f);
        t2.$indexSet(te, 5, bf * d + t1);
        t2.$indexSet(te, 9, af * d - be);
        t2.$indexSet(te, 2, -d);
        t2.$indexSet(te, 6, b * c);
        t2.$indexSet(te, 10, t3);
        break;
      case "YZX":
        ad = a * d;
        bc = b * c;
        bd = b * d;
        t2.$indexSet(te, 0, ce);
        t2.$indexSet(te, 4, bd - t3 * f);
        t2.$indexSet(te, 8, bc * f + ad);
        t2.$indexSet(te, 1, f);
        t2.$indexSet(te, 5, t1);
        t2.$indexSet(te, 9, -b * e);
        t2.$indexSet(te, 2, -d * e);
        t2.$indexSet(te, 6, ad * f + bc);
        t2.$indexSet(te, 10, t3 - bd * f);
        break;
      case "XZY":
        ad = a * d;
        bc = b * c;
        bd = b * d;
        t2.$indexSet(te, 0, ce);
        t2.$indexSet(te, 4, -f);
        t2.$indexSet(te, 8, d * e);
        t2.$indexSet(te, 1, t3 * f + bd);
        t2.$indexSet(te, 5, t1);
        t2.$indexSet(te, 9, ad * f - bc);
        t2.$indexSet(te, 2, bc * f - ad);
        t2.$indexSet(te, 6, b * e);
        t2.$indexSet(te, 10, bd * f + t3);
        break;
      default:
        af = a * f;
        be = b * e;
        bf = b * f;
        t2.$indexSet(te, 0, ce);
        t2.$indexSet(te, 4, -c * f);
        t2.$indexSet(te, 8, d);
        t2.$indexSet(te, 1, af + be * d);
        t2.$indexSet(te, 5, t1 - bf * d);
        t2.$indexSet(te, 9, -b * c);
        t2.$indexSet(te, 2, bf - t1 * d);
        t2.$indexSet(te, 6, be + af * d);
        t2.$indexSet(te, 10, t3);
        break;
    }
    return this;
  },
  setRotationFromQuaternion$1: function(q) {
    var te, x, y, z, w, t1, x2, t2, y2, t3, z2, xx, xy, xz, yy, yz, zz, wx, wy, wz, t4, t5, t6, t7;
    te = this.elements;
    x = q.x;
    y = q.y;
    z = q.z;
    w = q.w;
    t1 = $.getInterceptor$JSNumber(x);
    x2 = t1.$add(x, x);
    t2 = $.getInterceptor$JSNumber(y);
    y2 = t2.$add(y, y);
    t3 = $.getInterceptor$JSNumber(z);
    z2 = t3.$add(z, z);
    xx = t1.$mul(x, x2);
    xy = t1.$mul(x, y2);
    xz = t1.$mul(x, z2);
    yy = t2.$mul(y, y2);
    yz = t2.$mul(y, z2);
    zz = t3.$mul(z, z2);
    t3 = $.getInterceptor$JSNumber(w);
    wx = t3.$mul(w, x2);
    wy = t3.$mul(w, y2);
    wz = t3.$mul(w, z2);
    t3 = $.$$add(yy, zz);
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t2 = $.getInterceptor$JSArray(te);
    t2.$indexSet(te, 0, 1 - t3);
    t1 = $.getInterceptor$JSNumber(xy);
    t2.$indexSet(te, 4, t1.$sub(xy, wz));
    t4 = $.getInterceptor$JSNumber(xz);
    t2.$indexSet(te, 8, t4.$add(xz, wy));
    t2.$indexSet(te, 1, t1.$add(xy, wz));
    t5 = $.getInterceptor$JSNumber(xx);
    t6 = t5.$add(xx, zz);
    if (typeof t6 !== "number")
      throw $.iae(t6);
    t2.$indexSet(te, 5, 1 - t6);
    t7 = $.getInterceptor$JSNumber(yz);
    t2.$indexSet(te, 9, t7.$sub(yz, wx));
    t2.$indexSet(te, 2, t4.$sub(xz, wy));
    t2.$indexSet(te, 6, t7.$add(yz, wx));
    t5 = t5.$add(xx, yy);
    if (typeof t5 !== "number")
      throw $.iae(t5);
    t2.$indexSet(te, 10, 1 - t5);
    return this;
  },
  extractRotation$1: function(m) {
    var te, me, vector, t1, t2, scaleX, scaleY, scaleZ;
    te = this.elements;
    me = m.get$elements();
    if ($.Matrix4____v1 == null)
      $.Matrix4____v1 = $.Vector3$(0, 0, 0);
    vector = $.Matrix4____v1;
    t1 = $.getInterceptor$JSStringJSArray(me);
    t2 = $.length0(vector.setValues$3(t1.$index(me, 0), t1.$index(me, 1), t1.$index(me, 2)));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    scaleX = 1 / t2;
    t2 = $.length0(vector.setValues$3(t1.$index(me, 4), t1.$index(me, 5), t1.$index(me, 6)));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    scaleY = 1 / t2;
    t2 = $.length0(vector.setValues$3(t1.$index(me, 8), t1.$index(me, 9), t1.$index(me, 10)));
    if (typeof t2 !== "number")
      throw $.iae(t2);
    scaleZ = 1 / t2;
    t2 = $.getInterceptor$JSArray(te);
    t2.$indexSet(te, 0, $.$$mul(t1.$index(me, 0), scaleX));
    t2.$indexSet(te, 1, $.$$mul(t1.$index(me, 1), scaleX));
    t2.$indexSet(te, 2, $.$$mul(t1.$index(me, 2), scaleX));
    t2.$indexSet(te, 4, $.$$mul(t1.$index(me, 4), scaleY));
    t2.$indexSet(te, 5, $.$$mul(t1.$index(me, 5), scaleY));
    t2.$indexSet(te, 6, $.$$mul(t1.$index(me, 6), scaleY));
    t2.$indexSet(te, 8, $.$$mul(t1.$index(me, 8), scaleZ));
    t2.$indexSet(te, 9, $.$$mul(t1.$index(me, 9), scaleZ));
    t2.$indexSet(te, 10, $.$$mul(t1.$index(me, 10), scaleZ));
    return this;
  },
  scale$1: function(v) {
    var te, x, y, z, t1;
    te = this.elements;
    x = v.get$x();
    y = v.get$y();
    z = v.get$z();
    t1 = $.getInterceptor$JSStringJSArray(te);
    t1.$indexSet(te, 0, $.$$mul(t1.$index(te, 0), x));
    t1.$indexSet(te, 4, $.$$mul(t1.$index(te, 4), y));
    t1.$indexSet(te, 8, $.$$mul(t1.$index(te, 8), z));
    t1.$indexSet(te, 1, $.$$mul(t1.$index(te, 1), x));
    t1.$indexSet(te, 5, $.$$mul(t1.$index(te, 5), y));
    t1.$indexSet(te, 9, $.$$mul(t1.$index(te, 9), z));
    t1.$indexSet(te, 2, $.$$mul(t1.$index(te, 2), x));
    t1.$indexSet(te, 6, $.$$mul(t1.$index(te, 6), y));
    t1.$indexSet(te, 10, $.$$mul(t1.$index(te, 10), z));
    t1.$indexSet(te, 3, $.$$mul(t1.$index(te, 3), x));
    t1.$indexSet(te, 7, $.$$mul(t1.$index(te, 7), y));
    t1.$indexSet(te, 11, $.$$mul(t1.$index(te, 11), z));
    return this;
  },
  get$scale: function() {
    return new $.BoundClosure(this, "scale$1");
  },
  getMaxScaleOnAxis$0: function() {
    var te, t1;
    te = this.elements;
    t1 = $.getInterceptor$JSStringJSArray(te);
    return Math.sqrt($.checkNum($.max($.$$add($.$$add($.$$mul(t1.$index(te, 0), t1.$index(te, 0)), $.$$mul(t1.$index(te, 1), t1.$index(te, 1))), $.$$mul(t1.$index(te, 2), t1.$index(te, 2))), $.max($.$$add($.$$add($.$$mul(t1.$index(te, 4), t1.$index(te, 4)), $.$$mul(t1.$index(te, 5), t1.$index(te, 5))), $.$$mul(t1.$index(te, 6), t1.$index(te, 6))), $.$$add($.$$add($.$$mul(t1.$index(te, 8), t1.$index(te, 8)), $.$$mul(t1.$index(te, 9), t1.$index(te, 9))), $.$$mul(t1.$index(te, 10), t1.$index(te, 10)))))));
  },
  makeFrustum$6: function(left, right, bottom, top, near, far) {
    var te, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
    te = this.elements;
    if (typeof near !== "number")
      throw $.iae(near);
    t1 = 2 * near;
    t2 = $.getInterceptor$JSNumber(right);
    t3 = t2.$sub(right, left);
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t4 = $.getInterceptor$JSNumber(top);
    t5 = t4.$sub(top, bottom);
    if (typeof t5 !== "number")
      throw $.iae(t5);
    t6 = $.$$div(t2.$add(right, left), t2.$sub(right, left));
    t7 = $.$$div(t4.$add(top, bottom), t4.$sub(top, bottom));
    t8 = $.getInterceptor$JSNumber(far);
    t9 = $.$$div($.$$negate(t8.$add(far, near)), t8.$sub(far, near));
    if (typeof far !== "number")
      throw $.iae(far);
    t10 = $.getInterceptor$JSArray(te);
    t10.$indexSet(te, 0, t1 / t3);
    t10.$indexSet(te, 4, 0);
    t10.$indexSet(te, 8, t6);
    t10.$indexSet(te, 12, 0);
    t10.$indexSet(te, 1, 0);
    t10.$indexSet(te, 5, t1 / t5);
    t10.$indexSet(te, 9, t7);
    t10.$indexSet(te, 13, 0);
    t10.$indexSet(te, 2, 0);
    t10.$indexSet(te, 6, 0);
    t10.$indexSet(te, 10, t9);
    t10.$indexSet(te, 14, -2 * far * near / (far - near));
    t10.$indexSet(te, 3, 0);
    t10.$indexSet(te, 7, 0);
    t10.$indexSet(te, 11, -1);
    t10.$indexSet(te, 15, 0);
    return this;
  },
  makePerspective$4: function(fov, aspect, near, far) {
    var t1, t2, ymin;
    t1 = $.$$mul(near, Math.tan($.checkNum($.$$div($.$$mul(fov, 3.141592653589793), 360))));
    t2 = $.getInterceptor$JSNumber(t1);
    ymin = t2.$negate(t1);
    return this.makeFrustum$6($.$$mul(ymin, aspect), t2.$mul(t1, aspect), ymin, t1, near, far);
  },
  clone$0: function() {
    var te, t1;
    te = this.elements;
    t1 = $.getInterceptor$JSStringJSArray(te);
    return $.Matrix4$(t1.$index(te, 0), t1.$index(te, 4), t1.$index(te, 8), t1.$index(te, 12), t1.$index(te, 1), t1.$index(te, 5), t1.$index(te, 9), t1.$index(te, 13), t1.$index(te, 2), t1.$index(te, 6), t1.$index(te, 10), t1.$index(te, 14), t1.$index(te, 3), t1.$index(te, 7), t1.$index(te, 11), t1.$index(te, 15));
  },
  Matrix4$16: function(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
    this.setValues$16(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44);
  }
};

$$.Quaternion = {"": "Object;x=,y=,z=,w=",
  setValues$4: function(newX, newY, newZ, newW) {
    this.x = newX;
    this.y = newY;
    this.z = newZ;
    this.w = newW;
    return this;
  },
  copy$1: function(q) {
    this.x = q.get$x();
    this.y = q.get$y();
    this.z = q.get$z();
    this.w = q.get$w();
    return this;
  },
  setFromAxisAngle$2: function(axis, angle) {
    var halfAngle, s;
    halfAngle = angle / 2;
    s = Math.sin($.checkNum(halfAngle));
    this.x = $.$$mul(axis.get$x(), s);
    this.y = $.$$mul(axis.get$y(), s);
    this.z = $.$$mul(axis.get$z(), s);
    this.w = Math.cos($.checkNum(halfAngle));
    return this;
  },
  length$0: function() {
    var t1, t3, t5, t7;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.length$0$bailout1(1, t1);
    t1 *= t1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.length$0$bailout1(2, t1, t3);
    t1 += t3 * t3;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.length$0$bailout1(3, t1, null, t5);
    t1 += t5 * t5;
    t7 = this.w;
    if (typeof t7 !== "number")
      return this.length$0$bailout1(4, t1, null, null, t7);
    return Math.sqrt($.checkNum(t1 + t7 * t7));
  },
  length$0$bailout1: function(state0, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t1 = $.$$mul(t1, t1);
        t3 = this.y;
      case 2:
        state0 = 0;
        t1 = $.$$add(t1, $.$$mul(t3, t3));
        t5 = this.z;
      case 3:
        state0 = 0;
        t1 = $.$$add(t1, $.$$mul(t5, t5));
        t7 = this.w;
      case 4:
        state0 = 0;
        return Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t7, t7))));
    }
  },
  get$length: function() {
    return new $.BoundClosure3(this, "length$0");
  },
  normalize$0: function() {
    var t1, t2, t3, t4, l;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    t1 = $.$$add(t1, $.$$mul(t3, t3));
    t4 = this.w;
    l = Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t4, t4))));
    if (l === 0) {
      this.x = 0;
      this.y = 0;
      this.z = 0;
      this.w = 0;
    } else {
      l = 1 / l;
      this.x = $.$$mul(this.x, l);
      this.y = $.$$mul(this.y, l);
      this.z = $.$$mul(this.z, l);
      this.w = $.$$mul(this.w, l);
    }
    return this;
  },
  multiply$2: function(q1, q2) {
    this.x = $.$$add($.$$sub($.$$add($.$$mul(q1.get$x(), q2.get$w()), $.$$mul(q1.get$y(), q2.get$z())), $.$$mul(q1.get$z(), q2.get$y())), $.$$mul(q1.get$w(), q2.get$x()));
    this.y = $.$$add($.$$add($.$$add($.$$mul($.$$negate(q1.get$x()), q2.get$z()), $.$$mul(q1.get$y(), q2.get$w())), $.$$mul(q1.get$z(), q2.get$x())), $.$$mul(q1.get$w(), q2.get$y()));
    this.z = $.$$add($.$$add($.$$sub($.$$mul(q1.get$x(), q2.get$y()), $.$$mul(q1.get$y(), q2.get$x())), $.$$mul(q1.get$z(), q2.get$w())), $.$$mul(q1.get$w(), q2.get$z()));
    this.w = $.$$add($.$$sub($.$$sub($.$$mul($.$$negate(q1.get$x()), q2.get$x()), $.$$mul(q1.get$y(), q2.get$y())), $.$$mul(q1.get$z(), q2.get$z())), $.$$mul(q1.get$w(), q2.get$w()));
    return this;
  },
  multiplyVector3$2$dest: function(vec, dest) {
    var _x, _y, _z, qx, qy, qz, qw, t8, t9, t10, t11, t12, t13, t14;
    if (dest == null)
      dest = vec;
    _x = vec.get$x();
    if (typeof _x !== "number")
      return this.multiplyVector3$2$dest$bailout(1, vec, dest, _x);
    _y = vec.get$y();
    if (typeof _y !== "number")
      return this.multiplyVector3$2$dest$bailout(2, vec, dest, _x, _y);
    _z = vec.get$z();
    if (typeof _z !== "number")
      return this.multiplyVector3$2$dest$bailout(3, null, dest, _x, _y, _z);
    qx = this.x;
    if (typeof qx !== "number")
      return this.multiplyVector3$2$dest$bailout(4, null, dest, _x, _y, _z, qx);
    qy = this.y;
    if (typeof qy !== "number")
      return this.multiplyVector3$2$dest$bailout(5, null, dest, _x, _y, _z, qx, qy);
    qz = this.z;
    if (typeof qz !== "number")
      return this.multiplyVector3$2$dest$bailout(6, null, dest, _x, _y, _z, qx, qy, qz);
    qw = this.w;
    if (typeof qw !== "number")
      return this.multiplyVector3$2$dest$bailout(7, null, dest, _x, _y, _z, qx, qy, qz, qw);
    t8 = qw * _x + qy * _z - qz * _y;
    t9 = qw * _y + qz * _x - qx * _z;
    t10 = qw * _z + qx * _y - qy * _x;
    t11 = -qx;
    t12 = t11 * _x - qy * _y - qz * _z;
    t13 = -qz;
    t14 = -qy;
    dest.set$x(t8 * qw + t12 * t11 + t9 * t13 - t10 * t14);
    dest.set$y(t9 * qw + t12 * t14 + t10 * t11 - t8 * t13);
    dest.set$z(t10 * qw + t12 * t13 + t8 * t14 - t9 * t11);
    return dest;
  },
  multiplyVector3$2$dest$bailout: function(state0, vec, dest, _x, _y, _z, qx, qy, qz, qw) {
    switch (state0) {
      case 0:
        if (dest == null)
          dest = vec;
        _x = vec.get$x();
      case 1:
        state0 = 0;
        _y = vec.get$y();
      case 2:
        state0 = 0;
        _z = vec.get$z();
      case 3:
        state0 = 0;
        qx = this.x;
      case 4:
        state0 = 0;
        qy = this.y;
      case 5:
        state0 = 0;
        qz = this.z;
      case 6:
        state0 = 0;
        qw = this.w;
      case 7:
        var t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19;
        state0 = 0;
        t8 = $.getInterceptor$JSNumber(qw);
        t9 = $.getInterceptor$JSNumber(qy);
        t10 = $.getInterceptor$JSNumber(qz);
        t11 = $.$$sub($.$$add(t8.$mul(qw, _x), t9.$mul(qy, _z)), t10.$mul(qz, _y));
        t12 = $.getInterceptor$JSNumber(qx);
        t13 = $.$$sub($.$$add(t8.$mul(qw, _y), t10.$mul(qz, _x)), t12.$mul(qx, _z));
        t14 = $.$$sub($.$$add(t8.$mul(qw, _z), t12.$mul(qx, _y)), t9.$mul(qy, _x));
        t15 = $.$$sub($.$$sub($.$$mul(t12.$negate(qx), _x), t9.$mul(qy, _y)), t10.$mul(qz, _z));
        t16 = $.getInterceptor$JSNumber(t11);
        t17 = $.getInterceptor$JSNumber(t15);
        t18 = $.getInterceptor$JSNumber(t13);
        t19 = $.getInterceptor$JSNumber(t14);
        dest.set$x($.$$sub($.$$add($.$$add(t16.$mul(t11, qw), t17.$mul(t15, t12.$negate(qx))), t18.$mul(t13, t10.$negate(qz))), t19.$mul(t14, t9.$negate(qy))));
        dest.set$y($.$$sub($.$$add($.$$add(t18.$mul(t13, qw), t17.$mul(t15, t9.$negate(qy))), t19.$mul(t14, t12.$negate(qx))), t16.$mul(t11, t10.$negate(qz))));
        dest.set$z($.$$sub($.$$add($.$$add(t19.$mul(t14, qw), t17.$mul(t15, t10.$negate(qz))), t16.$mul(t11, t9.$negate(qy))), t18.$mul(t13, t12.$negate(qx))));
        return dest;
    }
  },
  multiplyVector3$1: function(vec) {
    return this.multiplyVector3$2$dest(vec, null);
  },
  clone$0: function() {
    return $.Quaternion$(this.x, this.y, this.z, this.w);
  },
  $isIVector4: true
};

$$.Vector4 = {"": "Object;x=,y=,z=,w=",
  setValues$4: function(x, y, z, w) {
    this.x = x;
    this.y = y;
    this.z = z;
    this.w = w;
    return this;
  },
  copy$1: function(v) {
    this.x = v.get$x();
    this.y = v.get$y();
    this.z = v.get$z();
    if (typeof v === "object" && v !== null && !!v.$isIVector4)
      this.w = v.get$w();
    else
      this.w = 1;
  },
  add$2: function(v1, v2) {
    this.x = $.$$add(v1.get$x(), v2.get$x());
    this.y = $.$$add(v1.get$y(), v2.get$y());
    this.z = $.$$add(v1.get$z(), v2.get$z());
    this.w = $.$$add(v1.get$w(), v2.get$w());
    return this;
  },
  addSelf$1: function(v) {
    this.x = $.$$add(this.x, v.get$x());
    this.y = $.$$add(this.y, v.get$y());
    this.z = $.$$add(this.z, v.get$z());
    this.w = $.$$add(this.w, v.get$w());
    return this;
  },
  sub$2: function(v1, v2) {
    this.x = $.$$sub(v1.get$x(), v2.get$x());
    this.y = $.$$sub(v1.get$y(), v2.get$y());
    this.z = $.$$sub(v1.get$z(), v2.get$z());
    this.w = $.$$sub(v1.get$w(), v2.get$w());
    return this;
  },
  subSelf$1: function(v) {
    this.x = $.$$sub(this.x, v.get$x());
    this.y = $.$$sub(this.y, v.get$y());
    this.z = $.$$sub(this.z, v.get$z());
    this.w = $.$$sub(this.w, v.get$w());
    return this;
  },
  multiplyScalar$1: function(s) {
    var t1, t3, t5, t7;
    if (typeof s !== "number")
      return this.multiplyScalar$1$bailout0(1, s);
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.multiplyScalar$1$bailout0(2, s, t1);
    this.x = t1 * s;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.multiplyScalar$1$bailout0(3, s, null, t3);
    this.y = t3 * s;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.multiplyScalar$1$bailout0(4, s, null, null, t5);
    this.z = t5 * s;
    t7 = this.w;
    if (typeof t7 !== "number")
      return this.multiplyScalar$1$bailout0(5, s, null, null, null, t7);
    this.w = t7 * s;
    return this;
  },
  multiplyScalar$1$bailout0: function(state0, s, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.x;
      case 2:
        state0 = 0;
        this.x = $.$$mul(t1, s);
        t3 = this.y;
      case 3:
        state0 = 0;
        this.y = $.$$mul(t3, s);
        t5 = this.z;
      case 4:
        state0 = 0;
        this.z = $.$$mul(t5, s);
        t7 = this.w;
      case 5:
        state0 = 0;
        this.w = $.$$mul(t7, s);
        return this;
    }
  },
  divideScalar$1: function(s) {
    this.x = $.$$div(this.x, s);
    this.y = $.$$div(this.y, s);
    this.z = $.$$div(this.z, s);
    this.w = $.$$div(this.w, s);
    return this;
  },
  negate$0: function() {
    var t1, t3, t5, t7;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.negate$0$bailout(1, t1);
    this.x = t1 * -1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.negate$0$bailout(2, null, t3);
    this.y = t3 * -1;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.negate$0$bailout(3, null, null, t5);
    this.z = t5 * -1;
    t7 = this.w;
    if (typeof t7 !== "number")
      return this.negate$0$bailout(4, null, null, null, t7);
    this.w = t7 * -1;
    return this;
  },
  negate$0$bailout: function(state0, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        this.x = $.$$mul(t1, -1);
        t3 = this.y;
      case 2:
        state0 = 0;
        this.y = $.$$mul(t3, -1);
        t5 = this.z;
      case 3:
        state0 = 0;
        this.z = $.$$mul(t5, -1);
        t7 = this.w;
      case 4:
        state0 = 0;
        this.w = $.$$mul(t7, -1);
        return this;
    }
  },
  dot$1: function(v) {
    return $.$$add($.$$add($.$$add($.$$mul(this.x, v.get$x()), $.$$mul(this.y, v.get$y())), $.$$mul(this.z, v.get$z())), $.$$mul(this.w, v.get$w()));
  },
  lengthSq$0: function() {
    var t1, t2, t3, t4;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    t1 = $.$$add(t1, $.$$mul(t3, t3));
    t4 = this.w;
    return $.$$add(t1, $.$$mul(t4, t4));
  },
  length$0: function() {
    var t1, t3, t5, t7;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.length$0$bailout2(1, t1);
    t1 *= t1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.length$0$bailout2(2, t1, t3);
    t1 += t3 * t3;
    t5 = this.z;
    if (typeof t5 !== "number")
      return this.length$0$bailout2(3, t1, null, t5);
    t1 += t5 * t5;
    t7 = this.w;
    if (typeof t7 !== "number")
      return this.length$0$bailout2(4, t1, null, null, t7);
    return Math.sqrt($.checkNum(t1 + t7 * t7));
  },
  length$0$bailout2: function(state0, t1, t3, t5, t7) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t1 = $.$$mul(t1, t1);
        t3 = this.y;
      case 2:
        state0 = 0;
        t1 = $.$$add(t1, $.$$mul(t3, t3));
        t5 = this.z;
      case 3:
        state0 = 0;
        t1 = $.$$add(t1, $.$$mul(t5, t5));
        t7 = this.w;
      case 4:
        state0 = 0;
        return Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t7, t7))));
    }
  },
  get$length: function() {
    return new $.BoundClosure3(this, "length$0");
  },
  normalize$0: function() {
    var t1, t2, t3, t4;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    t1 = $.$$add(t1, $.$$mul(t3, t3));
    t4 = this.w;
    return this.divideScalar$1(Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t4, t4)))));
  },
  setLength$1: function(l) {
    var t1, t2, t3, t4;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    t1 = $.$$add(t1, $.$$mul(t2, t2));
    t3 = this.z;
    t1 = $.$$add(t1, $.$$mul(t3, t3));
    t4 = this.w;
    return this.divideScalar$1(Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t4, t4))))).multiplyScalar$1(l);
  },
  lerpSelf$2: function(v, alpha) {
    var t1, t2, t3, t4;
    t1 = this.x;
    this.x = $.$$add(t1, $.$$mul($.$$sub(v.get$x(), t1), alpha));
    t2 = this.y;
    this.y = $.$$add(t2, $.$$mul($.$$sub(v.get$y(), t2), alpha));
    t3 = this.z;
    this.z = $.$$add(t3, $.$$mul($.$$sub(v.get$z(), t3), alpha));
    t4 = this.w;
    this.w = $.$$add(t4, $.$$mul($.$$sub(v.get$w(), t4), alpha));
    return this;
  },
  clone$0: function() {
    return $.Vector4$(this.x, this.y, this.z, this.w);
  },
  $isIVector4: true
};

$$.Object3D = {"": "Object;id=,name,properties,parent=,children>,up>,position=,rotation=,scale>,eulerOrder,_dynamic,doubleSided,flipSided,rotationAutoUpdate,renderDepth>,matrix,matrixWorld>,matrixRotationWorld>,matrixAutoUpdate,matrixWorldNeedsUpdate,quaternion,useQuaternion,boundRadius,boundRadiusScale,visible=,castShadow,receiveShadow,frustumCulled>,_vector,__data",
  lookAt$1: function(vector) {
    var t1 = this.matrix;
    t1.lookAt$3(vector, this.position, this.up);
    if (this.rotationAutoUpdate)
      this.rotation.setEulerFromRotationMatrix$2(t1, this.eulerOrder);
  },
  add$1: function(object) {
    var scene;
    if ($.$$eq(object, this) === true) {
      $.print("THREE.Object3D.add: An object can't be added as a child of itself.");
      return;
    }
    if (!(object.get$parent() == null))
      $.remove(object.get$parent(), object);
    object.set$parent(this);
    $.add(this.children, object);
    for (scene = this; !(scene.get$parent() == null);)
      scene = scene.get$parent();
    if (typeof scene === "object" && scene !== null && !!scene.$isScene)
      scene.addObject$1(object);
  },
  remove$1: function(object) {
    var t1, scene;
    t1 = $.indexOf0(this.children, object);
    if ($.$$eq(t1, -1) !== true) {
      object.set$parent(null);
      $.removeRange(this.children, t1, 1);
      for (scene = this; !(scene.get$parent() == null);)
        scene = scene.get$parent();
      if (typeof scene === "object" && scene !== null && !!scene.$isScene)
        scene.removeObject$1(object);
    }
  },
  updateMatrix$0: function() {
    var t1, t2;
    t1 = this.matrix;
    t1.setPosition$1(this.position);
    if (this.useQuaternion)
      t1.setRotationFromQuaternion$1(this.quaternion);
    else
      t1.setRotationFromEuler$2(this.rotation, this.eulerOrder);
    t2 = this.scale;
    if ($.$$eq(t2.x, 1) !== true || $.$$eq(t2.y, 1) !== true || $.$$eq(t2.z, 1) !== true) {
      t1.scale$1(t2);
      this.boundRadiusScale = $.max(t2.x, $.max(t2.y, t2.z));
    }
    this.matrixWorldNeedsUpdate = true;
  },
  updateMatrixWorld$1$force: function(force) {
    var t1, t2, t3, t4;
    t1 = {};
    t1.force_0 = force;
    if (this.matrixAutoUpdate === true)
      this.updateMatrix$0();
    if (this.matrixWorldNeedsUpdate || t1.force_0 === true) {
      t2 = this.parent;
      t3 = this.matrixWorld;
      t4 = this.matrix;
      if (!(t2 == null))
        t3.multiply$2(t2.get$matrixWorld(), t4);
      else
        t3.copy$1(t4);
      this.matrixWorldNeedsUpdate = false;
      t1.force_0 = true;
    }
    $.forEach(this.children, new $.Object3D_updateMatrixWorld_anon(t1));
  },
  updateMatrixWorld$0: function() {
    return this.updateMatrixWorld$1$force(false);
  },
  clone$0: function() {
  },
  get$_data: function() {
    if (this.__data == null)
      this.__data = $.makeLiteralMap([]);
    return this.__data;
  },
  $index: function(key) {
    var t1 = this.get$_data();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout6(1, key, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    return t1[key];
  },
  $$index$bailout6: function(state0, key, t1) {
    return $.$$index(t1, key);
  },
  $indexSet: function(key, value) {
    var t1 = this.get$_data();
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.$$indexSet$bailout2(1, key, value, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    t1[key] = value;
    return value;
  },
  $$indexSet$bailout2: function(state0, key, value, t1) {
    $.$$indexSet(t1, key, value);
    return value;
  }
};

$$.Frustum = {"": "Object;planes",
  setFromMatrix$1: function(m) {
    var me, t1, me0, me1, me2, me3, me4, me5, me6, me7, me8, me9, me10, me11, me12, me13, me14, me15, t2, t3, t4, t5, i, plane;
    me = m.get$elements();
    t1 = $.getInterceptor$JSStringJSArray(me);
    me0 = t1.$index(me, 0);
    me1 = t1.$index(me, 1);
    me2 = t1.$index(me, 2);
    me3 = t1.$index(me, 3);
    me4 = t1.$index(me, 4);
    me5 = t1.$index(me, 5);
    me6 = t1.$index(me, 6);
    me7 = t1.$index(me, 7);
    me8 = t1.$index(me, 8);
    me9 = t1.$index(me, 9);
    me10 = t1.$index(me, 10);
    me11 = t1.$index(me, 11);
    me12 = t1.$index(me, 12);
    me13 = t1.$index(me, 13);
    me14 = t1.$index(me, 14);
    me15 = t1.$index(me, 15);
    t1 = this.planes;
    if (0 >= t1.length)
      throw $.ioore(0);
    t2 = $.getInterceptor$JSNumber(me3);
    t3 = $.getInterceptor$JSNumber(me7);
    t4 = $.getInterceptor$JSNumber(me11);
    t5 = $.getInterceptor$JSNumber(me15);
    t1[0].setValues$4(t2.$sub(me3, me0), t3.$sub(me7, me4), t4.$sub(me11, me8), t5.$sub(me15, me12));
    if (1 >= t1.length)
      throw $.ioore(1);
    t1[1].setValues$4(t2.$add(me3, me0), t3.$add(me7, me4), t4.$add(me11, me8), t5.$add(me15, me12));
    if (2 >= t1.length)
      throw $.ioore(2);
    t1[2].setValues$4(t2.$add(me3, me1), t3.$add(me7, me5), t4.$add(me11, me9), t5.$add(me15, me13));
    if (3 >= t1.length)
      throw $.ioore(3);
    t1[3].setValues$4(t2.$sub(me3, me1), t3.$sub(me7, me5), t4.$sub(me11, me9), t5.$sub(me15, me13));
    if (4 >= t1.length)
      throw $.ioore(4);
    t1[4].setValues$4(t2.$sub(me3, me2), t3.$sub(me7, me6), t4.$sub(me11, me10), t5.$sub(me15, me14));
    if (5 >= t1.length)
      throw $.ioore(5);
    t1[5].setValues$4(t2.$add(me3, me2), t3.$add(me7, me6), t4.$add(me11, me10), t5.$add(me15, me14));
    for (i = 0; i < 6; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      plane = t1[i];
      t2 = plane.get$x();
      t2 = $.$$mul(t2, t2);
      t3 = plane.get$y();
      t2 = $.$$add(t2, $.$$mul(t3, t3));
      t4 = plane.get$z();
      plane.divideScalar$1(Math.sqrt($.checkNum($.$$add(t2, $.$$mul(t4, t4)))));
    }
  },
  contains$1: function(object) {
    var matrix, me, t2, t4, t1, t3, t5, i, t6, t7, t9, t12, t14, t16;
    matrix = object.get$matrixWorld();
    me = matrix.get$elements();
    if (typeof me !== "string" && (typeof me !== "object" || me === null || me.constructor !== Array && !me.$isJavaScriptIndexingBehavior()))
      return this.contains$1$bailout(1, object, matrix, me);
    t2 = object.get$geometry().get$boundingSphere().get$radius();
    if (typeof t2 !== "number")
      return this.contains$1$bailout(2, null, matrix, me, t2);
    t2 = -t2;
    t4 = matrix.getMaxScaleOnAxis$0();
    if (typeof t4 !== "number")
      return this.contains$1$bailout(3, null, null, me, t2, t4);
    t4 = t2 * t4;
    for (t1 = this.planes, t2 = $.getInterceptor$JSStringJSArray(me), t3 = t1.length, t5 = me.length, i = 0; i < 6; ++i) {
      if (i >= t3)
        throw $.ioore(i);
      t6 = t1[i];
      t7 = t6.get$x();
      if (12 >= t5)
        throw $.ioore(12);
      t9 = me[12];
      if (typeof t7 !== "number")
        return this.contains$1$bailout(4, null, null, me, t2, t4, t1, i, t7);
      if (typeof t9 !== "number")
        return this.contains$1$bailout(5, null, null, me, t2, t4, t1, i, t7, t9);
      t9 = t7 * t9;
      t7 = t6.get$y();
      if (13 >= t5)
        throw $.ioore(13);
      t12 = me[13];
      if (typeof t7 !== "number")
        return this.contains$1$bailout(6, null, null, me, t2, t4, t1, i, t7, t9);
      if (typeof t12 !== "number")
        return this.contains$1$bailout(7, null, null, me, t2, t4, t1, i, t7, t9, t12);
      t9 += t7 * t12;
      t14 = t6.get$z();
      if (14 >= t5)
        throw $.ioore(14);
      t16 = me[14];
      if (typeof t14 !== "number")
        return this.contains$1$bailout(8, null, null, me, t2, t4, t1, i, null, t9, null, t14);
      if (typeof t16 !== "number")
        return this.contains$1$bailout(9, null, null, me, t2, t4, t1, i, null, t9, null, t14, t16);
      t9 += t14 * t16;
      t6 = t6.get$w();
      if (typeof t6 !== "number")
        return this.contains$1$bailout(10, null, null, me, t2, t4, t1, i, null, t9, null, null, null, t6);
      if (t9 + t6 <= t4)
        return false;
    }
    return true;
  },
  contains$1$bailout: function(state0, object, matrix, me, t2, t4, t1, i, t3, t6, t9, t11, t13, t15) {
    switch (state0) {
      case 0:
        matrix = object.get$matrixWorld();
        me = matrix.get$elements();
      case 1:
        state0 = 0;
        t2 = object.get$geometry().get$boundingSphere().get$radius();
      case 2:
        state0 = 0;
        t2 = $.$$negate(t2);
        t4 = matrix.getMaxScaleOnAxis$0();
      case 3:
        state0 = 0;
        t4 = $.$$mul(t2, t4);
        t1 = this.planes;
        t2 = $.getInterceptor$JSStringJSArray(me);
        i = 0;
      default:
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(i < 6))
                  break L0;
                if (i >= t1.length)
                  throw $.ioore(i);
                t3 = t1[i].get$x();
              case 4:
                state0 = 0;
                t6 = t2.$index(me, 12);
              case 5:
                state0 = 0;
                t6 = $.$$mul(t3, t6);
                if (i >= t1.length)
                  throw $.ioore(i);
                t3 = t1[i].get$y();
              case 6:
                state0 = 0;
                t9 = t2.$index(me, 13);
              case 7:
                state0 = 0;
                t6 = $.$$add(t6, $.$$mul(t3, t9));
                if (i >= t1.length)
                  throw $.ioore(i);
                t11 = t1[i].get$z();
              case 8:
                state0 = 0;
                t13 = t2.$index(me, 14);
              case 9:
                state0 = 0;
                t6 = $.$$add(t6, $.$$mul(t11, t13));
                if (i >= t1.length)
                  throw $.ioore(i);
                t15 = t1[i].get$w();
              case 10:
                state0 = 0;
                if ($.$$le($.$$add(t6, t15), t4) === true)
                  return false;
                ++i;
            }
        return true;
    }
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  }
};

$$.Projector = {"": "Object;_objectPool,_vertexPool>,_face4Pool,_face3Pool,_linePool,_particlePool,_objectCount,_vertexCount=,_face3Count,_face4Count,_lineCount,_particleCount,_object,_vertex=,_line=,_particle=,_vector3,_vector4>,_clippedVertex1PositionScreen>,_clippedVertex2PositionScreen>,_renderData>,_viewProjectionMatrix>,_modelViewProjectionMatrix>,_frustum",
  _projectObject$1: function(parent) {
    var t1, t2, t3, t4, c, t5, t6;
    t1 = $.length(parent.get$children());
    if (typeof t1 !== "number")
      return this._projectObject$1$bailout(1, parent, t1);
    for (t2 = this._frustum, t3 = this._vector3, t4 = this._viewProjectionMatrix, c = 0; c < t1; ++c) {
      t5 = parent.get$children();
      if (typeof t5 !== "string" && (typeof t5 !== "object" || t5 === null || t5.constructor !== Array && !t5.$isJavaScriptIndexingBehavior()))
        return this._projectObject$1$bailout(2, parent, t1, t5, t3, t4, c, t2);
      if (c >= t5.length)
        throw $.ioore(c);
      t5 = t5[c];
      if (t5.get$visible() !== true)
        continue;
      if (typeof t5 === "object" && t5 !== null && !!t5.$isLight)
        $.add(this._renderData.get$lights(), t5);
      else if (typeof t5 === "object" && t5 !== null && !!t5.$isMesh || typeof t5 === "object" && t5 !== null && !!t5.$isLine) {
        if (t5.get$frustumCulled() !== true || t2.contains$1(t5) === true) {
          this._object = this.getNextObjectInPool$0();
          this._object.set$object(t5);
          t6 = t5.get$renderDepth();
          if (!(t6 == null))
            this._object.set$z(t6);
          else {
            t3.copy$1(t5.get$matrixWorld().getPosition$0());
            t4.multiplyVector3$1(t3);
            t6 = t3.z;
            this._object.set$z(t6);
          }
          $.add(this._renderData.get$objects(), this._object);
        }
      } else if (typeof t5 === "object" && t5 !== null && !!t5.$isSprite || typeof t5 === "object" && t5 !== null && !!t5.$isParticle) {
        this._object = this.getNextObjectInPool$0();
        this._object.set$object(t5);
        t6 = t5.get$renderDepth();
        if (!(t6 == null))
          this._object.set$z(t6);
        else {
          t3.copy$1(t5.get$matrixWorld().getPosition$0());
          t4.multiplyVector3$1(t3);
          t6 = t3.z;
          this._object.set$z(t6);
        }
        $.add(this._renderData.get$sprites(), this._object);
      } else {
        this._object = this.getNextObjectInPool$0();
        this._object.set$object(t5);
        t6 = t5.get$renderDepth();
        if (!(t6 == null))
          this._object.set$z(t6);
        else {
          t3.copy$1(t5.get$matrixWorld().getPosition$0());
          t4.multiplyVector3$1(t3);
          t6 = t3.z;
          this._object.set$z(t6);
        }
        $.add(this._renderData.get$objects(), this._object);
      }
      this._projectObject$1(t5);
    }
  },
  _projectObject$1$bailout: function(state0, parent, t1, t5, t3, t4, c, t2) {
    switch (state0) {
      case 0:
        t1 = $.length(parent.get$children());
      case 1:
        state0 = 0;
        t2 = this._frustum;
        t3 = this._vector3;
        t4 = this._viewProjectionMatrix;
        c = 0;
      case 2:
        var t6;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!$.CONSTANT.$lt(c, t1))
                  break L0;
              case 2:
                c$0: {
                  switch (state0) {
                    case 0:
                      t5 = parent.get$children();
                    case 2:
                      state0 = 0;
                      t5 = $.$$index(t5, c);
                      if (t5.get$visible() !== true)
                        break c$0;
                      if (typeof t5 === "object" && t5 !== null && !!t5.$isLight)
                        $.add(this._renderData.get$lights(), t5);
                      else if (typeof t5 === "object" && t5 !== null && !!t5.$isMesh || typeof t5 === "object" && t5 !== null && !!t5.$isLine) {
                        if (t5.get$frustumCulled() !== true || t2.contains$1(t5) === true) {
                          this._object = this.getNextObjectInPool$0();
                          this._object.set$object(t5);
                          t6 = t5.get$renderDepth();
                          if (!(t6 == null))
                            this._object.set$z(t6);
                          else {
                            t3.copy$1(t5.get$matrixWorld().getPosition$0());
                            t4.multiplyVector3$1(t3);
                            t6 = t3.z;
                            this._object.set$z(t6);
                          }
                          $.add(this._renderData.get$objects(), this._object);
                        }
                      } else if (typeof t5 === "object" && t5 !== null && !!t5.$isSprite || typeof t5 === "object" && t5 !== null && !!t5.$isParticle) {
                        this._object = this.getNextObjectInPool$0();
                        this._object.set$object(t5);
                        t6 = t5.get$renderDepth();
                        if (!(t6 == null))
                          this._object.set$z(t6);
                        else {
                          t3.copy$1(t5.get$matrixWorld().getPosition$0());
                          t4.multiplyVector3$1(t3);
                          t6 = t3.z;
                          this._object.set$z(t6);
                        }
                        $.add(this._renderData.get$sprites(), this._object);
                      } else {
                        this._object = this.getNextObjectInPool$0();
                        this._object.set$object(t5);
                        t6 = t5.get$renderDepth();
                        if (!(t6 == null))
                          this._object.set$z(t6);
                        else {
                          t3.copy$1(t5.get$matrixWorld().getPosition$0());
                          t4.multiplyVector3$1(t3);
                          t6 = t3.z;
                          this._object.set$z(t6);
                        }
                        $.add(this._renderData.get$objects(), this._object);
                      }
                      this._projectObject$1(t5);
                  }
                }
                ++c;
            }
    }
  },
  projectGraph$2: function(root, sort) {
    this._objectCount = 0;
    this._renderData.set$objects([]);
    this._renderData.set$sprites([]);
    this._renderData.set$lights([]);
    this._projectObject$1(root);
    if (sort)
      $.sort(this._renderData.get$objects(), this.get$painterSort());
    return this._renderData;
  },
  projectScene$3: function(scene, camera, sort) {
    var t1, near, far, t2;
    t1 = {};
    near = camera.get$near();
    far = camera.get$far();
    t1.visible_0 = false;
    t1.v_1 = null;
    t1.vl_2 = null;
    t1.f_3 = null;
    t1.fl_4 = null;
    t1.n_5 = null;
    t1.nl_6 = null;
    t1.c_7 = null;
    t1.cl_8 = null;
    t1.u_9 = null;
    t1.ul_10 = null;
    t1.object_11 = null;
    t1.modelMatrix_12 = null;
    t1.rotationMatrix_13 = null;
    t1.geometry_14 = null;
    t1.geometryMaterials_15 = null;
    t1.vertices_16 = null;
    t1.normal_17 = null;
    t1.faces_18 = null;
    t1.face_19 = null;
    t1._face_20 = null;
    t1.faceVertexNormals_21 = null;
    t1.faceVertexUvs_22 = null;
    t1.v1_23 = null;
    t1.v2_24 = null;
    t1.v3_25 = null;
    t1.v4_26 = null;
    t1.isFaceMaterial_27 = null;
    t1.material_28 = null;
    t1.side_29 = null;
    this._face3Count = 0;
    this._face4Count = 0;
    this._lineCount = 0;
    this._particleCount = 0;
    this._renderData.set$elements([]);
    scene.updateMatrixWorld$0();
    if (camera.get$parent() == null)
      camera.updateMatrixWorld$0();
    camera.get$matrixWorldInverse().getInverse$1(camera.get$matrixWorld());
    t2 = this._viewProjectionMatrix;
    t2.multiply$2(camera.get$projectionMatrix(), camera.get$matrixWorldInverse());
    this._frustum.setFromMatrix$1(t2);
    this._renderData = this.projectGraph$2(scene, false);
    $.forEach(this._renderData.get$objects(), new $.Projector_projectScene_anon(t1, this, near, far));
    $.forEach(this._renderData.get$sprites(), new $.Projector_projectScene_anon0(t1, this, camera));
    if (sort)
      $.sort(this._renderData.get$elements(), this.get$painterSort());
    return this._renderData;
  },
  getNextObjectInPool$0: function() {
    var t1, t3, t4, object;
    t1 = this._objectCount;
    t3 = this._objectPool;
    t4 = t3.length;
    if (typeof t1 !== "number")
      return this.getNextObjectInPool$0$bailout(1, t1);
    if (t1 < t4) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      object = !(t3[t1] == null) ? t3[t1] : $.RenderableObject$();
    } else {
      object = $.RenderableObject$();
      t3.push(object);
    }
    t1 = this._objectCount;
    if (typeof t1 !== "number")
      return this.getNextObjectInPool$0$bailout(2, t1, object);
    this._objectCount = t1 + 1;
    return object;
  },
  getNextObjectInPool$0$bailout: function(state0, t1, object) {
    switch (state0) {
      case 0:
        t1 = this._objectCount;
      case 1:
        state0 = 0;
        t3 = this._objectPool;
        if ($.$$lt(t1, t3.length) === true) {
          t1 = this._objectCount;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          object = !(t3[t1] == null) ? t3[t1] : $.RenderableObject$();
        } else {
          object = $.RenderableObject$();
          t3.push(object);
        }
        t1 = this._objectCount;
      case 2:
        var t3;
        state0 = 0;
        this._objectCount = $.$$add(t1, 1);
        return object;
    }
  },
  getNextVertexInPool$0: function() {
    var t1, t3, t4, vertex;
    t1 = this._vertexCount;
    t3 = this._vertexPool;
    t4 = t3.length;
    if (typeof t1 !== "number")
      return this.getNextVertexInPool$0$bailout(1, t1);
    if (t1 < t4) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      vertex = !(t3[t1] == null) ? t3[t1] : $.RenderableVertex$();
    } else {
      vertex = $.RenderableVertex$();
      t3.push(vertex);
    }
    t1 = this._vertexCount;
    if (typeof t1 !== "number")
      return this.getNextVertexInPool$0$bailout(2, t1, vertex);
    this._vertexCount = t1 + 1;
    return vertex;
  },
  getNextVertexInPool$0$bailout: function(state0, t1, vertex) {
    switch (state0) {
      case 0:
        t1 = this._vertexCount;
      case 1:
        state0 = 0;
        t3 = this._vertexPool;
        if ($.$$lt(t1, t3.length) === true) {
          t1 = this._vertexCount;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          vertex = !(t3[t1] == null) ? t3[t1] : $.RenderableVertex$();
        } else {
          vertex = $.RenderableVertex$();
          t3.push(vertex);
        }
        t1 = this._vertexCount;
      case 2:
        var t3;
        state0 = 0;
        this._vertexCount = $.$$add(t1, 1);
        return vertex;
    }
  },
  getNextFace3InPool$0: function() {
    var t1, t3, t4, face;
    t1 = this._face3Count;
    t3 = this._face3Pool;
    t4 = t3.length;
    if (typeof t1 !== "number")
      return this.getNextFace3InPool$0$bailout(1, t1);
    if (t1 < t4) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace3$();
    } else {
      face = $.RenderableFace3$();
      t3.push(face);
    }
    t1 = this._face3Count;
    if (typeof t1 !== "number")
      return this.getNextFace3InPool$0$bailout(2, t1, face);
    this._face3Count = t1 + 1;
    return face;
  },
  getNextFace3InPool$0$bailout: function(state0, t1, face) {
    switch (state0) {
      case 0:
        t1 = this._face3Count;
      case 1:
        state0 = 0;
        t3 = this._face3Pool;
        if ($.$$lt(t1, t3.length) === true) {
          t1 = this._face3Count;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace3$();
        } else {
          face = $.RenderableFace3$();
          t3.push(face);
        }
        t1 = this._face3Count;
      case 2:
        var t3;
        state0 = 0;
        this._face3Count = $.$$add(t1, 1);
        return face;
    }
  },
  getNextFace4InPool$0: function() {
    var t1, t3, t4, face;
    t1 = this._face4Count;
    t3 = this._face4Pool;
    t4 = t3.length;
    if (typeof t1 !== "number")
      return this.getNextFace4InPool$0$bailout(1, t1);
    if (t1 < t4) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace4$();
    } else {
      face = $.RenderableFace4$();
      t3.push(face);
    }
    t1 = this._face4Count;
    if (typeof t1 !== "number")
      return this.getNextFace4InPool$0$bailout(2, t1, face);
    this._face4Count = t1 + 1;
    return face;
  },
  getNextFace4InPool$0$bailout: function(state0, t1, face) {
    switch (state0) {
      case 0:
        t1 = this._face4Count;
      case 1:
        state0 = 0;
        t3 = this._face4Pool;
        if ($.$$lt(t1, t3.length) === true) {
          t1 = this._face4Count;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          face = !(t3[t1] == null) ? t3[t1] : $.RenderableFace4$();
        } else {
          face = $.RenderableFace4$();
          t3.push(face);
        }
        t1 = this._face4Count;
      case 2:
        var t3;
        state0 = 0;
        this._face4Count = $.$$add(t1, 1);
        return face;
    }
  },
  getNextLineInPool$0: function() {
    var t1, t3, t4, line;
    t1 = this._lineCount;
    t3 = this._linePool;
    t4 = t3.length;
    if (typeof t1 !== "number")
      return this.getNextLineInPool$0$bailout(1, t1);
    if (t1 < t4) {
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t4)
        throw $.ioore(t1);
      line = !(t3[t1] == null) ? t3[t1] : $.RenderableLine$();
    } else {
      line = $.RenderableLine$();
      t3.push(line);
    }
    t1 = this._lineCount;
    if (typeof t1 !== "number")
      return this.getNextLineInPool$0$bailout(2, t1, line);
    this._lineCount = t1 + 1;
    return line;
  },
  getNextLineInPool$0$bailout: function(state0, t1, line) {
    switch (state0) {
      case 0:
        t1 = this._lineCount;
      case 1:
        state0 = 0;
        t3 = this._linePool;
        if ($.$$lt(t1, t3.length) === true) {
          t1 = this._lineCount;
          if (t1 !== (t1 | 0))
            throw $.iae(t1);
          if (t1 < 0 || t1 >= t3.length)
            throw $.ioore(t1);
          line = !(t3[t1] == null) ? t3[t1] : $.RenderableLine$();
        } else {
          line = $.RenderableLine$();
          t3.push(line);
        }
        t1 = this._lineCount;
      case 2:
        var t3;
        state0 = 0;
        this._lineCount = $.$$add(t1, 1);
        return line;
    }
  },
  getNextParticleInPool$0: function() {
    var t1, t2, particle;
    t1 = this._particleCount;
    t2 = this._particlePool;
    if ($.$$lt(t1, t2.length) === true) {
      t1 = this._particleCount;
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t2.length)
        throw $.ioore(t1);
      particle = !(t2[t1] == null) ? t2[t1] : $.RenderableParticle$();
    } else {
      particle = $.RenderableParticle$();
      t2.push(particle);
    }
    this._particleCount = $.$$add(this._particleCount, 1);
    return particle;
  },
  painterSort$2: function(a, b) {
    return $.compareTo(b.get$z(), a.get$z());
  },
  get$painterSort: function() {
    return new $.BoundClosure2(this, "painterSort$2");
  },
  clipLine$2: function(s1, s2) {
    var t1, t3, t5, t6, t8, t10, t2, alpha1, alpha2;
    t1 = s1.get$z();
    t3 = s1.get$w();
    if (typeof t1 !== "number")
      return this.clipLine$2$bailout(1, s1, s2, t1);
    if (typeof t3 !== "number")
      return this.clipLine$2$bailout(2, s1, s2, t1, t3);
    t5 = t1 + t3;
    t6 = s2.get$z();
    t8 = s2.get$w();
    if (typeof t6 !== "number")
      return this.clipLine$2$bailout(3, s1, s2, t6, t5);
    if (typeof t8 !== "number")
      return this.clipLine$2$bailout(4, s1, s2, t6, t5, t8);
    t10 = t6 + t8;
    t3 = -t1 + t3;
    t8 = -t6 + t8;
    if (t5 >= 0 && t10 >= 0 && t3 >= 0 && t8 >= 0)
      return true;
    else {
      t1 = t5 < 0;
      if (!(t1 && t10 < 0))
        t2 = t3 < 0 && t8 < 0;
      else
        t2 = true;
      if (t2)
        return false;
      else {
        if (t1) {
          alpha1 = $.max(0, t5 / (t5 - t10));
          alpha2 = 1;
        } else {
          alpha2 = t10 < 0 ? $.min(1, t5 / (t5 - t10)) : 1;
          alpha1 = 0;
        }
        if (t3 < 0)
          alpha1 = $.max(alpha1, t3 / (t3 - t8));
        else if (t8 < 0)
          alpha2 = $.min(alpha2, t3 / (t3 - t8));
        if (alpha2 < alpha1)
          return false;
        else {
          s1.lerpSelf$2(s2, alpha1);
          s2.lerpSelf$2(s1, 1 - alpha2);
          return true;
        }
      }
    }
  },
  clipLine$2$bailout: function(state0, s1, s2, t1, t3, t6, t9, t12) {
    switch (state0) {
      case 0:
        t1 = s1.get$z();
      case 1:
        state0 = 0;
        t3 = s1.get$w();
      case 2:
        state0 = 0;
        t3 = $.$$add(t1, t3);
        t1 = s2.get$z();
      case 3:
        state0 = 0;
        t6 = s2.get$w();
      case 4:
        state0 = 0;
        t6 = $.$$add(t1, t6);
        t1 = s1.get$z();
      case 5:
        state0 = 0;
        t1 = $.$$negate(t1);
        t9 = s1.get$w();
      case 6:
        state0 = 0;
        t9 = $.$$add(t1, t9);
        t1 = s2.get$z();
      case 7:
        state0 = 0;
        t1 = $.$$negate(t1);
        t12 = s2.get$w();
      case 8:
        var t2, alpha1, alpha2;
        state0 = 0;
        t12 = $.$$add(t1, t12);
        t1 = $.getInterceptor$JSNumber(t3);
        if (t1.$ge(t3, 0) === true && $.$$ge(t6, 0) === true && $.$$ge(t9, 0) === true && $.$$ge(t12, 0) === true)
          return true;
        else {
          if (!(t1.$lt(t3, 0) === true && $.$$lt(t6, 0) === true))
            t2 = $.$$lt(t9, 0) === true && $.$$lt(t12, 0) === true;
          else
            t2 = true;
          if (t2)
            return false;
          else {
            if (t1.$lt(t3, 0) === true) {
              alpha1 = $.max(0, t1.$div(t3, t1.$sub(t3, t6)));
              alpha2 = 1;
            } else {
              alpha2 = $.$$lt(t6, 0) === true ? $.min(1, t1.$div(t3, t1.$sub(t3, t6))) : 1;
              alpha1 = 0;
            }
            t1 = $.getInterceptor$JSNumber(t9);
            if (t1.$lt(t9, 0) === true)
              alpha1 = $.max(alpha1, t1.$div(t9, t1.$sub(t9, t12)));
            else if ($.$$lt(t12, 0) === true)
              alpha2 = $.min(alpha2, t1.$div(t9, t1.$sub(t9, t12)));
            if (alpha2 < alpha1)
              return false;
            else {
              s1.lerpSelf$2(s2, alpha1);
              s2.lerpSelf$2(s1, 1 - alpha2);
              return true;
            }
          }
        }
    }
  }
};

$$.ProjectorRenderData = {"": "Object;objects=,sprites=,lights=,elements="};

$$.Vector2 = {"": "Object;x=,y=",
  copy$1: function(v) {
    this.x = v.get$x();
    this.y = v.get$y();
    return this;
  },
  add$2: function(v1, v2) {
    this.x = $.$$add(v1.get$x(), v2.get$x());
    this.y = $.$$add(v1.get$y(), v2.get$y());
    return this;
  },
  addSelf$1: function(v) {
    this.x = $.$$add(this.x, v.get$x());
    this.y = $.$$add(this.y, v.get$y());
    return this;
  },
  sub$2: function(v1, v2) {
    this.x = $.$$sub(v1.get$x(), v2.get$x());
    this.y = $.$$sub(v1.get$y(), v2.get$y());
    return this;
  },
  subSelf$1: function(v) {
    this.x = $.$$sub(this.x, v.get$x());
    this.y = $.$$sub(this.y, v.get$y());
    return this;
  },
  multiplyScalar$1: function(s) {
    var t1, t3;
    if (typeof s !== "number")
      return this.multiplyScalar$1$bailout1(1, s);
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.multiplyScalar$1$bailout1(2, s, t1);
    this.x = t1 * s;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.multiplyScalar$1$bailout1(3, s, null, t3);
    this.y = t3 * s;
    return this;
  },
  multiplyScalar$1$bailout1: function(state0, s, t1, t3) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.x;
      case 2:
        state0 = 0;
        this.x = $.$$mul(t1, s);
        t3 = this.y;
      case 3:
        state0 = 0;
        this.y = $.$$mul(t3, s);
        return this;
    }
  },
  divideScalar$1: function(s) {
    this.x = $.$$div(this.x, s);
    this.y = $.$$div(this.y, s);
    return this;
  },
  negate$0: function() {
    var t1, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.negate$0$bailout1(1, t1);
    this.x = t1 * -1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.negate$0$bailout1(2, null, t3);
    this.y = t3 * -1;
    return this;
  },
  negate$0$bailout1: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        this.x = $.$$mul(t1, -1);
        t3 = this.y;
      case 2:
        state0 = 0;
        this.y = $.$$mul(t3, -1);
        return this;
    }
  },
  dot$1: function(v) {
    return $.$$add($.$$mul(this.x, v.get$x()), $.$$mul(this.y, v.get$y()));
  },
  lengthSq$0: function() {
    var t1, t2;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    return $.$$add(t1, $.$$mul(t2, t2));
  },
  length$0: function() {
    var t1, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.length$0$bailout0(1, t1);
    t1 *= t1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.length$0$bailout0(2, t1, t3);
    return Math.sqrt($.checkNum(t1 + t3 * t3));
  },
  length$0$bailout0: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t1 = $.$$mul(t1, t1);
        t3 = this.y;
      case 2:
        state0 = 0;
        return Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t3, t3))));
    }
  },
  get$length: function() {
    return new $.BoundClosure3(this, "length$0");
  },
  normalize$0: function() {
    var t1, t2;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    return this.divideScalar$1(Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t2, t2)))));
  },
  distanceToSquared$1: function(v) {
    var t1, t2;
    t1 = $.$$sub(this.x, v.get$x());
    t2 = $.$$sub(this.y, v.get$y());
    return $.$$add($.$$mul(t1, t1), $.$$mul(t2, t2));
  },
  setLength$1: function(l) {
    var t1, t2;
    t1 = this.x;
    t1 = $.$$mul(t1, t1);
    t2 = this.y;
    return this.divideScalar$1(Math.sqrt($.checkNum($.$$add(t1, $.$$mul(t2, t2))))).multiplyScalar$1(l);
  },
  lerpSelf$2: function(v, alpha) {
    var t1, t2;
    t1 = this.x;
    this.x = $.$$add(t1, $.$$mul($.$$sub(v.get$x(), t1), alpha));
    t2 = this.y;
    this.y = $.$$add(t2, $.$$mul($.$$sub(v.get$y(), t2), alpha));
    return this;
  },
  clone$0: function() {
    return $.Vector2$(this.x, this.y);
  }
};

$$.EventEmitterEvent = {"": "Object;type>,message,content"};

$$.EventEmitter = {"": "Object;",
  addEventListener$2: function(type, listener) {
    var t1, t2;
    t1 = this.listeners;
    t2 = $.getInterceptor$JSStringJSArray(t1);
    if (t2.$index(t1, type) == null)
      $.$$indexSet(t1, type, []);
    if ($.$$eq($.indexOf0(t2.$index(t1, type), listener), -1) === true)
      $.add(t2.$index(t1, type), listener);
  },
  dispatchEvent$1: function(event) {
    var t1, t2;
    t1 = this.listeners;
    t2 = $.getInterceptor$JSStringJSArray(t1);
    if (!(t2.$index(t1, event.get$type()) == null))
      $.forEach(t2.$index(t1, event.get$type()), new $.EventEmitter_dispatchEvent_anon(event));
  }
};

$$.RenderableObject = {"": "Object;object=,z="};

$$.RenderableVertex = {"": "Object;positionWorld>,positionScreen>,visible=",
  copy$1: function(vertex) {
    this.positionWorld.copy$1(vertex.get$positionWorld());
    this.positionScreen.copy$1(vertex.get$positionScreen());
  }
};

$$.RenderableFace3 = {"": "Object;v1>,v2>,v3>,centroidWorld>,centroidScreen>,normalWorld>,vertexNormalsWorld>,uvs>,material=,faceMaterial<,z="};

$$.RenderableFace4 = {"": "Object;v1>,v2>,v3>,v4>,centroidWorld>,centroidScreen>,normalWorld>,vertexNormalsWorld>,uvs>,material=,faceMaterial<,z=", $isIRenderableFace4: true};

$$.RenderableLine = {"": "Object;z=,v1>,v2>,material="};

$$.RenderableParticle = {"": "Object;x=,y=,z=,rotation=,scale>,material="};

$$.CSS3DObject = {"": "Object3D;element>,id,name,properties,parent,children,up,position,rotation,scale,eulerOrder,_dynamic,doubleSided,flipSided,rotationAutoUpdate,renderDepth,matrix,matrixWorld,matrixRotationWorld,matrixAutoUpdate,matrixWorldNeedsUpdate,quaternion,useQuaternion,boundRadius,boundRadiusScale,visible,castShadow,receiveShadow,frustumCulled,_vector,__data",
  CSS3DObject$1: function(element) {
    var t1 = this.element;
    t1.get$style().set$position("absolute");
    t1.get$style().set$transformStyle("preserve-3d");
  },
  $isCSS3DObject: true
};

$$.CSS3DRenderer = {"": "Object;_projector,domElement>,cameraElement,_width,_height,_widthHalf,_heightHalf",
  setSize$2: function(width, height) {
    var t1, t2, t3;
    this._width = width;
    this._height = height;
    this._widthHalf = $.$$div(this._width, 2);
    this._heightHalf = $.$$div(this._height, 2);
    t1 = $.S(height) + "px";
    t2 = $.S(width) + "px";
    t3 = this.domElement.get$style();
    t3.set$width(t2);
    t3.set$height(t1);
    t1 = $.S(height) + "px";
    t3 = $.S(width) + "px";
    t2 = this.cameraElement.get$style();
    t2.set$width(t3);
    t2.set$height(t1);
  },
  getCameraCSSMatrix$1: function(matrix) {
    var elements, t1, t2, t3, t4;
    elements = matrix.get$elements();
    t1 = $.getInterceptor$JSStringJSArray(elements);
    t2 = t1.$index(elements, 0);
    t2 = "matrix3d(" + $.S($.$$lt($.abs(t2), 0.000001) === true ? 0 : t2) + ",";
    t3 = $.$$negate(t1.$index(elements, 1));
    t3 = t2 + $.S($.$$lt($.abs(t3), 0.000001) === true ? 0 : t3) + ",";
    t4 = t1.$index(elements, 2);
    t2 = t3 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = t1.$index(elements, 3);
    t3 = t2 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = t1.$index(elements, 4);
    t2 = t3 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = $.$$negate(t1.$index(elements, 5));
    t3 = t2 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = t1.$index(elements, 6);
    t2 = t3 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = t1.$index(elements, 7);
    t3 = t2 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = t1.$index(elements, 8);
    t2 = t3 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = $.$$negate(t1.$index(elements, 9));
    t3 = t2 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = t1.$index(elements, 10);
    t2 = t3 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = t1.$index(elements, 11);
    t3 = t2 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = t1.$index(elements, 12);
    t2 = t3 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = $.$$negate(t1.$index(elements, 13));
    t3 = t2 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t4 = t1.$index(elements, 14);
    t2 = t3 + $.S($.$$lt($.abs(t4), 0.000001) === true ? 0 : t4) + ",";
    t1 = t1.$index(elements, 15);
    return t2 + $.S($.$$lt($.abs(t1), 0.000001) === true ? 0 : t1) + ")";
  },
  getObjectCSSMatrix$1: function(matrix) {
    var elements, t2, t3, t1, t4, t5;
    elements = matrix.get$elements();
    if (typeof elements !== "string" && (typeof elements !== "object" || elements === null || elements.constructor !== Array && !elements.$isJavaScriptIndexingBehavior()))
      return this.getObjectCSSMatrix$1$bailout(1, elements);
    t2 = $.getInterceptor$JSStringJSArray(elements);
    if (0 >= elements.length)
      throw $.ioore(0);
    t3 = elements[0];
    if (typeof t3 !== "number")
      return this.getObjectCSSMatrix$1$bailout(2, elements, t2, t3);
    t1 = $.CONSTANT4.abs$0(t3);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(3, elements, t2, t3, t1);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t3;
    t3 = "translate3d(-50%,-50%,0px) matrix3d(" + $.S(t1) + ",";
    if (1 >= elements.length)
      throw $.ioore(1);
    t4 = elements[1];
    if (typeof t4 !== "number")
      return this.getObjectCSSMatrix$1$bailout(4, elements, t2, t4, t3);
    t1 = $.CONSTANT4.abs$0(t4);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(5, elements, t2, t4, t3, t1);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t4;
    t4 = t3 + $.S(t1) + ",";
    if (2 >= elements.length)
      throw $.ioore(2);
    t5 = elements[2];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(6, elements, t2, t4, null, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(7, elements, t2, t4, t1, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t3 = t4 + $.S(t1) + ",";
    if (3 >= elements.length)
      throw $.ioore(3);
    t5 = elements[3];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(8, elements, t2, null, t3, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(9, elements, t2, t1, t3, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t4 = t3 + $.S(t1) + ",";
    if (4 >= elements.length)
      throw $.ioore(4);
    t5 = elements[4];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(10, elements, t2, t4, null, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(11, elements, t2, t4, t1, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t3 = t4 + $.S(t1) + ",";
    if (5 >= elements.length)
      throw $.ioore(5);
    t5 = elements[5];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(12, elements, t2, null, t3, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(13, elements, t2, t1, t3, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t4 = t3 + $.S(t1) + ",";
    if (6 >= elements.length)
      throw $.ioore(6);
    t5 = elements[6];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(14, elements, t2, t4, null, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(15, elements, t2, t4, t1, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t3 = t4 + $.S(t1) + ",";
    if (7 >= elements.length)
      throw $.ioore(7);
    t5 = elements[7];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(16, elements, t2, null, t3, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(17, elements, t2, t1, t3, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t4 = t3 + $.S(t1) + ",";
    if (8 >= elements.length)
      throw $.ioore(8);
    t5 = elements[8];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(18, elements, t2, t4, null, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(19, elements, t2, t4, t1, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t3 = t4 + $.S(t1) + ",";
    if (9 >= elements.length)
      throw $.ioore(9);
    t5 = elements[9];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(20, elements, t2, null, t3, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(21, elements, t2, t1, t3, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t4 = t3 + $.S(t1) + ",";
    if (10 >= elements.length)
      throw $.ioore(10);
    t5 = elements[10];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(22, elements, t2, t4, null, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(23, elements, t2, t4, t1, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t3 = t4 + $.S(t1) + ",";
    if (11 >= elements.length)
      throw $.ioore(11);
    t5 = elements[11];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(24, elements, t2, null, t3, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(25, elements, t2, t1, t3, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t4 = t3 + $.S(t1) + ",";
    if (12 >= elements.length)
      throw $.ioore(12);
    t5 = elements[12];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(26, elements, t2, t4, null, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(27, elements, t2, t4, t1, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t3 = t4 + $.S(t1) + ",";
    if (13 >= elements.length)
      throw $.ioore(13);
    t5 = elements[13];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(28, elements, t2, null, t3, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(29, elements, t2, t1, t3, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t4 = t3 + $.S(t1) + ",";
    if (14 >= elements.length)
      throw $.ioore(14);
    t5 = elements[14];
    if (typeof t5 !== "number")
      return this.getObjectCSSMatrix$1$bailout(30, elements, t2, t4, null, t5);
    t1 = $.CONSTANT4.abs$0(t5);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(31, elements, t2, t4, t1, t5);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t5;
    t2 = t4 + $.S(t1) + ",";
    if (15 >= elements.length)
      throw $.ioore(15);
    t3 = elements[15];
    if (typeof t3 !== "number")
      return this.getObjectCSSMatrix$1$bailout(32, null, t3, null, t2);
    t1 = $.CONSTANT4.abs$0(t3);
    if (typeof t1 !== "number")
      return this.getObjectCSSMatrix$1$bailout(33, null, t3, t1, t2);
    if (t1 < 0.000001)
      t1 = 0;
    else
      t1 = t3;
    return t2 + $.S(t1) + ") scale3d(1,-1,1)";
  },
  getObjectCSSMatrix$1$bailout: function(state0, elements, t2, t3, t1, t4) {
    switch (state0) {
      case 0:
        elements = matrix.get$elements();
      case 1:
        state0 = 0;
        t2 = $.getInterceptor$JSStringJSArray(elements);
        t3 = t2.$index(elements, 0);
      case 2:
        state0 = 0;
        t1 = $.abs(t3);
      case 3:
        state0 = 0;
        t1 = "translate3d(-50%,-50%,0px) matrix3d(" + $.S($.$$lt(t1, 0.000001) === true ? 0 : t3) + ",";
        t3 = t2.$index(elements, 1);
      case 4:
        state0 = 0;
        t4 = $.abs(t3);
      case 5:
        state0 = 0;
        t3 = t1 + $.S($.$$lt(t4, 0.000001) === true ? 0 : t3) + ",";
        t4 = t2.$index(elements, 2);
      case 6:
        state0 = 0;
        t1 = $.abs(t4);
      case 7:
        state0 = 0;
        t1 = t3 + $.S($.$$lt(t1, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 3);
      case 8:
        state0 = 0;
        t3 = $.abs(t4);
      case 9:
        state0 = 0;
        t3 = t1 + $.S($.$$lt(t3, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 4);
      case 10:
        state0 = 0;
        t1 = $.abs(t4);
      case 11:
        state0 = 0;
        t1 = t3 + $.S($.$$lt(t1, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 5);
      case 12:
        state0 = 0;
        t3 = $.abs(t4);
      case 13:
        state0 = 0;
        t3 = t1 + $.S($.$$lt(t3, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 6);
      case 14:
        state0 = 0;
        t1 = $.abs(t4);
      case 15:
        state0 = 0;
        t1 = t3 + $.S($.$$lt(t1, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 7);
      case 16:
        state0 = 0;
        t3 = $.abs(t4);
      case 17:
        state0 = 0;
        t3 = t1 + $.S($.$$lt(t3, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 8);
      case 18:
        state0 = 0;
        t1 = $.abs(t4);
      case 19:
        state0 = 0;
        t1 = t3 + $.S($.$$lt(t1, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 9);
      case 20:
        state0 = 0;
        t3 = $.abs(t4);
      case 21:
        state0 = 0;
        t3 = t1 + $.S($.$$lt(t3, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 10);
      case 22:
        state0 = 0;
        t1 = $.abs(t4);
      case 23:
        state0 = 0;
        t1 = t3 + $.S($.$$lt(t1, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 11);
      case 24:
        state0 = 0;
        t3 = $.abs(t4);
      case 25:
        state0 = 0;
        t3 = t1 + $.S($.$$lt(t3, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 12);
      case 26:
        state0 = 0;
        t1 = $.abs(t4);
      case 27:
        state0 = 0;
        t1 = t3 + $.S($.$$lt(t1, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 13);
      case 28:
        state0 = 0;
        t3 = $.abs(t4);
      case 29:
        state0 = 0;
        t3 = t1 + $.S($.$$lt(t3, 0.000001) === true ? 0 : t4) + ",";
        t4 = t2.$index(elements, 14);
      case 30:
        state0 = 0;
        t1 = $.abs(t4);
      case 31:
        state0 = 0;
        t1 = t3 + $.S($.$$lt(t1, 0.000001) === true ? 0 : t4) + ",";
        t2 = t2.$index(elements, 15);
      case 32:
        state0 = 0;
        t3 = $.abs(t2);
      case 33:
        state0 = 0;
        return t1 + $.S($.$$lt(t3, 0.000001) === true ? 0 : t2) + ") scale3d(1,-1,1)";
    }
  },
  render$2: function(scene, camera) {
    var t1, t2, fov, style, objects, il, i, object, element;
    t1 = Math.tan($.checkNum($.$$div($.$$mul(camera.get$fov(), 3.141592653589793), 360)));
    t2 = this._height;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    fov = 0.5 / t1 * t2;
    t2 = $.S(fov) + "px";
    this.domElement.get$style().set$perspective(t2);
    style = "translate3d(0,0," + $.S(fov) + "px)" + $.S(this.getCameraCSSMatrix$1(camera.get$matrixWorldInverse())) + " translate3d(" + $.S(this._widthHalf) + "px," + $.S(this._heightHalf) + "px, 0)";
    this.cameraElement.get$style().set$transform(style);
    objects = this._projector.projectScene$3(scene, camera, false).get$objects();
    if (typeof objects !== "string" && (typeof objects !== "object" || objects === null || objects.constructor !== Array && !objects.$isJavaScriptIndexingBehavior()))
      return this.render$2$bailout(1, objects, style);
    il = objects.length;
    for (i = 0; i < il; ++i) {
      if (i >= objects.length)
        throw $.ioore(i);
      object = objects[i].get$object();
      if (typeof object === "object" && object !== null && !!object.$isCSS3DObject) {
        element = object.element;
        style = this.getObjectCSSMatrix$1(object.matrixWorld);
        element.get$style().set$transform(style);
        if ($.$$eq(element.get$parent(), this.cameraElement) !== true)
          $.add(this.cameraElement.get$children(), element);
      }
    }
  },
  render$2$bailout: function(state0, objects, style, t3, il) {
    switch (state0) {
      case 0:
        t1 = Math.tan($.checkNum($.$$div($.$$mul(camera.get$fov(), 3.141592653589793), 360)));
        t2 = this._height;
        if (typeof t2 !== "number")
          throw $.iae(t2);
        fov = 0.5 / t1 * t2;
        t2 = $.S(fov) + "px";
        this.domElement.get$style().set$perspective(t2);
        style = "translate3d(0,0," + $.S(fov) + "px)" + $.S(this.getCameraCSSMatrix$1(camera.get$matrixWorldInverse())) + " translate3d(" + $.S(this._widthHalf) + "px," + $.S(this._heightHalf) + "px, 0)";
        this.cameraElement.get$style().set$transform(style);
        objects = this._projector.projectScene$3(scene, camera, false).get$objects();
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(objects);
        il = t3.get$length(objects);
      case 2:
        var t1, t2, fov, i, object, element;
        state0 = 0;
        for (i = 0; $.CONSTANT.$lt(i, il); ++i) {
          object = t3.$index(objects, i).get$object();
          if (typeof object === "object" && object !== null && !!object.$isCSS3DObject) {
            element = object.element;
            style = this.getObjectCSSMatrix$1(object.matrixWorld);
            element.get$style().set$transform(style);
            if ($.$$eq(element.get$parent(), this.cameraElement) !== true)
              $.add(this.cameraElement.get$children(), element);
          }
        }
    }
  },
  CSS3DRenderer$0: function() {
    this._projector = $.Projector$();
    var t1 = $.Element_Element$tag("div");
    t1.get$style().set$overflow("hidden");
    t1.get$style().set$transformStyle("preserve-3d");
    t1.get$style().set$perspectiveOrigin("50% 50%");
    this.domElement = t1;
    t1 = $.Element_Element$tag("div");
    t1.get$style().set$transformStyle("preserve-3d");
    this.cameraElement = t1;
    $.add(this.domElement.get$children(), this.cameraElement);
  }
};

$$.Scene = {"": "Object3D;fog,overrideMaterial,objects=,lights=,__objectsAdded,__objectsRemoved,id,name,properties,parent,children,up,position,rotation,scale,eulerOrder,_dynamic,doubleSided,flipSided,rotationAutoUpdate,renderDepth,matrix,matrixWorld,matrixRotationWorld,matrixAutoUpdate,matrixWorldNeedsUpdate,quaternion,useQuaternion,boundRadius,boundRadiusScale,visible,castShadow,receiveShadow,frustumCulled,_vector,__data",
  addObject$1: function(object) {
    var t1, i, c;
    if (typeof object === "object" && object !== null && !!object.$isLight) {
      t1 = $.indexOf0(this.lights, object);
      if (typeof t1 !== "number")
        return this.addObject$1$bailout(1, object, t1);
      if (t1 === -1)
        $.add(this.lights, object);
    } else if (!(typeof object === "object" && object !== null && !!object.$isCamera || typeof object === "object" && object !== null && !!object.$isBone)) {
      t1 = $.indexOf0(this.objects, object);
      if (typeof t1 !== "number")
        return this.addObject$1$bailout(2, object, t1);
      if (t1 === -1) {
        $.add(this.objects, object);
        this.__objectsAdded.push(object);
        i = $.CONSTANT1.indexOf$1(this.__objectsRemoved, object);
        if (typeof i !== "number")
          return this.addObject$1$bailout(3, object, null, i);
        if (!(i === -1))
          $.CONSTANT1.removeRange$2(this.__objectsRemoved, i, 1);
      }
    }
    c = 0;
    while (true) {
      t1 = $.length(object.get$children());
      if (typeof t1 !== "number")
        return this.addObject$1$bailout(4, object, t1, null, c);
      if (!(c < t1))
        break;
      t1 = object.get$children();
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.addObject$1$bailout(5, object, t1, null, c);
      if (c >= t1.length)
        throw $.ioore(c);
      this.addObject$1(t1[c]);
      ++c;
    }
  },
  addObject$1$bailout: function(state0, object, t1, i, c) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 1 || state0 === 0 && typeof object === "object" && object !== null && !!object.$isLight)
          switch (state0) {
            case 0:
              t1 = $.indexOf0(this.lights, object);
            case 1:
              state0 = 0;
              if ($.$$eq(t1, -1) === true)
                $.add(this.lights, object);
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 3 || state0 === 2 || state0 === 0 && !(typeof object === "object" && object !== null && !!object.$isCamera || typeof object === "object" && object !== null && !!object.$isBone))
                switch (state0) {
                  case 0:
                    t1 = $.indexOf0(this.objects, object);
                  case 2:
                    state0 = 0;
                  case 3:
                    if (state0 === 3 || state0 === 0 && $.$$eq(t1, -1) === true)
                      switch (state0) {
                        case 0:
                          $.add(this.objects, object);
                          this.__objectsAdded.push(object);
                          i = $.CONSTANT1.indexOf$1(this.__objectsRemoved, object);
                        case 3:
                          state0 = 0;
                          if ($.$$eq(i, -1) !== true)
                            $.CONSTANT1.removeRange$2(this.__objectsRemoved, i, 1);
                      }
                }
          }
        c = 0;
      case 4:
      case 5:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = $.length(object.get$children());
              case 4:
                state0 = 0;
                if (!$.CONSTANT.$lt(c, t1))
                  break L0;
                t1 = object.get$children();
              case 5:
                state0 = 0;
                this.addObject$1($.$$index(t1, c));
                ++c;
            }
    }
  },
  removeObject$1: function(object) {
    var t1, ai, c;
    if (typeof object === "object" && object !== null && !!object.$isLight) {
      t1 = $.indexOf0(this.lights, object);
      if (typeof t1 !== "number")
        return this.removeObject$1$bailout(1, object, t1);
      if (!(t1 === -1))
        $.removeRange(this.lights, t1, 1);
    } else if (!(typeof object === "object" && object !== null && !!object.$isCamera)) {
      t1 = $.indexOf0(this.objects, object);
      if (typeof t1 !== "number")
        return this.removeObject$1$bailout(2, object, t1);
      if (!(t1 === -1)) {
        $.removeRange(this.objects, t1, 1);
        this.__objectsRemoved.push(object);
        ai = $.CONSTANT1.indexOf$1(this.__objectsAdded, object);
        if (typeof ai !== "number")
          return this.removeObject$1$bailout(3, object, null, ai);
        if (!(ai === -1))
          $.CONSTANT1.removeRange$2(this.__objectsAdded, ai, 1);
      }
    }
    c = 0;
    while (true) {
      t1 = $.length(object.get$children());
      if (typeof t1 !== "number")
        return this.removeObject$1$bailout(4, object, t1, null, c);
      if (!(c < t1))
        break;
      t1 = object.get$children();
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.removeObject$1$bailout(5, object, t1, null, c);
      if (c >= t1.length)
        throw $.ioore(c);
      this.removeObject$1(t1[c]);
      ++c;
    }
  },
  removeObject$1$bailout: function(state0, object, t1, ai, c) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 1 || state0 === 0 && typeof object === "object" && object !== null && !!object.$isLight)
          switch (state0) {
            case 0:
              t1 = $.indexOf0(this.lights, object);
            case 1:
              state0 = 0;
              if ($.$$eq(t1, -1) !== true)
                $.removeRange(this.lights, t1, 1);
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 3 || state0 === 2 || state0 === 0 && !(typeof object === "object" && object !== null && !!object.$isCamera))
                switch (state0) {
                  case 0:
                    t1 = $.indexOf0(this.objects, object);
                  case 2:
                    state0 = 0;
                  case 3:
                    if (state0 === 3 || state0 === 0 && $.$$eq(t1, -1) !== true)
                      switch (state0) {
                        case 0:
                          $.removeRange(this.objects, t1, 1);
                          this.__objectsRemoved.push(object);
                          ai = $.CONSTANT1.indexOf$1(this.__objectsAdded, object);
                        case 3:
                          state0 = 0;
                          if ($.$$eq(ai, -1) !== true)
                            $.CONSTANT1.removeRange$2(this.__objectsAdded, ai, 1);
                      }
                }
          }
        c = 0;
      case 4:
      case 5:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = $.length(object.get$children());
              case 4:
                state0 = 0;
                if (!$.CONSTANT.$lt(c, t1))
                  break L0;
                t1 = object.get$children();
              case 5:
                state0 = 0;
                this.removeObject$1($.$$index(t1, c));
                ++c;
            }
    }
  },
  Scene$0: function() {
    this.fog = null;
    this.overrideMaterial = null;
    this.matrixAutoUpdate = false;
    this.objects = [];
    this.lights = [];
    this.__objectsAdded = [];
    this.__objectsRemoved = [];
  },
  $isScene: true
};

$$.Screen = {"": "Object;width=,height=,offsetLeft=,offsetTop="};

$$.TrackballControls = {"": "EventEmitter;_state,_prevState,object=,domElement>,enabled,screen,radius>,rotateSpeed,zoomSpeed,panSpeed,noRotate,noZoom,noPan,staticMoving,dynamicDampingFactor,minDistance,maxDistance,keys,target>,_eye,_rotateStart,_rotateEnd,_zoomStart,_zoomEnd,_panStart,_panEnd,lastPosition,mouseMoveStream,mouseUpStream,keydownStream,changeEvent,listeners",
  handleResize$0: function() {
    var t1, t2, t3;
    t1 = window.get$innerHeight();
    t2 = window.get$innerWidth();
    t3 = this.screen;
    t3.set$width(t2);
    t3.set$height(t1);
    t3.set$offsetLeft(0);
    t3.set$offsetTop(0);
    this.radius = $.$$div($.$$add(this.screen.get$width(), this.screen.get$height()), 4);
  },
  getMouseOnScreen$2: function(clientX, clientY) {
    return $.Vector2$($.$$mul($.$$div($.$$sub(clientX, this.screen.get$offsetLeft()), this.radius), 0.5), $.$$mul($.$$div($.$$sub(clientY, this.screen.get$offsetTop()), this.radius), 0.5));
  },
  getMouseProjectionOnBall$2: function(clientX, clientY) {
    var mouseOnBall, length, t1, projection;
    mouseOnBall = $.Vector3$($.$$div($.$$sub($.$$sub(clientX, $.$$mul(this.screen.get$width(), 0.5)), this.screen.get$offsetLeft()), this.radius), $.$$div($.$$sub($.$$add($.$$mul(this.screen.get$height(), 0.5), this.screen.get$offsetTop()), clientY), this.radius), 0);
    length = mouseOnBall.length$0();
    t1 = $.getInterceptor$JSNumber(length);
    if (t1.$gt(length, 1) === true)
      mouseOnBall.normalize$0();
    else {
      t1 = t1.$mul(length, length);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      mouseOnBall.z = Math.sqrt($.checkNum(1 - t1));
    }
    this._eye.copy$1(this.object.get$position()).subSelf$1(this.target);
    projection = this.object.get$up().clone$0().setLength$1(mouseOnBall.y);
    projection.addSelf$1(this.object.get$up().clone$0().crossSelf$1(this._eye).setLength$1(mouseOnBall.x));
    projection.addSelf$1(this._eye.setLength$1(mouseOnBall.z));
    return projection;
  },
  rotateCamera$0: function() {
    var angle, axis, quaternion, t1;
    angle = Math.acos($.checkNum($.$$div($.$$div(this._rotateStart.dot$1(this._rotateEnd), $.length0(this._rotateStart)), $.length0(this._rotateEnd))));
    if ($.CONSTANT5.get$isNaN(angle) !== true && !(angle === 0)) {
      axis = $.Vector3$(0, 0, 0).cross$2(this._rotateStart, this._rotateEnd).normalize$0();
      quaternion = $.Quaternion$(0, 0, 0, 1);
      t1 = this.rotateSpeed;
      if (typeof t1 !== "number")
        throw $.iae(t1);
      angle *= t1;
      quaternion.setFromAxisAngle$2(axis, -angle);
      quaternion.multiplyVector3$1(this._eye);
      quaternion.multiplyVector3$1(this.object.get$up());
      quaternion.multiplyVector3$1(this._rotateEnd);
      if (this.staticMoving === true)
        this._rotateStart.copy$1(this._rotateEnd);
      else {
        t1 = $.$$sub(this.dynamicDampingFactor, 1);
        if (typeof t1 !== "number")
          throw $.iae(t1);
        quaternion.setFromAxisAngle$2(axis, angle * t1);
        quaternion.multiplyVector3$1(this._rotateStart);
      }
    }
  },
  zoomCamera$0: function() {
    var t1, factor, t2, t3;
    t1 = $.$$mul($.$$sub(this._zoomEnd.get$y(), this._zoomStart.get$y()), this.zoomSpeed);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    factor = 1 + t1;
    if (!(factor === 1) && factor > 0) {
      this._eye.multiplyScalar$1(factor);
      t1 = this.staticMoving;
      t2 = this._zoomStart;
      t3 = this._zoomEnd;
      if (t1 === true)
        t2.copy$1(t3);
      else {
        t1 = t2.get$y();
        t2.set$y($.$$add(t1, $.$$mul($.$$sub(t3.get$y(), t1), this.dynamicDampingFactor)));
      }
    }
  },
  panCamera$0: function() {
    var mouseChange, pan, t1, t2;
    mouseChange = this._panEnd.clone$0().subSelf$1(this._panStart);
    if ($.$$eq(mouseChange.lengthSq$0(), 0) !== true) {
      mouseChange.multiplyScalar$1($.$$mul($.length0(this._eye), this.panSpeed));
      pan = this._eye.clone$0().crossSelf$1(this.object.get$up()).setLength$1(mouseChange.get$x());
      pan.addSelf$1(this.object.get$up().clone$0().setLength$1(mouseChange.get$y()));
      this.object.get$position().addSelf$1(pan);
      this.target.addSelf$1(pan);
      t1 = this.staticMoving;
      t2 = this._panEnd;
      if (t1 === true)
        this._panStart = t2;
      else {
        t1 = this._panStart;
        t1.addSelf$1(mouseChange.sub$2(t2, t1).multiplyScalar$1(this.dynamicDampingFactor));
      }
    }
  },
  checkDistances$0: function() {
    var t1, t2;
    if (this.noZoom !== true || this.noPan !== true) {
      t1 = this.object.get$position().lengthSq$0();
      t2 = this.maxDistance;
      if ($.$$gt(t1, $.$$mul(t2, t2)) === true)
        this.object.get$position().setLength$1(this.maxDistance);
      t1 = this._eye.lengthSq$0();
      t2 = this.minDistance;
      if ($.$$lt(t1, $.$$mul(t2, t2)) === true)
        this.object.get$position().add$2(this.target, this._eye.setLength$1(this.minDistance));
    }
  },
  update$0: function() {
    this._eye.copy$1(this.object.get$position()).subSelf$1(this.target);
    if (this.noRotate !== true)
      this.rotateCamera$0();
    if (this.noZoom !== true)
      this.zoomCamera$0();
    if (this.noPan !== true)
      this.panCamera$0();
    this.object.get$position().add$2(this.target, this._eye);
    this.checkDistances$0();
    this.object.lookAt$1(this.target);
    if ($.$$gt(this.lastPosition.distanceToSquared$1(this.object.get$position()), 0) === true) {
      this.dispatchEvent$1(this.changeEvent);
      this.lastPosition.copy$1(this.object.get$position());
    }
  },
  keydown$1: function(event) {
    if (this.enabled !== true)
      return;
    this.keydownStream.cancel$0();
    this._prevState = this._state;
    if ($.$$eq(this._state, -1) !== true)
      return;
    else if ($.$$eq(event.get$keyCode(), $.$$index(this.keys, 0)) === true && this.noRotate !== true)
      this._state = 0;
    else if ($.$$eq(event.get$keyCode(), $.$$index(this.keys, 1)) === true && this.noZoom !== true)
      this._state = 1;
    else if ($.$$eq(event.get$keyCode(), $.$$index(this.keys, 2)) === true && this.noPan !== true)
      this._state = 2;
  },
  get$keydown: function() {
    return new $.BoundClosure(this, "keydown$1");
  },
  keyup$1: function(event) {
    if (this.enabled !== true)
      return;
    this._state = this._prevState;
    this.keydownStream = window.get$onKeyDown().listen$1(this.get$keydown());
  },
  get$keyup: function() {
    return new $.BoundClosure(this, "keyup$1");
  },
  mousedown$1: function(event) {
    if (this.enabled !== true)
      return;
    event.preventDefault$0();
    event.stopPropagation$0();
    if ($.$$eq(this._state, -1) === true)
      this._state = event.get$button();
    if ($.$$eq(this._state, 0) === true && this.noRotate !== true) {
      this._rotateStart = this.getMouseProjectionOnBall$2(event.get$clientX(), event.get$clientY());
      this._rotateEnd = this._rotateStart;
    } else if ($.$$eq(this._state, 1) === true && this.noZoom !== true) {
      this._zoomStart = this.getMouseOnScreen$2(event.get$clientX(), event.get$clientY());
      this._zoomEnd = this._zoomStart;
    } else if ($.$$eq(this._state, 2) === true && this.noPan !== true) {
      this._panStart = this.getMouseOnScreen$2(event.get$clientX(), event.get$clientY());
      this._panEnd = this._panStart;
    }
    this.mouseMoveStream = document.get$onMouseMove().listen$1(this.get$mousemove());
    this.mouseUpStream = document.get$onMouseUp().listen$1(this.get$mouseup());
  },
  get$mousedown: function() {
    return new $.BoundClosure(this, "mousedown$1");
  },
  mousemove$1: function(event) {
    if (this.enabled !== true)
      return;
    if ($.$$eq(this._state, 0) === true && this.noRotate !== true)
      this._rotateEnd = this.getMouseProjectionOnBall$2(event.get$clientX(), event.get$clientY());
    else if ($.$$eq(this._state, 1) === true && this.noZoom !== true)
      this._zoomEnd = this.getMouseOnScreen$2(event.get$clientX(), event.get$clientY());
    else if ($.$$eq(this._state, 2) === true && this.noPan !== true)
      this._panEnd = this.getMouseOnScreen$2(event.get$clientX(), event.get$clientY());
  },
  get$mousemove: function() {
    return new $.BoundClosure(this, "mousemove$1");
  },
  mouseup$1: function(event) {
    if (this.enabled !== true)
      return;
    event.preventDefault$0();
    event.stopPropagation$0();
    this._state = -1;
    this.mouseMoveStream.cancel$0();
    this.mouseUpStream.cancel$0();
  },
  get$mouseup: function() {
    return new $.BoundClosure(this, "mouseup$1");
  },
  mousewheel$1: function(event) {
    var delta, t1, t2;
    if (this.enabled !== true)
      return;
    event.preventDefault$0();
    event.stopPropagation$0();
    if ($.$$eq(event.get$deltaY(), 0) !== true)
      delta = $.$$div(event.get$deltaY(), 40);
    else
      delta = $.$$eq(event.get$detail(), 0) !== true ? $.$$div($.$$negate(event.get$detail()), 3) : 0;
    t1 = this._zoomStart;
    t2 = t1.get$y();
    if (typeof delta !== "number")
      throw $.iae(delta);
    t1.set$y($.$$add(t2, 1 / delta * 0.05));
  },
  get$mousewheel: function() {
    return new $.BoundClosure(this, "mousewheel$1");
  },
  touchstart$1: function(event) {
    var t1;
    if (this.enabled !== true)
      return;
    event.preventDefault$0();
    switch ($.length(event.get$touches())) {
      case 1:
        t1 = this.getMouseProjectionOnBall$2($.$$index(event.get$touches(), 0).get$pageX(), $.$$index(event.get$touches(), 0).get$pageY());
        this._rotateEnd = t1;
        this._rotateStart = t1;
        break;
      case 2:
        t1 = this.getMouseOnScreen$2($.$$index(event.get$touches(), 0).get$pageX(), $.$$index(event.get$touches(), 0).get$pageY());
        this._zoomEnd = t1;
        this._zoomStart = t1;
        break;
      case 3:
        t1 = this.getMouseOnScreen$2($.$$index(event.get$touches(), 0).get$pageX(), $.$$index(event.get$touches(), 0).get$pageY());
        this._panEnd = t1;
        this._panStart = t1;
        break;
    }
  },
  get$touchstart: function() {
    return new $.BoundClosure(this, "touchstart$1");
  },
  touchmove$1: function(event) {
    if (this.enabled !== true)
      return;
    event.preventDefault$0();
    switch ($.length(event.get$touches())) {
      case 1:
        this._rotateEnd = this.getMouseProjectionOnBall$2($.$$index(event.get$touches(), 0).get$pageX(), $.$$index(event.get$touches(), 0).get$pageY());
        break;
      case 2:
        this._zoomEnd = this.getMouseOnScreen$2($.$$index(event.get$touches(), 0).get$pageX(), $.$$index(event.get$touches(), 0).get$pageY());
        break;
      case 3:
        this._panEnd = this.getMouseOnScreen$2($.$$index(event.get$touches(), 0).get$pageX(), $.$$index(event.get$touches(), 0).get$pageY());
        break;
    }
  },
  get$touchmove: function() {
    return new $.BoundClosure(this, "touchmove$1");
  },
  TrackballControls$2: function(object, domElement, domElement_check) {
    this.domElement = domElement_check === true ? domElement : $.document();
    this.enabled = true;
    this.screen = $.Screen$(0, 0, 0, 0);
    this.radius = $.$$div($.$$add(this.screen.get$width(), this.screen.get$height()), 4);
    this.rotateSpeed = 1;
    this.zoomSpeed = 1.2;
    this.panSpeed = 0.3;
    this.noRotate = false;
    this.noZoom = false;
    this.noPan = false;
    this.staticMoving = false;
    this.dynamicDampingFactor = 0.2;
    this.minDistance = 0;
    this.maxDistance = (1/0);
    this.keys = [65, 83, 68];
    this.target = $.Vector3$(0, 0, 0);
    this.lastPosition = $.Vector3$(0, 0, 0);
    this._state = -1;
    this._prevState = -1;
    this._eye = $.Vector3$(0, 0, 0);
    this._rotateStart = $.Vector3$(0, 0, 0);
    this._rotateEnd = $.Vector3$(0, 0, 0);
    this._zoomStart = $.Vector2$(0, 0);
    this._zoomEnd = $.Vector2$(0, 0);
    this._panStart = $.Vector2$(0, 0);
    this._panEnd = $.Vector2$(0, 0);
    this.changeEvent = $.EventEmitterEvent$(null, null, "change");
    domElement.get$onContextMenu().listen$1(new $.anon());
    domElement.get$onMouseDown().listen$1(this.get$mousedown());
    domElement.get$onMouseWheel().listen$1(this.get$mousewheel());
    domElement.get$onTouchStart().listen$1(this.get$touchstart());
    domElement.get$onTouchEnd().listen$1(this.get$touchstart());
    domElement.get$onTouchMove().listen$1(this.get$touchmove());
    this.keydownStream = $.window().get$onKeyDown().listen$1(this.get$keydown());
    $.window().get$onKeyUp().listen$1(this.get$keyup());
    this.handleResize$0();
  }
};

$$.Tween = {"": "Object;object=,_valuesStart>,_valuesEnd>,_duration,_delayTime,_startTime,_easingFunction,_interpolationFunction,_chainedTweens,_onStartCallback,_onStartCallbackFired,_onUpdateCallback,_onCompleteCallback",
  _easingFunction$1: function(arg0) {
    return this._easingFunction.call$1(arg0);
  },
  _interpolationFunction$2: function(arg0, arg1) {
    return this._interpolationFunction.call$2(arg0, arg1);
  },
  _onStartCallback$1: function(arg0) {
    return this._onStartCallback.call$1(arg0);
  },
  _onUpdateCallback$2: function(arg0, arg1) {
    return this._onUpdateCallback.call$2(arg0, arg1);
  },
  _onCompleteCallback$1: function(arg0) {
    return this._onCompleteCallback.call$1(arg0);
  },
  to$2: function(properties, duration) {
    var t1 = $ === duration;
    if (t1)
      duration = null;
    if (!t1)
      this._duration = duration;
    this._valuesEnd = properties;
  },
  _setPropertyValue$2: function(name, value) {
    switch (name) {
      case "x":
        this.object.set$x(value);
        break;
      case "y":
        this.object.set$y(value);
        break;
      case "z":
        this.object.set$z(value);
        break;
      default:
        throw $.$$throw($.Exception_Exception("The supplied property name ('" + $.S(name) + "') is not supported at this time."));
    }
  },
  _getPropertyValue$1: function(name) {
    switch (name) {
      case "x":
        return this.object.get$x();
      case "y":
        return this.object.get$y();
      case "z":
        return this.object.get$z();
      default:
        throw $.$$throw($.Exception_Exception("The supplied property name ('" + $.S(name) + "') is not supported at this time."));
    }
  },
  start$1$time: function(time) {
    var t1, t3;
    t1 = $ === time;
    if (t1)
      time = null;
    $.add($.get$_tweens(), this);
    this._onStartCallbackFired = false;
    this._startTime = !t1 ? time : $.Date_Date$now().get$millisecondsSinceEpoch();
    t1 = this._startTime;
    t3 = this._delayTime;
    if (typeof t1 !== "number")
      return this.start$1$time$bailout(1, t1);
    this._startTime = t1 + t3;
    $.forEach(this._valuesEnd, new $.Tween_start_anon(this));
  },
  start$1$time$bailout: function(state0, t1) {
    this._startTime = $.$$add(t1, this._delayTime);
    $.forEach(this._valuesEnd, new $.Tween_start_anon(this));
  },
  start$0: function() {
    return this.start$1$time($);
  },
  set$easing: function(easing) {
    this._easingFunction = easing;
  },
  set$onUpdate: function(callback) {
    this._onUpdateCallback = callback;
  },
  update$1: function(time) {
    var t1, t3, elapsed, value;
    if (typeof time !== "number")
      return this.update$1$bailout(1, time);
    t1 = this._startTime;
    if (typeof t1 !== "number")
      return this.update$1$bailout(2, time, t1);
    if (time < t1)
      return true;
    if (!this._onStartCallbackFired) {
      if (!(this._onStartCallback == null))
        this._onStartCallback$1(this.object);
      this._onStartCallbackFired = true;
    }
    t1 = this._startTime;
    if (typeof t1 !== "number")
      return this.update$1$bailout(3, time, t1, $.CONSTANT4);
    t1 = time - t1;
    t3 = this._duration;
    if (typeof t3 !== "number")
      return this.update$1$bailout(4, time, t1, t3);
    elapsed = t1 / t3;
    if (elapsed > 1)
      elapsed = 1;
    value = this._easingFunction$1(elapsed);
    $.forEach(this._valuesStart, new $.Tween_update_anon(this, value));
    if (!(this._onUpdateCallback == null))
      this._onUpdateCallback$2(this.object, value);
    if (elapsed === 1) {
      if (!(this._onCompleteCallback == null))
        this._onCompleteCallback$1(this.object);
      $.CONSTANT1.forEach$1(this._chainedTweens, new $.Tween_update_anon0(time));
      return false;
    }
    return true;
  },
  update$1$bailout: function(state0, time, t1, t3) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this._startTime;
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$JSNumber(time);
        if (t3.$lt(time, t1) === true)
          return true;
        if (!this._onStartCallbackFired) {
          if (!(this._onStartCallback == null))
            this._onStartCallback$1(this.object);
          this._onStartCallbackFired = true;
        }
        t1 = this._startTime;
      case 3:
        state0 = 0;
        t1 = t3.$sub(time, t1);
        t3 = this._duration;
      case 4:
        var elapsed, value;
        state0 = 0;
        elapsed = $.$$div(t1, t3);
        if ($.$$gt(elapsed, 1) === true)
          elapsed = 1;
        value = this._easingFunction$1(elapsed);
        $.forEach(this._valuesStart, new $.Tween_update_anon(this, value));
        if (!(this._onUpdateCallback == null))
          this._onUpdateCallback$2(this.object, value);
        if ($.$$eq(elapsed, 1) === true) {
          if (!(this._onCompleteCallback == null))
            this._onCompleteCallback$1(this.object);
          $.CONSTANT1.forEach$1(this._chainedTweens, new $.Tween_update_anon0(time));
          return false;
        }
        return true;
    }
  }
};

$$._EasingLinear = {"": "Object;",
  None$1: function(k) {
    return k;
  },
  get$None: function() {
    return new $.BoundClosure(this, "None$1");
  }
};

$$._EasingExponential = {"": "Object;",
  InOut$1: function(k) {
    var t1;
    if (typeof k !== "number")
      return this.InOut$1$bailout(1, k);
    if (k === 0)
      return 0;
    if (k === 1)
      return 1;
    k *= 2;
    if (k < 1) {
      t1 = k - 1;
      $.checkNum(1024);
      $.checkNum(t1);
      return 0.5 * Math.pow(1024, t1);
    }
    t1 = -10 * (k - 1);
    $.checkNum(2);
    $.checkNum(t1);
    return 0.5 * (-Math.pow(2, t1) + 2);
  },
  InOut$1$bailout: function(state0, k) {
    var t1 = $.getInterceptor(k);
    if (t1.$eq(k, 0) === true)
      return 0;
    if (t1.$eq(k, 1) === true)
      return 1;
    k = t1.$mul(k, 2);
    t1 = $.getInterceptor$JSNumber(k);
    if (t1.$lt(k, 1) === true) {
      t1 = t1.$sub(k, 1);
      $.checkNum(1024);
      $.checkNum(t1);
      return 0.5 * Math.pow(1024, t1);
    }
    t1 = t1.$sub(k, 1);
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t1 = -10 * t1;
    $.checkNum(2);
    $.checkNum(t1);
    return 0.5 * (-Math.pow(2, t1) + 2);
  },
  get$InOut: function() {
    return new $.BoundClosure(this, "InOut$1");
  }
};

$$.Maps__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true)
      $.add(this.result_1, ", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.Collections__emitObject(k, t1, t2);
    $.add(t1, ": ");
    $.Collections__emitObject(v, t1, t2);
  }
};

$$._LinkedHashMapImpl_forEach_anon = {"": "Closure;f_0",
  call$1: function(entry) {
    this.f_0.call$2(entry.get$key(), entry.get$value());
  }
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$$gt(t1.i_1, 0) === true)
      $.add(t1.sb_0, ", ");
    $.add(t1.sb_0, key);
    $.add(t1.sb_0, ": ");
    $.add(t1.sb_0, $.Error_safeToString(value));
    t1.i_1 = $.$$add(t1.i_1, 1);
  }
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"": "Closure;values_1,copies_2",
  call$1: function(value) {
    var t1, length, i, t2;
    t1 = this.values_1;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.call$1$bailout0(1, value, t1);
    length = t1.length;
    for (i = 0; i < length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    $.add(t1, value);
    $.add(this.copies_2, null);
    return length;
  },
  call$1$bailout0: function(state0, value, t1, t3, length) {
    switch (state0) {
      case 0:
        t1 = this.values_1;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        length = t3.get$length(t1);
      case 2:
        var i, t2;
        state0 = 0;
        for (i = 0; $.CONSTANT.$lt(i, length); ++i) {
          t2 = t3.$index(t1, i);
          if (t2 == null ? value == null : t2 === value)
            return i;
        }
        $.add(t1, value);
        $.add(this.copies_2, null);
        return length;
    }
  }
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"": "Closure;copies_3",
  call$1: function(i) {
    return $.$$index(this.copies_3, i);
  }
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"": "Closure;copies_4",
  call$2: function(i, x) {
    $.$$indexSet(this.copies_4, i, x);
  }
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"": "Closure;",
  call$0: function() {
  }
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"": "Closure;findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var t1, slot, t2, length, copy, t3, i, element, elementCopy, copy0, j, t4;
    t1 = {};
    if (e == null)
      return e;
    if (typeof e === "boolean")
      return e;
    if (typeof e === "number")
      return e;
    if (typeof e === "string")
      return e;
    if (typeof e === "object" && e !== null && !!e.$isDateTime)
      throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
    if (typeof e === "object" && e !== null && !!e.$isRegExp)
      throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    if (typeof e === "object" && e !== null && e.$isFile())
      return e;
    if (typeof e === "object" && e !== null && e.$isBlob())
      return e;
    if (typeof e === "object" && e !== null && e.$isFileList())
      return e;
    if (typeof e === "object" && e !== null && e.$isImageData())
      return e;
    if (typeof e === "object" && e !== null && e.$isArrayBuffer())
      return e;
    if (typeof e === "object" && e !== null && e.$isArrayBufferView())
      return e;
    if (typeof e === "object" && e !== null && e.$isMap()) {
      slot = this.findSlot_5.call$1(e);
      t1.copy_0 = this.readSlot_6.call$1(slot);
      t2 = t1.copy_0;
      if (!(t2 == null))
        return t2;
      t1.copy_0 = {};
      this.writeSlot_7.call$2(slot, t1.copy_0);
      e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
      return t1.copy_0;
    }
    if (typeof e === "object" && e !== null && (e.constructor === Array || e.$isList())) {
      if (typeof e !== "object" || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.$isJavaScriptIndexingBehavior())
        return this.call$1$bailout(1, e);
      length = e.length;
      slot = this.findSlot_5.call$1(e);
      t2 = this.readSlot_6;
      copy = t2.call$1(slot);
      if (!(copy == null)) {
        if (true === copy) {
          copy = new Array(length);
          this.writeSlot_7.call$2(slot, copy);
        }
        return copy;
      }
      t1 = e instanceof Array && !!!(e.immutable$list);
      t3 = this.writeSlot_7;
      if (t1) {
        t3.call$2(slot, true);
        for (i = 0; i < length; ++i) {
          if (i >= e.length)
            throw $.ioore(i);
          element = e[i];
          elementCopy = this.call$1(element);
          if (!(elementCopy == null ? element == null : elementCopy === element)) {
            copy0 = t2.call$1(slot);
            if (true === copy0) {
              copy0 = new Array(length);
              t3.call$2(slot, copy0);
            }
            if (typeof copy0 !== "object" || copy0 === null || (copy0.constructor !== Array || !!copy0.immutable$list) && !copy0.$isJavaScriptIndexingBehavior())
              return this.call$1$bailout(3, e, length, $.CONSTANT1, t3, elementCopy, copy0, slot, t2, copy, i);
            for (t1 = e.length, t2 = copy0.length, j = 0; j < i; ++j) {
              if (j >= t1)
                throw $.ioore(j);
              t4 = e[j];
              if (j >= t2)
                throw $.ioore(j);
              copy0[j] = t4;
            }
            if (i >= t2)
              throw $.ioore(i);
            copy0[i] = elementCopy;
            ++i;
            copy = copy0;
            break;
          }
        }
        if (copy == null) {
          t3.call$2(slot, e);
          copy = e;
        }
      } else {
        copy = new Array(length);
        t3.call$2(slot, copy);
        i = 0;
      }
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.$isJavaScriptIndexingBehavior())
        return this.call$1$bailout(4, e, length, $.CONSTANT1, null, null, null, null, null, copy, i);
      for (; i < length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    throw $.$$throw($.UnimplementedError$("structured clone of other type"));
  },
  call$1$bailout: function(state0, e, length, t2, t3, elementCopy, copy0, slot, t4, copy, i) {
    switch (state0) {
      case 0:
        t1 = {};
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (typeof e === "object" && e !== null && !!e.$isDateTime)
          throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
        if (typeof e === "object" && e !== null && !!e.$isRegExp)
          throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
        if (typeof e === "object" && e !== null && e.$isFile())
          return e;
        if (typeof e === "object" && e !== null && e.$isBlob())
          return e;
        if (typeof e === "object" && e !== null && e.$isFileList())
          return e;
        if (typeof e === "object" && e !== null && e.$isImageData())
          return e;
        if (typeof e === "object" && e !== null && e.$isArrayBuffer())
          return e;
        if (typeof e === "object" && e !== null && e.$isArrayBufferView())
          return e;
        if (typeof e === "object" && e !== null && e.$isMap()) {
          slot = this.findSlot_5.call$1(e);
          t1.copy_0 = this.readSlot_6.call$1(slot);
          t2 = t1.copy_0;
          if (!(t2 == null))
            return t2;
          t1.copy_0 = {};
          this.writeSlot_7.call$2(slot, t1.copy_0);
          e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
          return t1.copy_0;
        }
      default:
        var t1, element, j;
        if (state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === "object" && e !== null && (e.constructor === Array || e.$isList()))
          switch (state0) {
            case 0:
            case 1:
              state0 = 0;
              t2 = $.getInterceptor$JSStringJSArray(e);
              length = t2.get$length(e);
            case 2:
              state0 = 0;
              slot = this.findSlot_5.call$1(e);
              t4 = this.readSlot_6;
              copy = t4.call$1(slot);
              if (!(copy == null)) {
                if (true === copy) {
                  copy = new Array(length);
                  this.writeSlot_7.call$2(slot, copy);
                }
                return copy;
              }
              t1 = e instanceof Array && !!!(e.immutable$list);
              t3 = this.writeSlot_7;
            case 3:
              if (state0 === 3 || state0 === 0 && t1)
                switch (state0) {
                  case 0:
                    t3.call$2(slot, true);
                    i = 0;
                  case 3:
                    L0:
                      while (true)
                        switch (state0) {
                          case 0:
                            if (!$.CONSTANT.$lt(i, length))
                              break L0;
                            element = t2.$index(e, i);
                            elementCopy = this.call$1(element);
                          case 3:
                            if (state0 === 3 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                              switch (state0) {
                                case 0:
                                  copy0 = t4.call$1(slot);
                                  if (true === copy0) {
                                    copy0 = new Array(length);
                                    t3.call$2(slot, copy0);
                                  }
                                case 3:
                                  state0 = 0;
                                  for (t1 = $.getInterceptor$JSArray(copy0), j = 0; j < i; ++j)
                                    t1.$indexSet(copy0, j, t2.$index(e, j));
                                  t1.$indexSet(copy0, i, elementCopy);
                                  ++i;
                                  copy = copy0;
                                  break L0;
                              }
                            ++i;
                        }
                    if (copy == null) {
                      t3.call$2(slot, e);
                      copy = e;
                    }
                }
              else {
                copy = new Array(length);
                t3.call$2(slot, copy);
                i = 0;
              }
            case 4:
              state0 = 0;
              for (t1 = $.getInterceptor$JSArray(copy); $.CONSTANT.$lt(i, length); ++i)
                t1.$indexSet(copy, i, this.call$1(t2.$index(e, i)));
              return copy;
          }
        throw $.$$throw($.UnimplementedError$("structured clone of other type"));
    }
  }
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"": "Closure;box_0,walk_8",
  call$2: function(key, value) {
    this.box_0.copy_0[key] = this.walk_8.call$1(value);
  }
};

$$.DateTime_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$JSNumber(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) === true ? "-" : "";
    t1 = $.getInterceptor$JSNumber(absN);
    if (t1.$ge(absN, 1000) === true)
      return $.S(n);
    if (t1.$ge(absN, 100) === true)
      return sign + "0" + $.S(absN);
    if (t1.$ge(absN, 10) === true)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
};

$$.DateTime_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$JSNumber(n);
    if (t1.$ge(n, 100) === true)
      return $.S(n);
    if (t1.$ge(n, 10) === true)
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$.DateTime_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$$ge(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
};

$$.init_anon = {"": "Closure;",
  call$1: function(_) {
    return $.renderer.render$2($.scene, $.camera);
  }
};

$$.init_anon0 = {"": "Closure;targets_0",
  call$1: function(e) {
    return $.transform(e.get$target(), $.$$index(this.targets_0, "table"), 2000);
  }
};

$$.init_anon1 = {"": "Closure;targets_1",
  call$1: function(e) {
    return $.transform(e.get$target(), $.$$index(this.targets_1, "sphere"), 2000);
  }
};

$$.init_anon2 = {"": "Closure;targets_2",
  call$1: function(e) {
    return $.transform(e.get$target(), $.$$index(this.targets_2, "helix"), 2000);
  }
};

$$.init_anon3 = {"": "Closure;targets_3",
  call$1: function(e) {
    return $.transform(e.get$target(), $.$$index(this.targets_3, "grid"), 2000);
  }
};

$$.transform_anon = {"": "Closure;",
  call$2: function(object, value) {
    $.renderer.render$2($.scene, $.camera);
  }
};

$$.Tween_start_anon = {"": "Closure;this_0",
  call$2: function(property, _) {
    var t1, value, t2, t3;
    t1 = this.this_0;
    value = t1._getPropertyValue$1(property);
    if (!(value == null)) {
      t2 = $.$$index(t1.get$_valuesEnd(), property);
      if (typeof t2 === "object" && t2 !== null && (t2.constructor === Array || t2.$isList()) && $.isEmpty($.$$index(t1.get$_valuesEnd(), property)) !== true) {
        t2 = t1.get$_valuesEnd();
        t3 = [value];
        t3.push($.$$index(t2, property));
        $.$$indexSet(t2, property, t3);
      }
      $.$$indexSet(t1.get$_valuesStart(), property, value);
    }
  }
};

$$.Tween_update_anon = {"": "Closure;this_0,value_1",
  call$2: function(property, start) {
    var t1, t2, t3;
    t1 = this.this_0;
    t2 = $.$$index(t1.get$_valuesEnd(), property);
    t3 = this.value_1;
    if (typeof t2 === "object" && t2 !== null && (t2.constructor === Array || t2.$isList()))
      t1._setPropertyValue$2(property, t1._interpolationFunction$2(t2, t3));
    else
      t1._setPropertyValue$2(property, $.$$add(start, $.$$mul($.$$sub(t2, start), t3)));
  }
};

$$.Tween_update_anon0 = {"": "Closure;time_2",
  call$1: function(t) {
    return t.start$1(this.time_2);
  }
};

$$.FilteredElementList__filtered_anon = {"": "Closure;",
  call$1: function(n) {
    return typeof n === "object" && n !== null && n.$isElement();
  }
};

$$.anon = {"": "Closure;",
  call$1: function(event) {
    return event.preventDefault$0();
  }
};

$$.Vector3_setEulerFromRotationMatrix_anon = {"": "Closure;",
  call$1: function(x) {
    return $.min($.max(x, -1), 1);
  }
};

$$.Projector_projectScene_anon = {"": "Closure;box_0,this_1,near_2,far_3",
  call$1: function(o) {
    var object, t1, t2, t3, t4, t5, step;
    object = o.get$object();
    t1 = this.box_0;
    t1.object_11 = object;
    t1.modelMatrix_12 = t1.object_11.get$matrixWorld();
    t2 = this.this_1;
    t2.set$_vertexCount(0);
    t3 = t1.object_11;
    if (typeof t3 === "object" && t3 !== null && !!t3.$isMesh) {
      t1.geometry_14 = t3.geometry;
      t1.geometryMaterials_15 = t1.object_11.get$geometry().get$materials();
      t1.vertices_16 = t1.geometry_14.get$vertices();
      t1.faces_18 = t1.geometry_14.get$faces();
      t1.faceVertexUvs_22 = t1.geometry_14.get$faceVertexUvs();
      t1.rotationMatrix_13 = t1.object_11.get$matrixRotationWorld().extractRotation$1(t1.modelMatrix_12);
      t4 = t1.object_11.get$material();
      t1.isFaceMaterial_27 = typeof t4 === "object" && t4 !== null && !!t4.$isMeshFaceMaterial;
      t1.side_29 = t1.object_11.get$material().get$side();
      $.forEach(t1.vertices_16, new $.Projector_projectScene__anon(t1, t2, this.near_2, this.far_3));
      t1.fl_4 = $.length(t1.faces_18);
      for (t1.f_3 = 0; $.$$lt(t1.f_3, t1.fl_4) === true; t1.f_3 = $.$$add(t1.f_3, 1)) {
        t1.face_19 = $.$$index(t1.faces_18, t1.f_3);
        t1.material_28 = $.$$eq(t1.isFaceMaterial_27, true) === true ? $.$$index(t1.geometryMaterials_15, t1.face_19.get$materialIndex()) : t1.object_11.get$material();
        t3 = t1.material_28;
        if (t3 == null)
          continue;
        t1.side_29 = t3.get$side();
        t3 = t1.face_19;
        if (typeof t3 === "object" && t3 !== null && !!t3.$isFace3) {
          t1.v1_23 = $.$$index(t2.get$_vertexPool(), t3.a);
          t1.v2_24 = $.$$index(t2.get$_vertexPool(), t1.face_19.get$b());
          t1.v3_25 = $.$$index(t2.get$_vertexPool(), t1.face_19.get$c());
          t3 = t1.v1_23;
          if (t3.get$visible() === true && t1.v2_24.get$visible() === true && t1.v3_25.get$visible() === true) {
            t1.visible_0 = $.$$lt($.$$sub($.$$mul($.$$sub(t1.v3_25.get$positionScreen().get$x(), t3.get$positionScreen().get$x()), $.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v3_25.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y()), $.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v1_23.get$positionScreen().get$x()))), 0);
            if ($.$$eq(t1.side_29, 2) === true || $.$$eq(t1.visible_0, $.$$eq(t1.side_29, 0)) === true) {
              t1._face_20 = t2.getNextFace3InPool$0();
              t1._face_20.get$v1().copy$1(t1.v1_23);
              t1._face_20.get$v2().copy$1(t1.v2_24);
              t1._face_20.get$v3().copy$1(t1.v3_25);
            } else
              continue;
          } else
            continue;
        } else if (typeof t3 === "object" && t3 !== null && !!t3.$isFace4) {
          t1.v1_23 = $.$$index(t2.get$_vertexPool(), t3.a);
          t1.v2_24 = $.$$index(t2.get$_vertexPool(), t3.b);
          t1.v3_25 = $.$$index(t2.get$_vertexPool(), t3.c);
          t1.v4_26 = $.$$index(t2.get$_vertexPool(), t3.d);
          t3 = t1.v1_23;
          if (t3.get$visible() === true && t1.v2_24.get$visible() === true && t1.v3_25.get$visible() === true && t1.v4_26.get$visible() === true) {
            t1.visible_0 = $.$$lt($.$$sub($.$$mul($.$$sub(t1.v4_26.get$positionScreen().get$x(), t3.get$positionScreen().get$x()), $.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v4_26.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y()), $.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v1_23.get$positionScreen().get$x()))), 0) === true || $.$$lt($.$$sub($.$$mul($.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v3_25.get$positionScreen().get$x()), $.$$sub(t1.v4_26.get$positionScreen().get$y(), t1.v3_25.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v3_25.get$positionScreen().get$y()), $.$$sub(t1.v4_26.get$positionScreen().get$x(), t1.v3_25.get$positionScreen().get$x()))), 0) === true;
            if ($.$$eq(t1.side_29, 2) === true || $.$$eq(t1.visible_0, $.$$eq(t1.side_29, 0)) === true) {
              t1._face_20 = t2.getNextFace4InPool$0();
              t1._face_20.get$v1().copy$1(t1.v1_23);
              t1._face_20.get$v2().copy$1(t1.v2_24);
              t1._face_20.get$v3().copy$1(t1.v3_25);
              $.propertyTypeCast(t1._face_20, "$isIRenderableFace4").get$v4().copy$1(t1.v4_26);
            } else
              continue;
          } else
            continue;
        }
        t1._face_20.get$normalWorld().copy$1(t1.face_19.get$normal());
        if ($.$$eq(t1.visible_0, false) === true)
          t3 = $.$$eq(t1.side_29, 1) === true || $.$$eq(t1.side_29, 2) === true;
        else
          t3 = false;
        if (t3)
          t1._face_20.get$normalWorld().negate$0();
        t1.rotationMatrix_13.multiplyVector3$1(t1._face_20.get$normalWorld());
        t1._face_20.get$centroidWorld().copy$1(t1.face_19.get$centroid());
        t1.modelMatrix_12.multiplyVector3$1(t1._face_20.get$centroidWorld());
        t3 = t1._face_20;
        t3.get$centroidScreen().copy$1(t3.get$centroidWorld());
        t2.get$_viewProjectionMatrix().multiplyVector3$1(t1._face_20.get$centroidScreen());
        t1.faceVertexNormals_21 = t1.face_19.get$vertexNormals();
        t1.nl_6 = $.length(t1.faceVertexNormals_21);
        for (t1.n_5 = 0; $.$$lt(t1.n_5, t1.nl_6) === true; t1.n_5 = $.$$add(t1.n_5, 1)) {
          t1.normal_17 = $.$$index(t1._face_20.get$vertexNormalsWorld(), t1.n_5);
          t1.normal_17.copy$1($.$$index(t1.faceVertexNormals_21, t1.n_5));
          if (t1.visible_0 !== true)
            t3 = $.$$eq(t1.side_29, 1) === true || $.$$eq(t1.side_29, 2) === true;
          else
            t3 = false;
          if (t3)
            t1.normal_17.negate$0();
          t1.rotationMatrix_13.multiplyVector3$1(t1.normal_17);
        }
        t1.cl_8 = $.length(t1.faceVertexUvs_22);
        for (t1.c_7 = 0; $.$$lt(t1.c_7, t1.cl_8) === true; t1.c_7 = $.$$add(t1.c_7, 1)) {
          t3 = $.$$index($.$$index(t1.faceVertexUvs_22, t1.c_7), t1.f_3);
          if (typeof t3 !== "string" && (typeof t3 !== "object" || t3 === null || t3.constructor !== Array && !t3.$isJavaScriptIndexingBehavior()))
            return this.call$1$bailout1(1, t3, t1, t2);
          t1.ul_10 = t3.length;
          for (t1.u_9 = 0; $.$$lt(t1.u_9, t1.ul_10) === true; t1.u_9 = $.$$add(t1.u_9, 1)) {
            t4 = $.$$index(t1._face_20.get$uvs(), t1.c_7);
            t5 = t1.u_9;
            if (t5 !== (t5 | 0))
              throw $.iae(t5);
            if (t5 < 0 || t5 >= t3.length)
              throw $.ioore(t5);
            $.add(t4, t3[t5]);
          }
        }
        t3 = t1.material_28;
        t1._face_20.set$material(t3);
        t3 = t1.face_19.get$materialIndex();
        t3 = !(t3 == null) ? $.$$index(t1.geometryMaterials_15, t3) : null;
        t1._face_20.set$faceMaterial(t3);
        t3 = t1._face_20;
        t3.set$z(t3.get$centroidScreen().get$z());
        $.add(t2.get$_renderData().get$elements(), t1._face_20);
      }
    } else if (typeof t3 === "object" && t3 !== null && !!t3.$isLine) {
      t2.get$_modelViewProjectionMatrix().multiply$2(t2.get$_viewProjectionMatrix(), t1.modelMatrix_12);
      t1.vertices_16 = t1.object_11.get$geometry().get$vertices();
      t1.v1_23 = t2.getNextVertexInPool$0();
      t1.v1_23.get$positionScreen().copy$1($.$$index(t1.vertices_16, 0));
      t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_23.get$positionScreen());
      step = $.$$eq(t1.object_11.get$type(), 1) === true ? 2 : 1;
      t1.vl_2 = $.length(t1.vertices_16);
      for (t1.v_1 = 1; $.$$lt(t1.v_1, t1.vl_2) === true; t1.v_1 = $.$$add(t1.v_1, 1)) {
        t1.v1_23 = t2.getNextVertexInPool$0();
        t1.v1_23.get$positionScreen().copy$1($.$$index(t1.vertices_16, t1.v_1));
        t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_23.get$positionScreen());
        if ($.$$gt($.$$mod($.$$add(t1.v_1, 1), step), 0) === true)
          continue;
        t1.v2_24 = $.$$index(t2.get$_vertexPool(), $.$$sub(t2.get$_vertexCount(), 2));
        t2.get$_clippedVertex1PositionScreen().copy$1(t1.v1_23.get$positionScreen());
        t2.get$_clippedVertex2PositionScreen().copy$1(t1.v2_24.get$positionScreen());
        if (t2.clipLine$2(t2.get$_clippedVertex1PositionScreen(), t2.get$_clippedVertex2PositionScreen()) === true) {
          t3 = t2.get$_clippedVertex1PositionScreen();
          t4 = t3.get$w();
          if (typeof t4 !== "number")
            throw $.iae(t4);
          t3.multiplyScalar$1(1 / t4);
          t3 = t2.get$_clippedVertex2PositionScreen();
          t5 = t3.get$w();
          if (typeof t5 !== "number")
            throw $.iae(t5);
          t3.multiplyScalar$1(1 / t5);
          t2.set$_line(t2.getNextLineInPool$0());
          t2.get$_line().get$v1().get$positionScreen().copy$1(t2.get$_clippedVertex1PositionScreen());
          t2.get$_line().get$v2().get$positionScreen().copy$1(t2.get$_clippedVertex2PositionScreen());
          t3 = $.max(t2.get$_clippedVertex1PositionScreen().get$z(), t2.get$_clippedVertex2PositionScreen().get$z());
          t2.get$_line().set$z(t3);
          t3 = t1.object_11.get$material();
          t2.get$_line().set$material(t3);
          $.add(t2.get$_renderData().get$elements(), t2.get$_line());
        }
      }
    }
  },
  call$1$bailout1: function(state0, t3, t1, t2) {
    switch (state0) {
      case 0:
        object = o.get$object();
        t1 = this.box_0;
        t1.object_11 = object;
        t1.modelMatrix_12 = t1.object_11.get$matrixWorld();
        t2 = this.this_1;
        t2.set$_vertexCount(0);
        t3 = t1.object_11;
      case 1:
        var object, t4, step, t5;
        if (state0 === 1 || state0 === 0 && typeof t3 === "object" && t3 !== null && !!t3.$isMesh)
          switch (state0) {
            case 0:
              t1.geometry_14 = t3.get$geometry();
              t1.geometryMaterials_15 = t1.object_11.get$geometry().get$materials();
              t1.vertices_16 = t1.geometry_14.get$vertices();
              t1.faces_18 = t1.geometry_14.get$faces();
              t1.faceVertexUvs_22 = t1.geometry_14.get$faceVertexUvs();
              t1.rotationMatrix_13 = t1.object_11.get$matrixRotationWorld().extractRotation$1(t1.modelMatrix_12);
              t4 = t1.object_11.get$material();
              t1.isFaceMaterial_27 = typeof t4 === "object" && t4 !== null && !!t4.$isMeshFaceMaterial;
              t1.side_29 = t1.object_11.get$material().get$side();
              $.forEach(t1.vertices_16, new $.Projector_projectScene__anon(t1, t2, this.near_2, this.far_3));
              t1.fl_4 = $.length(t1.faces_18);
              t1.f_3 = 0;
            case 1:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      if (!($.$$lt(t1.f_3, t1.fl_4) === true))
                        break L0;
                    case 1:
                      c$0: {
                        switch (state0) {
                          case 0:
                            t1.face_19 = $.$$index(t1.faces_18, t1.f_3);
                            t1.material_28 = $.$$eq(t1.isFaceMaterial_27, true) === true ? $.$$index(t1.geometryMaterials_15, t1.face_19.get$materialIndex()) : t1.object_11.get$material();
                            t3 = t1.material_28;
                            if (t3 == null)
                              break c$0;
                            t1.side_29 = t3.get$side();
                            t3 = t1.face_19;
                            if (typeof t3 === "object" && t3 !== null && !!t3.$isFace3) {
                              t1.v1_23 = $.$$index(t2.get$_vertexPool(), t3.get$a());
                              t1.v2_24 = $.$$index(t2.get$_vertexPool(), t1.face_19.get$b());
                              t1.v3_25 = $.$$index(t2.get$_vertexPool(), t1.face_19.get$c());
                              t3 = t1.v1_23;
                              if (t3.get$visible() === true && t1.v2_24.get$visible() === true && t1.v3_25.get$visible() === true) {
                                t1.visible_0 = $.$$lt($.$$sub($.$$mul($.$$sub(t1.v3_25.get$positionScreen().get$x(), t3.get$positionScreen().get$x()), $.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v3_25.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y()), $.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v1_23.get$positionScreen().get$x()))), 0);
                                if ($.$$eq(t1.side_29, 2) === true || $.$$eq(t1.visible_0, $.$$eq(t1.side_29, 0)) === true) {
                                  t1._face_20 = t2.getNextFace3InPool$0();
                                  t1._face_20.get$v1().copy$1(t1.v1_23);
                                  t1._face_20.get$v2().copy$1(t1.v2_24);
                                  t1._face_20.get$v3().copy$1(t1.v3_25);
                                } else
                                  break c$0;
                              } else
                                break c$0;
                            } else if (typeof t3 === "object" && t3 !== null && !!t3.$isFace4) {
                              t1.v1_23 = $.$$index(t2.get$_vertexPool(), t3.get$a());
                              t1.v2_24 = $.$$index(t2.get$_vertexPool(), t3.get$b());
                              t1.v3_25 = $.$$index(t2.get$_vertexPool(), t3.get$c());
                              t1.v4_26 = $.$$index(t2.get$_vertexPool(), t3.get$d());
                              t3 = t1.v1_23;
                              if (t3.get$visible() === true && t1.v2_24.get$visible() === true && t1.v3_25.get$visible() === true && t1.v4_26.get$visible() === true) {
                                t1.visible_0 = $.$$lt($.$$sub($.$$mul($.$$sub(t1.v4_26.get$positionScreen().get$x(), t3.get$positionScreen().get$x()), $.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v4_26.get$positionScreen().get$y(), t1.v1_23.get$positionScreen().get$y()), $.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v1_23.get$positionScreen().get$x()))), 0) === true || $.$$lt($.$$sub($.$$mul($.$$sub(t1.v2_24.get$positionScreen().get$x(), t1.v3_25.get$positionScreen().get$x()), $.$$sub(t1.v4_26.get$positionScreen().get$y(), t1.v3_25.get$positionScreen().get$y())), $.$$mul($.$$sub(t1.v2_24.get$positionScreen().get$y(), t1.v3_25.get$positionScreen().get$y()), $.$$sub(t1.v4_26.get$positionScreen().get$x(), t1.v3_25.get$positionScreen().get$x()))), 0) === true;
                                if ($.$$eq(t1.side_29, 2) === true || $.$$eq(t1.visible_0, $.$$eq(t1.side_29, 0)) === true) {
                                  t1._face_20 = t2.getNextFace4InPool$0();
                                  t1._face_20.get$v1().copy$1(t1.v1_23);
                                  t1._face_20.get$v2().copy$1(t1.v2_24);
                                  t1._face_20.get$v3().copy$1(t1.v3_25);
                                  $.propertyTypeCast(t1._face_20, "$isIRenderableFace4").get$v4().copy$1(t1.v4_26);
                                } else
                                  break c$0;
                              } else
                                break c$0;
                            }
                            t1._face_20.get$normalWorld().copy$1(t1.face_19.get$normal());
                            if ($.$$eq(t1.visible_0, false) === true)
                              t3 = $.$$eq(t1.side_29, 1) === true || $.$$eq(t1.side_29, 2) === true;
                            else
                              t3 = false;
                            if (t3)
                              t1._face_20.get$normalWorld().negate$0();
                            t1.rotationMatrix_13.multiplyVector3$1(t1._face_20.get$normalWorld());
                            t1._face_20.get$centroidWorld().copy$1(t1.face_19.get$centroid());
                            t1.modelMatrix_12.multiplyVector3$1(t1._face_20.get$centroidWorld());
                            t3 = t1._face_20;
                            t3.get$centroidScreen().copy$1(t3.get$centroidWorld());
                            t2.get$_viewProjectionMatrix().multiplyVector3$1(t1._face_20.get$centroidScreen());
                            t1.faceVertexNormals_21 = t1.face_19.get$vertexNormals();
                            t1.nl_6 = $.length(t1.faceVertexNormals_21);
                            for (t1.n_5 = 0; $.$$lt(t1.n_5, t1.nl_6) === true; t1.n_5 = $.$$add(t1.n_5, 1)) {
                              t1.normal_17 = $.$$index(t1._face_20.get$vertexNormalsWorld(), t1.n_5);
                              t1.normal_17.copy$1($.$$index(t1.faceVertexNormals_21, t1.n_5));
                              if (t1.visible_0 !== true)
                                t3 = $.$$eq(t1.side_29, 1) === true || $.$$eq(t1.side_29, 2) === true;
                              else
                                t3 = false;
                              if (t3)
                                t1.normal_17.negate$0();
                              t1.rotationMatrix_13.multiplyVector3$1(t1.normal_17);
                            }
                            t1.cl_8 = $.length(t1.faceVertexUvs_22);
                            t1.c_7 = 0;
                          case 1:
                            L1:
                              while (true)
                                switch (state0) {
                                  case 0:
                                    if (!($.$$lt(t1.c_7, t1.cl_8) === true))
                                      break L1;
                                  case 1:
                                    c$1: {
                                      switch (state0) {
                                        case 0:
                                          t3 = $.$$index($.$$index(t1.faceVertexUvs_22, t1.c_7), t1.f_3);
                                        case 1:
                                          state0 = 0;
                                          t4 = $.getInterceptor(t3);
                                          if (t3 == null)
                                            break c$1;
                                          t1.ul_10 = t4.get$length(t3);
                                          for (t1.u_9 = 0; $.$$lt(t1.u_9, t1.ul_10) === true; t1.u_9 = $.$$add(t1.u_9, 1))
                                            $.add($.$$index(t1._face_20.get$uvs(), t1.c_7), t4.$index(t3, t1.u_9));
                                      }
                                    }
                                    t1.c_7 = $.$$add(t1.c_7, 1);
                                }
                            t3 = t1.material_28;
                            t1._face_20.set$material(t3);
                            t3 = t1.face_19.get$materialIndex();
                            t3 = !(t3 == null) ? $.$$index(t1.geometryMaterials_15, t3) : null;
                            t1._face_20.set$faceMaterial(t3);
                            t3 = t1._face_20;
                            t3.set$z(t3.get$centroidScreen().get$z());
                            $.add(t2.get$_renderData().get$elements(), t1._face_20);
                        }
                      }
                      t1.f_3 = $.$$add(t1.f_3, 1);
                  }
          }
        else if (typeof t3 === "object" && t3 !== null && !!t3.$isLine) {
          t2.get$_modelViewProjectionMatrix().multiply$2(t2.get$_viewProjectionMatrix(), t1.modelMatrix_12);
          t1.vertices_16 = t1.object_11.get$geometry().get$vertices();
          t1.v1_23 = t2.getNextVertexInPool$0();
          t1.v1_23.get$positionScreen().copy$1($.$$index(t1.vertices_16, 0));
          t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_23.get$positionScreen());
          step = $.$$eq(t1.object_11.get$type(), 1) === true ? 2 : 1;
          t1.vl_2 = $.length(t1.vertices_16);
          for (t1.v_1 = 1; $.$$lt(t1.v_1, t1.vl_2) === true; t1.v_1 = $.$$add(t1.v_1, 1)) {
            t1.v1_23 = t2.getNextVertexInPool$0();
            t1.v1_23.get$positionScreen().copy$1($.$$index(t1.vertices_16, t1.v_1));
            t2.get$_modelViewProjectionMatrix().multiplyVector4$1(t1.v1_23.get$positionScreen());
            if ($.$$gt($.$$mod($.$$add(t1.v_1, 1), step), 0) === true)
              continue;
            t1.v2_24 = $.$$index(t2.get$_vertexPool(), $.$$sub(t2.get$_vertexCount(), 2));
            t2.get$_clippedVertex1PositionScreen().copy$1(t1.v1_23.get$positionScreen());
            t2.get$_clippedVertex2PositionScreen().copy$1(t1.v2_24.get$positionScreen());
            if (t2.clipLine$2(t2.get$_clippedVertex1PositionScreen(), t2.get$_clippedVertex2PositionScreen()) === true) {
              t3 = t2.get$_clippedVertex1PositionScreen();
              t4 = t3.get$w();
              if (typeof t4 !== "number")
                throw $.iae(t4);
              t3.multiplyScalar$1(1 / t4);
              t3 = t2.get$_clippedVertex2PositionScreen();
              t5 = t3.get$w();
              if (typeof t5 !== "number")
                throw $.iae(t5);
              t3.multiplyScalar$1(1 / t5);
              t2.set$_line(t2.getNextLineInPool$0());
              t2.get$_line().get$v1().get$positionScreen().copy$1(t2.get$_clippedVertex1PositionScreen());
              t2.get$_line().get$v2().get$positionScreen().copy$1(t2.get$_clippedVertex2PositionScreen());
              t3 = $.max(t2.get$_clippedVertex1PositionScreen().get$z(), t2.get$_clippedVertex2PositionScreen().get$z());
              t2.get$_line().set$z(t3);
              t3 = t1.object_11.get$material();
              t2.get$_line().set$material(t3);
              $.add(t2.get$_renderData().get$elements(), t2.get$_line());
            }
          }
        }
    }
  }
};

$$.Projector_projectScene__anon = {"": "Closure;box_0,this_4,near_5,far_6",
  call$1: function(v) {
    var t1, t2, t3;
    t1 = this.this_4;
    t1.set$_vertex(t1.getNextVertexInPool$0());
    t1.get$_vertex().get$positionWorld().copy$1(v);
    this.box_0.modelMatrix_12.multiplyVector3$1(t1.get$_vertex().get$positionWorld());
    t2 = t1.get$_vertex();
    t2.get$positionScreen().copy$1(t2.get$positionWorld());
    t1.get$_viewProjectionMatrix().multiplyVector4$1(t1.get$_vertex().get$positionScreen());
    t3 = t1.get$_vertex().get$positionScreen();
    t3.set$x($.$$div(t3.get$x(), t3.get$w()));
    t3 = t1.get$_vertex().get$positionScreen();
    t3.set$y($.$$div(t3.get$y(), t3.get$w()));
    t2 = $.$$gt(t1.get$_vertex().get$positionScreen().get$z(), this.near_5) === true && $.$$lt(t1.get$_vertex().get$positionScreen().get$z(), this.far_6) === true;
    t1.get$_vertex().set$visible(t2);
  }
};

$$.Projector_projectScene_anon0 = {"": "Closure;box_0,this_7,camera_8",
  call$1: function(o) {
    var object, t1, t2, t3, t4, t5, t6, t7, t8;
    object = o.get$object();
    t1 = this.box_0;
    t1.object_11 = object;
    t1.modelMatrix_12 = t1.object_11.get$matrixWorld();
    t2 = t1.object_11;
    if (typeof t2 === "object" && t2 !== null && !!t2.$isParticle) {
      t2 = this.this_7;
      t2.get$_vector4().setValues$4($.$$index(t1.modelMatrix_12.get$elements(), 12), $.$$index(t1.modelMatrix_12.get$elements(), 13), $.$$index(t1.modelMatrix_12.get$elements(), 14), 1);
      t2.get$_viewProjectionMatrix().multiplyVector4$1(t2.get$_vector4());
      t3 = t2.get$_vector4();
      t3.set$z($.$$div(t3.get$z(), t3.get$w()));
      if ($.$$gt(t2.get$_vector4().get$z(), 0) === true && $.$$lt(t2.get$_vector4().get$z(), 1) === true) {
        t2.set$_particle(t2.getNextParticleInPool$0());
        t3 = t2.get$_vector4();
        t4 = $.$$div(t3.get$x(), t3.get$w());
        t2.get$_particle().set$x(t4);
        t4 = t2.get$_vector4();
        t5 = $.$$div(t4.get$y(), t4.get$w());
        t2.get$_particle().set$y(t5);
        t5 = t2.get$_vector4().get$z();
        t2.get$_particle().set$z(t5);
        t5 = t1.object_11.get$rotation().get$z();
        t2.get$_particle().set$rotation(t5);
        t5 = t1.object_11.get$scale().get$x();
        t6 = t2.get$_particle().get$x();
        t7 = t2.get$_vector4().get$x();
        t8 = this.camera_8;
        t5 = $.$$mul(t5, $.abs($.$$sub(t6, $.$$div($.$$add(t7, $.$$index(t8.get$projectionMatrix().get$elements(), 0)), $.$$add(t2.get$_vector4().get$w(), $.$$index(t8.get$projectionMatrix().get$elements(), 12))))));
        t2.get$_particle().get$scale().set$x(t5);
        t5 = $.$$mul(t1.object_11.get$scale().get$y(), $.abs($.$$sub(t2.get$_particle().get$y(), $.$$div($.$$add(t2.get$_vector4().get$y(), $.$$index(t8.get$projectionMatrix().get$elements(), 5)), $.$$add(t2.get$_vector4().get$w(), $.$$index(t8.get$projectionMatrix().get$elements(), 13))))));
        t2.get$_particle().get$scale().set$y(t5);
        t5 = $.propertyTypeCast(t1.object_11.get$material(), "$isMaterial");
        t2.get$_particle().set$material(t5);
        $.add(t2.get$_renderData().get$elements(), t2.get$_particle());
      }
    }
  }
};

$$.Object3D_updateMatrixWorld_anon = {"": "Closure;box_0",
  call$1: function(c) {
    return c.updateMatrixWorld$1$force(this.box_0.force_0);
  }
};

$$.Collection_clear_anon = {"": "Closure;",
  call$1: function(e) {
    return true;
  }
};

$$.FilteredElementList_removeRange_anon = {"": "Closure;",
  call$1: function(el) {
    return el.remove$0();
  }
};

$$.HashSet_forEach_anon = {"": "Closure;f_0",
  call$2: function(key, value) {
    this.f_0.call$1(key);
  }
};

$$.Stream_last_anon = {"": "Closure;box_0",
  call$1: function(value) {
    var t1 = this.box_0;
    t1.foundResult_1 = true;
    t1.result_0 = value;
  }
};

$$.Stream_last_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    var t1 = this.box_0;
    if (t1.foundResult_1 === true) {
      this.future_1._setValue$1(t1.result_0);
      return;
    }
    this.future_1._setError$1($.AsyncError$($.StateError$("No elements"), null));
  }
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$1: function(_) {
    var t1, error;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError() === true) {
      t1._clearUnhandledError$0();
      error = t1.get$_resultOrListeners();
      $.print("Uncaught Error: " + $.S(error.get$error()));
      t1 = error.get$stackTrace();
      if (!(t1 == null))
        $.print("Stack Trace:\n" + $.S(t1) + "\n");
      throw $.$$throw(error.get$error());
    }
  }
};

$$.anon0 = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  }
};

$$.internalCallback = {"": "Closure;this_2,callback_3",
  call$0: function() {
    var t1, t2;
    t1 = this.callback_3;
    t2 = this.this_2;
    t1.call$1(t2);
    t2.set$_handle(null);
    t2 = $globalState.get$topEventLoop();
    t2.set$activeTimerCount($.$$sub(t2.get$activeTimerCount(), 1));
  }
};

$$.Stream_toSet_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add(this.result_0, data);
  }
};

$$.Stream_toSet_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._setValue$1(this.result_1);
  }
};

$$.Stream_isEmpty_anon = {"": "Closure;box_0,future_1",
  call$1: function(_) {
    this.box_0.subscription_0.cancel$0();
    this.future_1._setValue$1(false);
  }
};

$$.Stream_isEmpty_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setValue$1(true);
  }
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$$add(t1.count_0, 1);
  }
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._setValue$1(this.box_0.count_0);
  }
};

$$.Stream_contains_anon = {"": "Closure;box_0,match_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_contains__anon(this.match_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_contains__anon0(t2, t3, element), $._cancelAndError(t2.subscription_0, t3), null);
  }
};

$$.Stream_contains__anon = {"": "Closure;match_3,element_4",
  call$0: function() {
    return this.match_3.call$1(this.element_4);
  }
};

$$.Stream_contains__anon0 = {"": "Closure;box_0,future_5,element_6",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._setValue$1(this.element_6);
    }
  }
};

$$.Stream_contains_anon0 = {"": "Closure;future_7",
  call$0: function() {
    this.future_7._setValue$1(false);
  }
};

$$._cancelAndError_anon = {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    this.subscription_0.cancel$0();
    this.future_1._setError$1(error);
  }
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$1: function(_) {
    this.errorFuture_1._sendError$1(this.error_0);
  }
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$1: function(_) {
    this.thenFuture_0._sendValue$1(this.value_1);
  }
};

$$.AsyncError_throwDelayed_reportError = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.print("Uncaught Error: " + $.S(t1.get$error()));
    t1 = t1.get$stackTrace();
    if (!(t1 == null))
      $.print("Stack Trace:\n" + $.S(t1) + "\n");
  }
};

$$.AsyncError_throwDelayed_anon = {"": "Closure;this_1,reportError_2",
  call$1: function(_) {
    this.reportError_2.call$0();
    throw $.$$throw(this.this_1.get$error());
  }
};

$$.EventEmitter_dispatchEvent_anon = {"": "Closure;event_0",
  call$1: function(listener) {
    return listener.call$1(this.event_0);
  }
};

$$.CssClassSet_clear_anon = {"": "Closure;",
  call$1: function(s) {
    return $.clear(s);
  }
};

$$.CssClassSet_removeMatching_anon = {"": "Closure;test_0",
  call$1: function(s) {
    return $.removeMatching(s, this.test_0);
  }
};

$$.CssClassSet_removeAll_anon = {"": "Closure;iterable_0",
  call$1: function(s) {
    return $.removeAll(s, this.iterable_0);
  }
};

$$.CssClassSet_addAll_anon = {"": "Closure;iterable_0",
  call$1: function(s) {
    return $.addAll(s, this.iterable_0);
  }
};

$$.CssClassSet_add_anon = {"": "Closure;value_0",
  call$1: function(s) {
    return $.add(s, this.value_0);
  }
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  }
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1;
    this.port_1.close$0();
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!value.$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(value);
  }
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.get$isWorker() === true)
      $globalState.get$mainManager().postMessage$1(workerMessage);
    else {
      t2 = $.$$index($globalState.get$managers(), t1.get$_workerId());
      if (!(t2 == null))
        t2.postMessage$1(workerMessage);
    }
  }
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,completer_1,values_2,pos_3",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = this.values_2;
    $.$$indexSet(t1, this.pos_3, value);
    t2 = this.box_0;
    t3 = $.$$sub(t2.remaining_0, 1);
    t2.remaining_0 = t3;
    if ($.$$eq(t3, 0) === true)
      this.completer_1.complete$1(t1);
  }
};

$$._FutureImpl__FutureImpl$wait_anon0 = {"": "Closure;box_0,completer_4",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.completed_1 !== true)
      this.completer_4.completeError$2(error.get$error(), error.get$stackTrace());
    t1.completed_1 = true;
  }
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$.Storage_values_anon = {"": "Closure;values_0",
  call$2: function(k, v) {
    return $.add(this.values_0, v);
  }
};

$$._LinkedHashMapImpl_values_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$value();
  }
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $.$$index($globalState.get$isolates(), t2.get$_isolateId());
    if (t4 == null)
      return;
    if (t2.get$_receivePort().get$_callback() == null)
      return;
    shouldSerialize = !($globalState.get$currentContext() == null) && $.$$eq($globalState.get$currentContext().get$id(), t2.get$_isolateId()) !== true;
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $globalState.get$topEventLoop().enqueue$3(t4, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  }
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (!(t1.get$_receivePort().get$_callback() == null)) {
      if (this.shouldSerialize_5 === true) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._callback$2(t2.msg_0, t2.reply_1);
    }
  }
};

$$.Stream_toList_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add(this.result_0, data);
  }
};

$$.Stream_toList_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._setValue$1(this.result_1);
  }
};

$$.Storage_keys_anon = {"": "Closure;keys_0",
  call$2: function(k, v) {
    return $.add(this.keys_0, k);
  }
};

$$._LinkedHashMapImpl_keys_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$key();
  }
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.$$indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  }
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (this.this_0.runIteration$0() !== true)
      return;
    $.Timer_Timer(0, new $._EventLoop__runHelper_next_anon(this));
  }
};

$$._EventLoop__runHelper_next_anon = {"": "Closure;next_1",
  call$1: function(_) {
    return this.next_1.call$0();
  }
};

$$.BoundClosure = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$$.BoundClosure0 = {"": "Closure;self,target,receiver",
  call$1: function(p0) {
    return this.self[this.target](this.receiver, p0);
  }
};
$$.BoundClosure1 = {"": "Closure;self,target,receiver",
  call$2: function(p0, p1) {
    return this.self[this.target](this.receiver, p0, p1);
  },
  call$1: function($receiver, other) {
    return this.call$2($receiver, other, 0);
  }
};
$$.BoundClosure2 = {"": "Closure;self,target",
  call$2: function(p0, p1) {
    return this.self[this.target](p0, p1);
  }
};
$$.BoundClosure3 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};
$$.BoundClosure4 = {"": "Closure;self,target",
  call$3: function(p0, p1, p2) {
    return this.self[this.target](p0, p1, p2);
  }
};
$.Strings__toJsStringArray = function(strings) {
  var length, i, string;
  $.checkNull(strings);
  if (!strings.constructor === Array)
    strings = $.List_List$from(strings);
  length = strings.length;
  for (i = 0; i < length; ++i) {
    string = strings[i];
    if (!(typeof string === "string"))
      throw $.$$throw($.ArgumentError$(string));
  }
  return strings;
};

$._callInIsolate = function(isolate, $function) {
  isolate.eval$1($function);
  $globalState.get$topEventLoop().run$0();
};

$._currentIsolate = function() {
  return $globalState.get$currentContext();
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.get$isWorker() === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.set$rootContext(rootContext);
  $globalState.set$currentContext(rootContext);
  rootContext.eval$1(entry);
  $globalState.get$topEventLoop().run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue(), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var scripts, len, i, script, src, t1;
  scripts = document.getElementsByTagName('script');
  for (len = scripts.length, i = 0; i < len; ++i) {
    script = scripts[i];
    src = script && script.src;
    t1 = $.getInterceptor(src);
    if (!(src == null) && t1.endsWith$1(src, "test_controller.js") !== true && t1.endsWith$1(src, "dart.js") !== true)
      return src;
  }
  return;
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo, context;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$JSStringJSArray(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      t2 = t1.$index(msg, "id");
      $globalState.set$currentManagerId(t2);
      entryPoint = $[t1.$index(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $globalState.get$topEventLoop().enqueue$3(context, new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $globalState.set$currentContext(context);
      $globalState.get$topEventLoop().run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (!(t1.$index(msg, "port") == null))
        t1.$index(msg, "port").send$2(t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.get$topEventLoop().run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      $.remove($globalState.get$managers(), sender.get$id());
      sender.terminate$0();
      $globalState.get$topEventLoop().run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.get$isWorker() === true)
        $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      else
        $.print(t1.$index(msg, "msg"));
      break;
    case "error":
      throw $.$$throw(t1.$index(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, exception;
  if ($globalState.get$isWorker() === true)
    $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($.Exception_Exception(trace));
    }

};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePort_ReceivePort();
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  replyTo.send$2("spawned", $.lazyPort.toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.set$onmessage(function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t1 = $globalState;
  workerId = t1.get$nextManagerId();
  t1.set$nextManagerId($.$$add(workerId, 1));
  worker.set$id(workerId);
  $.$$indexSet($globalState.get$managers(), workerId, worker);
  worker.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$$add(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return !($.get$globalThis().setTimeout == null);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var t1;
  if (typeof value === "string")
    return value;
  if (typeof value === "number" && !(value === 0) || typeof value === "boolean")
    return String(value);
  if (value == null)
    return "null";
  t1 = $.toString(value);
  if (!(typeof t1 === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return t1;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$$add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_objectTypeName = function(object) {
  var name, decompiled, t1;
  name = $.constructorNameFallback(object);
  if ($.$$eq(name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      name = decompiled;
  }
  t1 = $.getInterceptor$JSString(name);
  return t1.charCodeAt$1(name, 0) === 36 ? t1.substring$1(name, 1) : name;
};

$.Primitives_newFixedList = function(length) {
  var result = new Array(length);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT0;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString(this);
};

$.unwrapException = function(ex) {
  var message, type, name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, name, [], $.makeLiteralMap([]), null);
    else if ($.$$eq(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if ($.CONSTANT2.endsWith$1(message, "is null") === true || $.CONSTANT2.endsWith$1(message, "is undefined") === true || $.CONSTANT2.endsWith$1(message, "is null or undefined") === true || $.CONSTANT2.endsWith$1(message, "of undefined") === true || $.CONSTANT2.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(t1 ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, t1, key;
  iterator = $.CONSTANT1.get$iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (t1 = $.getInterceptor$JSArray(result); iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    t1.$indexSet(result, key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if (t1.$eq(numberOfArguments, 1) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $._currentIsolate();
  $function = function($0, $1) { return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, $0, $1); };
  closure.$identity = $function;
  return $function;
};

$.propertyTypeCastError = function(value, property) {
  var t1 = $.getInterceptor$JSStringJSArray(property);
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var name = tag;
  if (name === "Window")
    return "DOMWindow";
  if (name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name === "WebKitMutationObserver")
    return "MutationObserver";
  if (name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name === "AudioGainNode")
    return "GainNode";
  if (name === "AudioPannerNode")
    return "PannerNode";
  if (name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name === "Oscillator")
    return "OscillatorNode";
  if (name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name;
};

$.typeNameInOpera = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "ApplicationCache")
    return "DOMApplicationCache";
  return name;
};

$.typeNameInFirefox = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name === "DataTransfer")
    return "Clipboard";
  if (name === "DragEvent")
    return "MouseEvent";
  if (name === "GeoGeolocation")
    return "Geolocation";
  if (name === "MouseScrollEvent")
    return "WheelEvent";
  if (name === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name === "WorkerMessageEvent")
    return "MessageEvent";
  if (name === "XMLDocument")
    return "Document";
  return name;
};

$.typeNameInIE = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name === "ApplicationCache")
    return "DOMApplicationCache";
  if (name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name === "DataTransfer")
    return "Clipboard";
  if (name === "DragEvent")
    return "MouseEvent";
  if (name === "HTMLDDElement")
    return "HTMLElement";
  if (name === "HTMLDTElement")
    return "HTMLElement";
  if (name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name === "HTMLPhraseElement")
    return "HTMLElement";
  if (name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name === "MouseWheelEvent")
    return "WheelEvent";
  if (name === "Position")
    return "Geoposition";
  if (name === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return name;
};

$.constructorNameFallback = function(object) {
  var $constructor, name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof($constructor) === "function") {
    name = $constructor.name;
    if (typeof name === "string")
      t1 = !(name === "") && !(name === "Object") && !(name === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function($function, object, property) {
  return $function.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name, methods, arguments) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT20));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name + " is not a function");} else {return Object.prototype[name].apply(this, arguments);}};
  if ($.callHasOwnProperty(hasOwnPropertyFunction, proto, name) !== true)
    $.defineProperty(proto, name, method);
  return method.apply(obj, arguments);
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT20)[name];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined")
    $._dynamicMetadata([]);
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern, sb, e, isMultiLine, isCaseSensitive, t1, exception;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (isMultiLine === true)
    $.add(sb, "m");
  if (isCaseSensitive !== true)
    $.add(sb, "i");
  if (global === true)
    $.add(sb, "g");
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$isMultiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$isCaseSensitive(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length, patternLength, startIndex, position, t2, endIndex;
  result = $.List_List(0);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    t2 = $.getInterceptor(position);
    if (t2.$eq(position, -1) === true)
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = t2.$add(position, patternLength);
    if ($.$$eq(endIndex, length) === true)
      break;
    else
      startIndex = t2.$eq(position, endIndex) === true ? $.$$add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === "string")
    return $.$$eq($.CONSTANT2.indexOf$2(receiver, other, startIndex), -1) !== true;
  else if (typeof other === "object" && other !== null && !!other.$isJSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT2.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.CONSTANT2.substring$1(receiver, startIndex))).moveNext$0();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length, t1, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), true, false), true), to);
};

$.JsStringBuffer$ = function(content) {
  var t1 = typeof content === "string" ? content : $.S(content);
  return new $.JsStringBuffer(t1);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$.Future_Future$immediate = function(value) {
  return $._FutureImpl$immediate(value);
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListener__FutureListener$wrap = function(future) {
  return $._FutureListenerWrapper$(future);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, completer, values, i, i0;
  t1 = {};
  t2 = $.getInterceptor$JSStringJSArray(futures);
  if (t2.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CONSTANT21);
  completer = $.Completer_Completer();
  t1.remaining_0 = t2.get$length(futures);
  values = $.List_List$fixedLength(t2.get$length(futures), null);
  t1.completed_1 = false;
  for (t2 = t2.get$iterator(futures), i = 0; t2.moveNext$0() === true; i = i0) {
    i0 = i + 1;
    t2.get$current().then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, completer, values, i)).catchError$1(new $._FutureImpl__FutureImpl$wait_anon0(t1, completer));
  }
  return completer.get$future();
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$._nullDataHandler = function(value) {
};

$._nullErrorHandler = function(error) {
  error.throwDelayed$0();
};

$._nullDoneHandler = function() {
};

$._asyncError = function(error, stackTrace, cause) {
  if (typeof error === "object" && error !== null && !!error.$isAsyncError)
    return error;
  if (cause == null)
    return $.AsyncError$(error, stackTrace);
  return $.AsyncError$withCause(error, stackTrace, cause);
};

$._runUserCode = function(userCode, onSuccess, onError, cause) {
  var result, e, e0, s, exception, t1;
  result = null;
  try {
    result = userCode.call$0();
  } catch (exception) {
    t1 = $.unwrapException(exception);
    if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
      e = t1;
      return onError.call$1(e);
    } else {
      e0 = t1;
      s = $.getTraceFromException(exception);
      if (cause == null)
        onError.call$1($.AsyncError$(e0, s));
      else
        onError.call$1($.AsyncError$withCause(e0, s, cause));
    }
  }

  onSuccess.call$1(result);
};

$._cancelAndError = function(subscription, future) {
  return new $._cancelAndError_anon(subscription, future);
};

$._ForwardingStreamSubscription$ = function(_stream, _onData, _onError, _onDone, unsubscribeOnError) {
  var t1 = new $._ForwardingStreamSubscription(_stream, _onData, _onError, _onDone, null);
  t1._ForwardingStreamSubscription$5(_stream, _onData, _onError, _onDone, unsubscribeOnError);
  return t1;
};

$.WhereStream$ = function(source, test) {
  return new $.WhereStream(test, source);
};

$.Timer_Timer = function(milliseconds, callback) {
  return $.TimerImpl$(milliseconds, callback);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.$isJavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.CONSTANT1.$indexSet(dst, j, src[i]);
    }
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.CONSTANT1.$indexSet(dst, j, src[i]);
    }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.IterableMixinWorkaround_contains = function(iterable, element) {
  var t1, t2;
  for (t1 = $.iterator(iterable), t2 = $.getInterceptor(element); t1.moveNext$0() === true;)
    if (t2.$eq(element, t1.get$current()) === true)
      return true;
  return false;
};

$.IterableMixinWorkaround_removeAll = function(collection, elementsToRemove) {
  var t1, t2;
  for (t1 = $.iterator(elementsToRemove), t2 = $.getInterceptor$JSArray(collection); t1.moveNext$0() === true;)
    t2.remove$1(collection, t1.get$current());
};

$.IterableMixinWorkaround_removeAllList = function(collection, elementsToRemove) {
  $.removeMatching(collection, $.contains1(typeof elementsToRemove === "object" && elementsToRemove !== null && !!elementsToRemove.$isSet ? elementsToRemove : $.toSet(elementsToRemove)));
};

$.IterableMixinWorkaround_removeMatching = function(collection, test) {
  var elementsToRemove, t1, t2, t3;
  elementsToRemove = [];
  for (t1 = $.getInterceptor$JSArray(collection), t2 = t1.get$iterator(collection); t2.moveNext$0() === true;) {
    t3 = t2.get$current();
    if (test.call$1(t3) === true)
      elementsToRemove.push(t3);
  }
  t1.removeAll$1(collection, elementsToRemove);
};

$.IterableMixinWorkaround_removeMatchingList = function(list, test) {
  var retained, length, i, element, t1, t2, t3;
  if (typeof list !== "object" || list === null || (list.constructor !== Array || !!list.immutable$list) && !list.$isJavaScriptIndexingBehavior())
    return $.IterableMixinWorkaround_removeMatchingList$bailout(1, list, test);
  retained = [];
  length = list.length;
  for (i = 0; i < length; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    element = list[i];
    if (test.call$1(element) !== true)
      retained.push(element);
    if (length !== list.length)
      throw $.$$throw($.ConcurrentModificationError$(list));
  }
  t1 = retained.length;
  if (t1 === length)
    return;
  for (t2 = list.length, i = 0; i < t1; ++i) {
    t3 = retained[i];
    if (i >= t2)
      throw $.ioore(i);
    list[i] = t3;
  }
  $.CONSTANT1.set$length(list, t1);
};

$.IterableMixinWorkaround_removeMatchingList$bailout = function(state0, list, test) {
  var retained, length, i, element, t1;
  retained = [];
  length = list.length;
  for (i = 0; i < length; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    element = list[i];
    if (test.call$1(element) !== true)
      retained.push(element);
    if (length !== list.length)
      throw $.$$throw($.ConcurrentModificationError$(list));
  }
  if (retained.length === length)
    return;
  for (i = 0; t1 = retained.length, i < t1; ++i)
    $.CONSTANT1.$indexSet(list, i, retained[i]);
  $.CONSTANT1.set$length(list, t1);
};

$.IterableMixinWorkaround_joinList = function(list, separator) {
  var t1, buffer, i;
  if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
    return $.IterableMixinWorkaround_joinList$bailout(1, list, separator);
  if (typeof separator !== "string")
    return $.IterableMixinWorkaround_joinList$bailout(1, list, separator);
  if ($.isEmpty(list) === true)
    return "";
  t1 = list.length;
  if (t1 === 1) {
    if (0 >= t1)
      throw $.ioore(0);
    return $.S(list[0]);
  }
  buffer = $.StringBuffer_StringBuffer("");
  if (separator === "")
    for (t1 = $.getInterceptor$JSArray(buffer), i = 0; i < list.length; ++i)
      t1.add$1(buffer, $.S(list[i]));
  else {
    if (0 >= list.length)
      throw $.ioore(0);
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, $.S(list[0]));
    for (i = 1; i < list.length; ++i) {
      t1.add$1(buffer, separator);
      if (i >= list.length)
        throw $.ioore(i);
      t1.add$1(buffer, $.S(list[i]));
    }
  }
  return $.toString(buffer);
};

$.IterableMixinWorkaround_joinList$bailout = function(state0, list, separator) {
  var t1, buffer, t2, i;
  t1 = $.getInterceptor$JSStringJSArray(list);
  if (t1.get$isEmpty(list) === true)
    return "";
  if ($.$$eq(t1.get$length(list), 1) === true)
    return $.S(t1.$index(list, 0));
  buffer = $.StringBuffer_StringBuffer("");
  if (separator == null || $.$$eq(separator, "") === true)
    for (t2 = $.getInterceptor$JSArray(buffer), i = 0; $.CONSTANT.$lt(i, t1.get$length(list)); ++i)
      t2.add$1(buffer, $.S(t1.$index(list, i)));
  else {
    t2 = $.getInterceptor$JSArray(buffer);
    t2.add$1(buffer, $.S(t1.$index(list, 0)));
    for (i = 1; $.CONSTANT.$lt(i, t1.get$length(list)); ++i) {
      t2.add$1(buffer, separator);
      t2.add$1(buffer, $.S(t1.$index(list, i)));
    }
  }
  return $.toString(buffer);
};

$.IterableMixinWorkaround_sortList = function(l, compare) {
  if (compare == null)
    compare = $.Comparable_compare;
  $._Sort__doSort(l, 0, l.length - 1, compare);
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(0));
  return $.toString(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.$isList());
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, t2);
  for (t2 = $.iterator(c), first = true; t2.moveNext$0() === true; first = false) {
    t4 = t2.get$current();
    if (!first)
      t3.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t3.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.$isCollection()))
    if ($.Collections__containsRef(visiting, o) === true)
      $.add(result, typeof o === "object" && o !== null && (o.constructor === Array || o.$isList()) ? "[...]" : "{...}");
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && o.$isMap())
    if ($.Collections__containsRef(visiting, o) === true)
      $.add(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.CONSTANT.$tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length) {
  return $.$$and($.$$add(currentProbe, numberOfProbes), $.$$sub(length, 1));
};

$._HashMapImplKeyIterable$ = function(_map) {
  return new $._HashMapImplKeyIterable(_map);
};

$._HashMapImplValueIterable$ = function(_map) {
  return new $._HashMapImplValueIterable(_map);
};

$._HashMapImplKeyIterator$ = function(map) {
  return new $._HashMapImplKeyIterator(map, -1, null);
};

$._HashMapImplValueIterator$ = function(map) {
  return new $._HashMapImplValueIterator(map, -1, null);
};

$._HashMapImplIndexIterator$ = function(map) {
  return new $._HashMapImplIndexIterator(map, -1, null);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(0));
  return $.toString(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.forEach(m, new $.Maps__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(sentinel) {
  return new $._DoubleLinkedQueueIterator(sentinel, sentinel, null);
};

$.HashSet$ = function() {
  return new $.HashSet($._HashMapImpl$());
};

$.HashSet_HashSet$from = function(other) {
  var set, t1;
  set = $.HashSet$();
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    set.add$1(t1.get$current());
  return set;
};

$._HashSetIterator$ = function(set) {
  return new $._HashSetIterator($.CONSTANT1.get$iterator(set._backingMap._keys));
};

$._Sort__doSort = function(a, left, right, compare) {
  if (right - left <= 32)
    $._Sort_insertionSort_(a, left, right, compare);
  else
    $._Sort__dualPivotQuicksort(a, left, right, compare);
};

$._Sort_insertionSort_ = function(a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  if (typeof a !== "object" || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.$isJavaScriptIndexingBehavior())
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.$$gt(compare.call$2(a[t1], el), 0) === true;
        t1 = t2;
      } else
        t1 = false;
      t2 = a.length;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= t2)
        throw $.ioore(j0);
      t1 = a[j0];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      a[j] = t1;
      j = j0;
    }
    if (j < 0 || j >= t2)
      throw $.ioore(j);
    a[j] = el;
  }
};

$._Sort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.$$gt(compare.call$2(a[t1], el), 0) === true;
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= a.length)
        throw $.ioore(j0);
      $.CONSTANT1.$indexSet(a, j, a[j0]);
      j = j0;
    }
    $.CONSTANT1.$indexSet(a, j, el);
  }
};

$._Sort__dualPivotQuicksort = function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, t2, less, great, k, ak, comp, t3, great0, less0, t4;
  if (typeof a !== "object" || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.$isJavaScriptIndexingBehavior())
    return $._Sort__dualPivotQuicksort$bailout(1, a, left, right, compare);
  sixth = $.CONSTANT.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.CONSTANT.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.$$gt(compare.call$2(el1, el2), 0) === true) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el3), 0) === true) {
    t0 = el1;
    el1 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el2;
    el2 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el4), 0) === true) {
    t0 = el1;
    el1 = el4;
    el4 = t0;
  }
  if ($.$$gt(compare.call$2(el3, el4), 0) === true) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el5), 0) === true) {
    t0 = el2;
    el2 = el5;
    el5 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el2;
    el2 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  less = left + 1;
  great = right - 1;
  t1 = $.$$eq(compare.call$2(el2, el4), 0) === true;
  if (t1)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      t2 = $.getInterceptor(comp);
      if (t2.$eq(comp, 0) === true)
        continue;
      if (t2.$lt(comp, 0) === true) {
        if (k !== less) {
          t2 = a.length;
          if (less >= t2)
            throw $.ioore(less);
          t3 = a[less];
          if (k >= t2)
            throw $.ioore(k);
          a[k] = t3;
          a[less] = ak;
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          t2 = $.getInterceptor$JSNumber(comp);
          if (t2.$gt(comp, 0) === true) {
            --great;
            continue;
          } else {
            t2 = t2.$lt(comp, 0);
            t3 = a.length;
            great0 = great - 1;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              t2 = a[less];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              less0 = less + 1;
              if (great >= t3)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              t2 = a[great];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$lt(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          t2 = a.length;
          if (less >= t2)
            throw $.ioore(less);
          t3 = a[less];
          if (k >= t2)
            throw $.ioore(k);
          a[k] = t3;
          a[less] = ak;
        }
        ++less;
      } else if ($.$$gt(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$gt(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t2 = $.$$lt(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t3 = a.length;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              t2 = a[less];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              less0 = less + 1;
              if (great >= t3)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              t2 = a[great];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
  t2 = less - 1;
  t3 = a.length;
  if (t2 >= t3)
    throw $.ioore(t2);
  t4 = a[t2];
  if (left >= t3)
    throw $.ioore(left);
  a[left] = t4;
  a[t2] = el2;
  t2 = great + 1;
  if (t2 < 0 || t2 >= t3)
    throw $.ioore(t2);
  t4 = a[t2];
  if (right >= t3)
    throw $.ioore(right);
  a[right] = t4;
  a[t2] = el4;
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (t1)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!($.$$eq(compare.call$2(a[less], el2), 0) === true))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!($.$$eq(compare.call$2(a[great], el4), 0) === true))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$eq(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          t1 = a.length;
          if (less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.$$eq(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$eq(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.$$lt(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1 === true) {
              if (less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$._Sort__dualPivotQuicksort$bailout = function(state0, a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, t2, t3, great0, less0;
  sixth = $.CONSTANT.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.CONSTANT.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.$$gt(compare.call$2(el1, el2), 0) === true) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el3), 0) === true) {
    t0 = el1;
    el1 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el2;
    el2 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el4), 0) === true) {
    t0 = el1;
    el1 = el4;
    el4 = t0;
  }
  if ($.$$gt(compare.call$2(el3, el4), 0) === true) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el5), 0) === true) {
    t0 = el2;
    el2 = el5;
    el5 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el2;
    el2 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  $.CONSTANT1.$indexSet(a, index1, el1);
  $.CONSTANT1.$indexSet(a, index3, el3);
  $.CONSTANT1.$indexSet(a, index5, el5);
  if (left < 0 || left >= a.length)
    throw $.ioore(left);
  $.CONSTANT1.$indexSet(a, index2, a[left]);
  if (right < 0 || right >= a.length)
    throw $.ioore(right);
  $.CONSTANT1.$indexSet(a, index4, a[right]);
  less = left + 1;
  great = right - 1;
  t1 = $.$$eq(compare.call$2(el2, el4), 0) === true;
  if (t1)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      t2 = $.getInterceptor(comp);
      if (t2.$eq(comp, 0) === true)
        continue;
      if (t2.$lt(comp, 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT1.$indexSet(a, k, a[less]);
          $.CONSTANT1.$indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          t2 = $.getInterceptor$JSNumber(comp);
          if (t2.$gt(comp, 0) === true) {
            --great;
            continue;
          } else {
            t2 = t2.$lt(comp, 0);
            t3 = a.length;
            great0 = great - 1;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              $.CONSTANT1.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, less, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, k, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$lt(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT1.$indexSet(a, k, a[less]);
          $.CONSTANT1.$indexSet(a, less, ak);
        }
        ++less;
      } else if ($.$$gt(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$gt(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t2 = $.$$lt(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t3 = a.length;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              $.CONSTANT1.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, less, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, k, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
  t2 = less - 1;
  if (t2 >= a.length)
    throw $.ioore(t2);
  $.CONSTANT1.$indexSet(a, left, a[t2]);
  $.CONSTANT1.$indexSet(a, t2, el2);
  t2 = great + 1;
  if (t2 < 0 || t2 >= a.length)
    throw $.ioore(t2);
  $.CONSTANT1.$indexSet(a, right, a[t2]);
  $.CONSTANT1.$indexSet(a, t2, el4);
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (t1)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!($.$$eq(compare.call$2(a[less], el2), 0) === true))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!($.$$eq(compare.call$2(a[great], el4), 0) === true))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$eq(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT1.$indexSet(a, k, a[less]);
          $.CONSTANT1.$indexSet(a, less, ak);
        }
        ++less;
      } else if ($.$$eq(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$eq(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.$$lt(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1 === true) {
              if (less >= t2)
                throw $.ioore(less);
              $.CONSTANT1.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, less, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, k, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$.MappedIterable$ = function(_iterable, _f) {
  return new $.MappedIterable(_iterable, _f);
};

$.MappedIterator$ = function(_iterator, _f) {
  return new $.MappedIterator(null, _iterator, _f);
};

$.WhereIterable$ = function(_iterable, _f) {
  return new $.WhereIterable(_iterable, _f);
};

$.WhereIterator$ = function(_iterator, _f) {
  return new $.WhereIterator(_iterator, _f);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(list, list.length, -1, null);
};

$.Comparable_compare = function(a, b) {
  return $.compareTo(a, b);
};

$.Date_Date$now = function() {
  return $.DateTime_DateTime$now();
};

$.DateTime_DateTime$now = function() {
  return $.DateTime$_now();
};

$.DateTime$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.DateTime$_now = function() {
  var t1 = new $.DateTime($.Primitives_dateNow(), false);
  t1.DateTime$_now$0();
  return t1;
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString(object);
  if (typeof object === "string")
    return "\"" + $.S($.replaceAll($.replaceAll($.replaceAll($.CONSTANT2.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"")) + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.List_List = function(length) {
  if (!(typeof length === "number" && Math.floor(length) === length) || length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length) + "."));
  return new Array(length);
};

$.List_List$fixedLength = function(length, fill) {
  var result, t1, i;
  if (!(typeof length === "number" && Math.floor(length) === length) || length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length) + "."));
  result = $.Primitives_newFixedList(length);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.$isJavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, length, fill, result);
  if ($.$$eq(length, 0) !== true && !(fill == null))
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, length, fill, result) {
  var t1, i;
  if ($.$$eq(length, 0) !== true && !(fill == null))
    for (t1 = $.getInterceptor$JSStringJSArray(result), i = 0; $.CONSTANT.$lt(i, t1.get$length(result)); ++i)
      t1.$indexSet(result, i, fill);
  return result;
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(0);
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.Map_Map = function() {
  return $.HashMap_HashMap();
};

$.print = function(object) {
  if (typeof object === "string")
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.toString(object));
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.Set_Set = function() {
  return $.HashSet$();
};

$.Set_Set$from = function(other) {
  return $.HashSet_HashSet$from(other);
};

$.StringBuffer_StringBuffer = function(content) {
  return $.JsStringBuffer$(content);
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.Strings__toJsStringArray(strings).join(separator);
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.AbstractWorkerEvents$ = function(_ptr) {
  return new $.AbstractWorkerEvents(_ptr);
};

$.ApplicationCacheEvents$ = function(_ptr) {
  return new $.ApplicationCacheEvents(_ptr);
};

$.BatteryManagerEvents$ = function(_ptr) {
  return new $.BatteryManagerEvents(_ptr);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$.DedicatedWorkerContextEvents$ = function(_ptr) {
  return new $.DedicatedWorkerContextEvents(_ptr);
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, -1, null);
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.Element__determineMouseWheelEventType = function(e) {
  if (e.onwheel !== undefined)
    return "wheel";
  else if (e.onmousewheel !== undefined)
    return "mousewheel";
  else
    return "DOMMouseScroll";
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.EventSourceEvents$ = function(_ptr) {
  return new $.EventSourceEvents(_ptr);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.FileReaderEvents$ = function(_ptr) {
  return new $.FileReaderEvents(_ptr);
};

$.FileWriterEvents$ = function(_ptr) {
  return new $.FileWriterEvents(_ptr);
};

$.Float32Array_Float32Array = function(length) {
  return new Float32Array(length);
};

$.HttpRequestEvents$ = function(_ptr) {
  return new $.HttpRequestEvents(_ptr);
};

$.HttpRequestUploadEvents$ = function(_ptr) {
  return new $.HttpRequestUploadEvents(_ptr);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.MediaStreamEvents$ = function(_ptr) {
  return new $.MediaStreamEvents(_ptr);
};

$.MediaStreamTrackEvents$ = function(_ptr) {
  return new $.MediaStreamTrackEvents(_ptr);
};

$.MessagePortEvents$ = function(_ptr) {
  return new $.MessagePortEvents(_ptr);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.NotificationEvents$ = function(_ptr) {
  return new $.NotificationEvents(_ptr);
};

$.RtcDataChannelEvents$ = function(_ptr) {
  return new $.RtcDataChannelEvents(_ptr);
};

$.RtcPeerConnectionEvents$ = function(_ptr) {
  return new $.RtcPeerConnectionEvents(_ptr);
};

$.SharedWorkerContextEvents$ = function(_ptr) {
  return new $.SharedWorkerContextEvents(_ptr);
};

$.SpeechRecognitionEvents$ = function(_ptr) {
  return new $.SpeechRecognitionEvents(_ptr);
};

$.TextTrackEvents$ = function(_ptr) {
  return new $.TextTrackEvents(_ptr);
};

$.TextTrackCueEvents$ = function(_ptr) {
  return new $.TextTrackCueEvents(_ptr);
};

$.TextTrackListEvents$ = function(_ptr) {
  return new $.TextTrackListEvents(_ptr);
};

$.WebSocketEvents$ = function(_ptr) {
  return new $.WebSocketEvents(_ptr);
};

$.WindowEvents$ = function(_ptr) {
  return new $.WindowEvents(_ptr);
};

$.WorkerEvents$ = function(_ptr) {
  return new $.WorkerEvents(_ptr);
};

$.WorkerContextEvents$ = function(_ptr) {
  return new $.WorkerContextEvents(_ptr);
};

$._FrameSetElementEvents$ = function(_ptr) {
  return new $._FrameSetElementEvents(_ptr);
};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains($._Device_userAgent(), "Opera", 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains($._Device_userAgent(), "MSIE", 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains($._Device_userAgent(), "Firefox", 0);
};

$._EventStream$ = function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = window;
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.length(array), -1, null);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var copies, t1, t2, t3, t4, copy;
  copies = [];
  t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot([], copies);
  t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t1, t2, t3).call$1(value);
  t4.call$0();
  return copy;
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, t2, i;
  t1 = $.getInterceptor$JSStringJSArray(a);
  t2 = $.getInterceptor$JSNumber(startIndex);
  if (t2.$ge(startIndex, t1.get$length(a)) === true)
    return -1;
  if (t2.$lt(startIndex, 0) === true)
    startIndex = 0;
  for (i = startIndex; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, endIndex) === true; i = t2.$add(i, 1))
    if ($.$$eq(t1.$index(a, i), element) === true)
      return i;
  return -1;
};

$.Lists_getRange = function(a, start, length, accumulator) {
  var end, i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, length, accumulator);
  if (typeof start !== "number")
    return $.Lists_getRange$bailout(1, a, start, length, accumulator);
  if ($.$$lt(length, 0) === true)
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length !== "number")
    throw $.iae(length);
  end = start + length;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.Lists_getRange$bailout = function(state0, a, start, length, accumulator) {
  var t1, end, i, t2;
  if ($.$$lt(length, 0) === true)
    throw $.$$throw($.ArgumentError$("length"));
  t1 = $.getInterceptor$JSNumber(start);
  if (t1.$lt(start, 0) === true)
    throw $.$$throw($.RangeError$value(start));
  end = t1.$add(start, length);
  t1 = $.getInterceptor$JSStringJSArray(a);
  if ($.$$gt(end, t1.get$length(a)) === true)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, end) === true; i = t2.$add(i, 1))
    accumulator.push(t1.$index(a, i));
  return accumulator;
};

$.DatabaseEvents$ = function(_ptr) {
  return new $.DatabaseEvents(_ptr);
};

$.OpenDBRequestEvents$ = function(_ptr) {
  return new $.OpenDBRequestEvents(_ptr);
};

$.RequestEvents$ = function(_ptr) {
  return new $.RequestEvents(_ptr);
};

$.TransactionEvents$ = function(_ptr) {
  return new $.TransactionEvents(_ptr);
};

$.VersionChangeRequestEvents$ = function(_ptr) {
  return new $.VersionChangeRequestEvents(_ptr);
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$.min = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.CONSTANT5.get$isNegative(b) === true || $.CONSTANT5.get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return a + b;
        if ($.CONSTANT5.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.CONSTANT4.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.Random_Random = function(seed) {
  return $.CONSTANT8;
};

$.ElementInstanceEvents$ = function(_ptr) {
  return new $.ElementInstanceEvents(_ptr);
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.AudioContextEvents$ = function(_ptr) {
  return new $.AudioContextEvents(_ptr);
};

$.init = function() {
  var targets, i, t1, t2, number, t3, symbol, details, element, t4, t5, object, t6, t7, vector, phi, theta, t8;
  targets = $.makeLiteralMap(["table", [], "sphere", [], "helix", [], "grid", []]);
  $.camera = $.PerspectiveCamera$(75, $.$$div(window.get$innerWidth(), window.get$innerHeight()), 1, 5000);
  $.camera.get$position().set$z(1800);
  $.scene = $.Scene$();
  for (i = 0; $.CONSTANT.$lt(i, $.length($.get$table()));) {
    t1 = $.$$index($.get$table(), i);
    ++i;
    t2 = $.CONSTANT.toString$0(i);
    number = $.Element_Element$tag("div");
    number.set$text(t2);
    $.add(number.get$classes(), "number");
    t2 = $.getInterceptor$JSStringJSArray(t1);
    t3 = t2.$index(t1, 0);
    symbol = $.Element_Element$tag("div");
    symbol.set$text(t3);
    $.add(symbol.get$classes(), "symbol");
    t3 = $.S(t2.$index(t1, 1)) + "<br>" + $.S(t2.$index(t1, 2));
    details = $.Element_Element$tag("div");
    $.add(details.get$classes(), "details");
    details.set$innerHTML(t3);
    t3 = "rgba(0,127,127," + $.S($.$$add($.$$mul($.Random_Random(null).nextDouble$0(), 0.5), 0.25)) + ")";
    element = $.Element_Element$tag("div");
    $.add(element.get$classes(), "element");
    element.get$style().set$backgroundColor(t3);
    $.add(element.get$children(), number);
    $.add(element.get$children(), symbol);
    $.add(element.get$children(), details);
    t3 = $.$$sub($.Random_Random(null).nextInt$1(4000), 2000);
    t4 = $.$$sub($.Random_Random(null).nextInt$1(4000), 2000);
    t5 = $.$$sub($.Random_Random(null).nextInt$1(4000), 2000);
    object = $.CSS3DObject$(element);
    object.position.set$x(t5);
    object.position.set$y(t4);
    object.position.set$z(t3);
    $.add($.scene, object);
    $.add($.get$objects(), object);
  }
  for (t1 = $.getInterceptor$JSStringJSArray(targets), i = 0; $.CONSTANT.$lt(i, $.length($.get$objects())); ++i) {
    t2 = $.$$index($.get$table(), i);
    $.$$index($.get$objects(), i);
    t3 = t1.$index(targets, "table");
    t4 = $.getInterceptor$JSStringJSArray(t2);
    t5 = $.$$add($.$$negate($.$$mul(t4.$index(t2, 4), 200)), 1100);
    t6 = $.$$sub($.$$mul(t4.$index(t2, 3), 160), 1540);
    t7 = $.Object3D$();
    t7.position.set$x(t6);
    t7.position.set$y(t5);
    $.add(t3, t7);
  }
  vector = $.Vector3$(0, 0, 0);
  t2 = $.length($.get$objects());
  if (typeof t2 !== "number")
    return $.init$bailout(1, vector, targets, t1, t2);
  t4 = t2 * 3.141592653589793;
  i = 0;
  for (; i < t2; ++i) {
    $.$$index($.get$objects(), i);
    phi = Math.acos($.checkNum(-1 + 2 * i / t2));
    theta = Math.sqrt($.checkNum(t4)) * phi;
    t3 = Math.cos($.checkNum(phi));
    t5 = Math.sin($.checkNum(theta));
    t6 = Math.sin($.checkNum(phi));
    t7 = Math.cos($.checkNum(theta));
    t8 = Math.sin($.checkNum(phi));
    object = $.Object3D$();
    object.position.set$x(1000 * t7 * t8);
    object.position.set$y(1000 * t5 * t6);
    object.position.set$z(1000 * t3);
    vector.copy$1(object.position).multiplyScalar$1(2);
    object.lookAt$1(vector);
    $.add(t1.$index(targets, "sphere"), object);
  }
  vector = $.Vector3$(0, 0, 0);
  t2 = $.length($.get$objects());
  if (typeof t2 !== "number")
    return $.init$bailout(2, vector, targets, t1, t2);
  i = 0;
  for (; i < t2; ++i) {
    $.$$index($.get$objects(), i);
    phi = i * 0.2 + 3.141592653589793;
    t3 = Math.cos($.checkNum(phi));
    t4 = Math.sin($.checkNum(phi));
    object = $.Object3D$();
    object.position.set$x(1000 * t4);
    object.position.set$y(i * 10 - 600);
    object.position.set$z(1000 * t3);
    vector.copy$1(object.position);
    vector.x = $.$$mul(vector.x, 2);
    vector.z = $.$$mul(vector.z, 2);
    object.lookAt$1(vector);
    $.add(t1.$index(targets, "helix"), object);
  }
  for (i = 0; $.CONSTANT.$lt(i, $.length($.get$objects())); ++i) {
    $.$$index($.get$objects(), i);
    t2 = $.CONSTANT.$tdiv(i, 25);
    t3 = $.CONSTANT.$mod($.CONSTANT.$tdiv(i, 5), 5);
    t4 = $.CONSTANT.$mod(i, 5);
    object = $.Object3D$();
    object.position.set$x(t4 * 400 - 800);
    object.position.set$y(-t3 * 400 + 800);
    object.position.set$z(t2 * 1000 - 2000);
    $.add(t1.$index(targets, "grid"), object);
  }
  t2 = $.CSS3DRenderer$();
  t2.setSize$2(window.get$innerWidth(), window.get$innerHeight());
  t2.domElement.get$style().set$position("absolute");
  t2.domElement.get$style().set$top("0");
  $.renderer = t2;
  $.add(document.query$1("#container").get$children(), $.renderer.get$domElement());
  t2 = $.TrackballControls$($.camera, $.renderer.get$domElement());
  t2.rotateSpeed = 0.5;
  t2.addEventListener$2("change", new $.init_anon());
  $.controls = t2;
  $.add(document.query$1("#table").get$on().get$click(), new $.init_anon0(targets));
  $.add(document.query$1("#sphere").get$on().get$click(), new $.init_anon1(targets));
  $.add(document.query$1("#helix").get$on().get$click(), new $.init_anon2(targets));
  $.add(document.query$1("#grid").get$on().get$click(), new $.init_anon3(targets));
  $.transform(window, t1.$index(targets, "table"), 5000);
  $.add(window.get$on().get$resize(), $.onWindowResize);
};

$.init$bailout = function(state0, vector, targets, t1, t2) {
  switch (state0) {
    case 0:
      targets = $.makeLiteralMap(["table", [], "sphere", [], "helix", [], "grid", []]);
      $.camera = $.PerspectiveCamera$(75, $.$$div(window.get$innerWidth(), window.get$innerHeight()), 1, 5000);
      $.camera.get$position().set$z(1800);
      $.scene = $.Scene$();
      for (i = 0; $.CONSTANT.$lt(i, $.length($.get$table()));) {
        t1 = $.$$index($.get$table(), i);
        ++i;
        t2 = $.CONSTANT.toString$0(i);
        number = $.Element_Element$tag("div");
        number.set$text(t2);
        $.add(number.get$classes(), "number");
        t2 = $.getInterceptor$JSStringJSArray(t1);
        t3 = t2.$index(t1, 0);
        symbol = $.Element_Element$tag("div");
        symbol.set$text(t3);
        $.add(symbol.get$classes(), "symbol");
        t3 = $.S(t2.$index(t1, 1)) + "<br>" + $.S(t2.$index(t1, 2));
        details = $.Element_Element$tag("div");
        $.add(details.get$classes(), "details");
        details.set$innerHTML(t3);
        t3 = "rgba(0,127,127," + $.S($.$$add($.$$mul($.Random_Random(null).nextDouble$0(), 0.5), 0.25)) + ")";
        element = $.Element_Element$tag("div");
        $.add(element.get$classes(), "element");
        element.get$style().set$backgroundColor(t3);
        $.add(element.get$children(), number);
        $.add(element.get$children(), symbol);
        $.add(element.get$children(), details);
        t3 = $.$$sub($.Random_Random(null).nextInt$1(4000), 2000);
        t4 = $.$$sub($.Random_Random(null).nextInt$1(4000), 2000);
        t5 = $.$$sub($.Random_Random(null).nextInt$1(4000), 2000);
        object = $.CSS3DObject$(element);
        object.position.set$x(t5);
        object.position.set$y(t4);
        object.position.set$z(t3);
        $.add($.scene, object);
        $.add($.get$objects(), object);
      }
      for (t1 = $.getInterceptor$JSStringJSArray(targets), i = 0; $.CONSTANT.$lt(i, $.length($.get$objects())); ++i) {
        t2 = $.$$index($.get$table(), i);
        $.$$index($.get$objects(), i);
        t3 = t1.$index(targets, "table");
        t4 = $.getInterceptor$JSStringJSArray(t2);
        t5 = $.$$add($.$$negate($.$$mul(t4.$index(t2, 4), 200)), 1100);
        t6 = $.$$sub($.$$mul(t4.$index(t2, 3), 160), 1540);
        t7 = $.Object3D$();
        t7.position.set$x(t6);
        t7.position.set$y(t5);
        $.add(t3, t7);
      }
      vector = $.Vector3$(0, 0, 0);
      t2 = $.length($.get$objects());
    case 1:
      state0 = 0;
      i = 0;
      for (; $.CONSTANT.$lt(i, t2); ++i) {
        $.$$index($.get$objects(), i);
        if (typeof t2 !== "number")
          throw $.iae(t2);
        phi = Math.acos($.checkNum(-1 + 2 * i / t2));
        theta = Math.sqrt($.checkNum(t2 * 3.141592653589793)) * phi;
        t3 = Math.cos($.checkNum(phi));
        t4 = Math.sin($.checkNum(theta));
        t5 = Math.sin($.checkNum(phi));
        t6 = Math.cos($.checkNum(theta));
        t7 = Math.sin($.checkNum(phi));
        object = $.Object3D$();
        object.position.set$x(1000 * t6 * t7);
        object.position.set$y(1000 * t4 * t5);
        object.position.set$z(1000 * t3);
        vector.copy$1(object.position).multiplyScalar$1(2);
        object.lookAt$1(vector);
        $.add(t1.$index(targets, "sphere"), object);
      }
      vector = $.Vector3$(0, 0, 0);
      t2 = $.length($.get$objects());
    case 2:
      var i, number, t3, symbol, details, element, t4, t5, object, t6, t7, phi, theta;
      state0 = 0;
      i = 0;
      for (; $.CONSTANT.$lt(i, t2); ++i) {
        $.$$index($.get$objects(), i);
        phi = i * 0.2 + 3.141592653589793;
        t3 = Math.cos($.checkNum(phi));
        t4 = Math.sin($.checkNum(phi));
        object = $.Object3D$();
        object.position.set$x(1000 * t4);
        object.position.set$y(i * 10 - 600);
        object.position.set$z(1000 * t3);
        vector.copy$1(object.position);
        vector.x = $.$$mul(vector.x, 2);
        vector.z = $.$$mul(vector.z, 2);
        object.lookAt$1(vector);
        $.add(t1.$index(targets, "helix"), object);
      }
      for (i = 0; $.CONSTANT.$lt(i, $.length($.get$objects())); ++i) {
        $.$$index($.get$objects(), i);
        t2 = $.CONSTANT.$tdiv(i, 25);
        t3 = $.CONSTANT.$mod($.CONSTANT.$tdiv(i, 5), 5);
        t4 = $.CONSTANT.$mod(i, 5);
        object = $.Object3D$();
        object.position.set$x(t4 * 400 - 800);
        object.position.set$y(-t3 * 400 + 800);
        object.position.set$z(t2 * 1000 - 2000);
        $.add(t1.$index(targets, "grid"), object);
      }
      t2 = $.CSS3DRenderer$();
      t2.setSize$2(window.get$innerWidth(), window.get$innerHeight());
      t2.domElement.get$style().set$position("absolute");
      t2.domElement.get$style().set$top("0");
      $.renderer = t2;
      $.add(document.query$1("#container").get$children(), $.renderer.get$domElement());
      t2 = $.TrackballControls$($.camera, $.renderer.get$domElement());
      t2.rotateSpeed = 0.5;
      t2.addEventListener$2("change", new $.init_anon());
      $.controls = t2;
      $.add(document.query$1("#table").get$on().get$click(), new $.init_anon0(targets));
      $.add(document.query$1("#sphere").get$on().get$click(), new $.init_anon1(targets));
      $.add(document.query$1("#helix").get$on().get$click(), new $.init_anon2(targets));
      $.add(document.query$1("#grid").get$on().get$click(), new $.init_anon3(targets));
      $.transform(window, t1.$index(targets, "table"), 5000);
      $.add(window.get$on().get$resize(), $.onWindowResize);
  }
};

$.transform = function(target, targets, duration) {
  var i, t1, target0, t2, t3;
  if (typeof targets !== "string" && (typeof targets !== "object" || targets === null || targets.constructor !== Array && !targets.$isJavaScriptIndexingBehavior()))
    return $.transform$bailout(1, target, targets, duration);
  $._tweens = [];
  for (i = 0; $.CONSTANT.$lt(i, $.length($.get$objects())); ++i) {
    t1 = $.$$index($.get$objects(), i);
    if (i >= targets.length)
      throw $.ioore(i);
    target0 = targets[i];
    t2 = $.CONSTANT6.get$InOut();
    t3 = $.Tween$(t1.get$position());
    t3.to$2($.makeLiteralMap(["x", target0.get$position().get$x(), "y", target0.get$position().get$y(), "z", target0.get$position().get$z()]), $.$$add($.$$mul($.Random_Random(null).nextDouble$0(), duration), duration));
    t3.set$easing(t2);
    t3.start$0();
    t3 = $.CONSTANT6.get$InOut();
    t2 = $.Tween$(t1.get$rotation());
    target0 = target0.get$rotation();
    t2.to$2($.makeLiteralMap(["x", target0.get$x(), "y", target0.get$y(), "z", target0.get$z()]), $.$$add($.$$mul($.Random_Random(null).nextDouble$0(), duration), duration));
    t2.set$easing(t3);
    t2.start$0();
  }
  t1 = new $.transform_anon();
  t2 = $.Tween$(target);
  t2.to$2($.makeLiteralMap([]), duration * 2);
  t2.set$onUpdate(t1);
  t2.start$0();
};

$.transform$bailout = function(state0, target, targets, duration) {
  var t1, i, t2, target0, t3, t4;
  $._tweens = [];
  for (t1 = $.getInterceptor$JSStringJSArray(targets), i = 0; $.CONSTANT.$lt(i, $.length($.get$objects())); ++i) {
    t2 = $.$$index($.get$objects(), i);
    target0 = t1.$index(targets, i);
    t3 = $.CONSTANT6.get$InOut();
    t4 = $.Tween$(t2.get$position());
    t4.to$2($.makeLiteralMap(["x", target0.get$position().get$x(), "y", target0.get$position().get$y(), "z", target0.get$position().get$z()]), $.$$add($.$$mul($.Random_Random(null).nextDouble$0(), duration), duration));
    t4.set$easing(t3);
    t4.start$0();
    t4 = $.CONSTANT6.get$InOut();
    t3 = $.Tween$(t2.get$rotation());
    target0 = target0.get$rotation();
    t3.to$2($.makeLiteralMap(["x", target0.get$x(), "y", target0.get$y(), "z", target0.get$z()]), $.$$add($.$$mul($.Random_Random(null).nextDouble$0(), duration), duration));
    t3.set$easing(t4);
    t3.start$0();
  }
  t1 = new $.transform_anon();
  t2 = $.Tween$(target);
  t2.to$2($.makeLiteralMap([]), duration * 2);
  t2.set$onUpdate(t1);
  t2.start$0();
};

$.onWindowResize = function(_) {
  var t1, t2;
  t1 = $.$$div(window.get$innerWidth(), window.get$innerHeight());
  t2 = $.camera;
  t2.set$aspect(t1);
  t2.updateProjectionMatrix$0();
  $.renderer.setSize$2(window.get$innerWidth(), window.get$innerHeight());
};

$.animate = function(time) {
  window.requestAnimationFrame$1($.animate);
  $.update($);
  $.controls.update$0();
};

$.main = function() {
  $.init();
  window.requestAnimationFrame$1($.animate);
  $.update($);
  $.controls.update$0();
};

$.Screen$ = function(height, offsetLeft, offsetTop, width) {
  return new $.Screen(width, height, offsetLeft, offsetTop);
};

$.TrackballControls$ = function(object, domElement) {
  var t1, t2;
  t1 = $ === domElement;
  if (t1)
    domElement = null;
  t2 = new $.TrackballControls(null, null, object, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, $.makeLiteralMap([]));
  t2.TrackballControls$2(object, domElement, !t1);
  return t2;
};

$.update = function(time) {
  var t1, t2, l, i;
  t1 = $ === time;
  if (t1)
    time = null;
  if ($.isEmpty($.get$_tweens()) === true)
    return false;
  t2 = $.length($.get$_tweens());
  if (typeof t2 !== "number")
    return $.update$bailout(1, t2, time, t1);
  if (t1)
    time = $.Date_Date$now().get$millisecondsSinceEpoch();
  for (l = t2, i = 0; i < l;)
    if ($.$$index($.get$_tweens(), i).update$1(time) === true)
      ++i;
    else {
      $.removeAt($.get$_tweens(), i);
      --l;
    }
  return true;
};

$.update$bailout = function(state0, t2, time, t1) {
  var l, i;
  if (t1)
    time = $.Date_Date$now().get$millisecondsSinceEpoch();
  for (l = t2, i = 0; $.CONSTANT.$lt(i, l);)
    if ($.$$index($.get$_tweens(), i).update$1(time) === true)
      ++i;
    else {
      $.removeAt($.get$_tweens(), i);
      l = $.$$sub(l, 1);
    }
  return true;
};

$.Tween$ = function(object) {
  return new $.Tween(object, $.makeLiteralMap([]), $.makeLiteralMap([]), 1000, 0, null, $.CONSTANT7.get$None(), $.Interpolation_Linear, [], null, false, null, null);
};

$.Interpolation_Linear = function(v, k) {
  var t1, t2, t3, f, t4, i, t5;
  t1 = $.getInterceptor$JSStringJSArray(v);
  t2 = $.$$sub(t1.get$length(v), 1);
  t3 = $.getInterceptor$JSNumber(t2);
  f = t3.$mul(t2, k);
  t4 = $.getInterceptor$JSNumber(f);
  i = t4.floor$0(f);
  t5 = $.getInterceptor$JSNumber(k);
  if (t5.$lt(k, 0) === true)
    return $._InterpolationUtils_Linear.call$3(t1.$index(v, 0), t1.$index(v, 1), f);
  if (t5.$gt(k, 1) === true)
    return $._InterpolationUtils_Linear.call$3(t1.$index(v, t2), t1.$index(v, t3.$sub(t2, 1)), t3.$sub(t2, f));
  t3 = t1.$index(v, i);
  t5 = $.getInterceptor$JSNumber(i);
  return $._InterpolationUtils_Linear.call$3(t3, t1.$index(v, $.$$gt(t5.$add(i, 1), t2) === true ? t2 : t5.$add(i, 1)), t4.$sub(f, i));
};

$._InterpolationUtils_Linear = function(p0, p1, t) {
  return $.$$add($.$$mul($.$$sub(p1, p0), t), p0);
};

$.PerspectiveCamera$ = function(fov, aspect, near, far) {
  var t1, t2, t3, t4;
  t1 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t2 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t3 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t4 = $.Object3DCount;
  $.Object3DCount = $.$$add(t4, 1);
  t4 = new $.PerspectiveCamera(fov, aspect, null, null, null, null, null, null, t1, t2, t3, near, far, t4, "", $.makeLiteralMap([]), null, [], $.Vector3$(0, 1, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(1, 1, 1), "XYZ", null, null, null, true, null, $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true, true, $.Quaternion$(0, 0, 0, 1), false, 0, 1, true, false, false, true, $.Vector3$(0, 0, 0), null);
  t4.PerspectiveCamera$4(fov, aspect, near, far);
  return t4;
};

$.EventEmitterEvent$ = function(content, message, type) {
  return new $.EventEmitterEvent(type, message, content);
};

$.Frustum$ = function() {
  return new $.Frustum([$.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1)]);
};

$.Matrix4$ = function(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
  var t1 = new $.Matrix4($.Float32Array_Float32Array(16));
  t1.Matrix4$16(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44);
  return t1;
};

$.Object3D$ = function() {
  var t1 = $.Object3DCount;
  $.Object3DCount = $.$$add(t1, 1);
  return new $.Object3D(t1, "", $.makeLiteralMap([]), null, [], $.Vector3$(0, 1, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(1, 1, 1), "XYZ", null, null, null, true, null, $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true, true, $.Quaternion$(0, 0, 0, 1), false, 0, 1, true, false, false, true, $.Vector3$(0, 0, 0), null);
};

$.Projector$ = function() {
  var t1, t2, t3, t4, t5, t6;
  t1 = $.ProjectorRenderData$();
  t2 = $.Vector3$(0, 0, 0);
  t3 = $.Vector4$(0, 0, 0, 1);
  t4 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t5 = $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
  t6 = $.Frustum$();
  return new $.Projector([], [], [], [], [], [], null, null, null, null, null, null, null, null, null, null, t2, t3, $.Vector4$(0, 0, 0, 1), $.Vector4$(0, 0, 0, 1), t1, t4, t5, t6);
};

$.ProjectorRenderData$ = function() {
  return new $.ProjectorRenderData([], [], [], []);
};

$.Quaternion$ = function(x, y, z, w) {
  return new $.Quaternion(x, y, z, w);
};

$.Vector2$ = function(x, y) {
  return new $.Vector2(x, y);
};

$.Vector3$ = function(x, y, z) {
  return new $.Vector3(x, y, z);
};

$.Vector4$ = function(x, y, z, w) {
  return new $.Vector4(x, y, z, w);
};

$.CSS3DObject$ = function(element) {
  var t1 = $.Object3DCount;
  $.Object3DCount = $.$$add(t1, 1);
  t1 = new $.CSS3DObject(element, t1, "", $.makeLiteralMap([]), null, [], $.Vector3$(0, 1, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(1, 1, 1), "XYZ", null, null, null, true, null, $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true, true, $.Quaternion$(0, 0, 0, 1), false, 0, 1, true, false, false, true, $.Vector3$(0, 0, 0), null);
  t1.CSS3DObject$1(element);
  return t1;
};

$.CSS3DRenderer$ = function() {
  var t1 = new $.CSS3DRenderer(null, null, null, null, null, null, null);
  t1.CSS3DRenderer$0();
  return t1;
};

$.RenderableFace3$ = function() {
  return new $.RenderableFace3($.RenderableVertex$(), $.RenderableVertex$(), $.RenderableVertex$(), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), [$.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0)], [[]], null, null, null);
};

$.RenderableFace4$ = function() {
  return new $.RenderableFace4($.RenderableVertex$(), $.RenderableVertex$(), $.RenderableVertex$(), $.RenderableVertex$(), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), [$.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0)], [[]], null, null, null);
};

$.RenderableLine$ = function() {
  return new $.RenderableLine(null, $.RenderableVertex$(), $.RenderableVertex$(), null);
};

$.RenderableObject$ = function() {
  return new $.RenderableObject(null, null);
};

$.RenderableParticle$ = function() {
  return new $.RenderableParticle(null, null, null, null, $.Vector2$(0, 0), null);
};

$.RenderableVertex$ = function() {
  return new $.RenderableVertex($.Vector3$(0, 0, 0), $.Vector4$(0, 0, 0, 1), true);
};

$.Scene$ = function() {
  var t1 = $.Object3DCount;
  $.Object3DCount = $.$$add(t1, 1);
  t1 = new $.Scene(null, null, null, null, null, null, t1, "", $.makeLiteralMap([]), null, [], $.Vector3$(0, 1, 0), $.Vector3$(0, 0, 0), $.Vector3$(0, 0, 0), $.Vector3$(1, 1, 1), "XYZ", null, null, null, true, null, $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), $.Matrix4$(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), true, true, $.Quaternion$(0, 0, 0, 1), false, 0, 1, true, false, false, true, $.Vector3$(0, 0, 0), null);
  t1.Scene$0();
  return t1;
};

$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._nullDataHandler.call$1 = $._nullDataHandler;
$._nullDataHandler.$name = "_nullDataHandler";
$._nullErrorHandler.call$1 = $._nullErrorHandler;
$._nullErrorHandler.$name = "_nullErrorHandler";
$._nullDoneHandler.call$0 = $._nullDoneHandler;
$._nullDoneHandler.$name = "_nullDoneHandler";
$.Comparable_compare.call$2 = $.Comparable_compare;
$.Comparable_compare.$name = "Comparable_compare";
$.Element__determineMouseWheelEventType.call$1 = $.Element__determineMouseWheelEventType;
$.Element__determineMouseWheelEventType.$name = "Element__determineMouseWheelEventType";
$.onWindowResize.call$1 = $.onWindowResize;
$.onWindowResize.$name = "onWindowResize";
$.animate.call$1 = $.animate;
$.animate.$name = "animate";
$.Interpolation_Linear.call$2 = $.Interpolation_Linear;
$.Interpolation_Linear.$name = "Interpolation_Linear";
$._InterpolationUtils_Linear.call$3 = $._InterpolationUtils_Linear;
$._InterpolationUtils_Linear.$name = "_InterpolationUtils_Linear";
Isolate.$finishClasses($$);
$$ = {};
$.Gamepad = {builtin$cls: 'Gamepad'};
$.TextTrackCue = {builtin$cls: 'TextTrackCue'};
$.Map = {builtin$cls: 'Map'};
$.PathSeg = {builtin$cls: 'PathSeg'};
$.num = {builtin$cls: 'num'};
$.ElementInstance = {builtin$cls: 'ElementInstance'};
$.List = {builtin$cls: 'List'};
$.MediaStream = {builtin$cls: 'MediaStream'};
$.Match = {builtin$cls: 'Match'};
$.Set = {builtin$cls: 'Set'};
$.Touch = {builtin$cls: 'Touch'};
$.DomMimeType = {builtin$cls: 'DomMimeType'};
$.String = {builtin$cls: 'String'};
$.DomPlugin = {builtin$cls: 'DomPlugin'};
$.ClientRect = {builtin$cls: 'ClientRect'};
$.Element = {builtin$cls: 'Element'};
$.SourceBuffer = {builtin$cls: 'SourceBuffer'};
$.bool = {builtin$cls: 'bool'};
$._ManagerStub = {builtin$cls: '_ManagerStub'};
$.SpeechGrammar = {builtin$cls: 'SpeechGrammar'};
$.Node = {builtin$cls: 'Node'};
$.Entry = {builtin$cls: 'Entry'};
$.EntrySync = {builtin$cls: 'EntrySync'};
$.SpeechInputResult = {builtin$cls: 'SpeechInputResult'};
$.SpeechRecognitionResult = {builtin$cls: 'SpeechRecognitionResult'};
$.File = {builtin$cls: 'File'};
$.CssRule = {builtin$cls: 'CssRule'};
$.ReceivePort = {builtin$cls: 'ReceivePort'};
$.CssValue = {builtin$cls: 'CssValue'};
$.Length = {builtin$cls: 'Length'};
$.StyleSheet = {builtin$cls: 'StyleSheet'};
$.Transform = {builtin$cls: 'Transform'};
$.$int = {builtin$cls: '$int'};
$.Number = {builtin$cls: 'Number'};
$.TextTrack = {builtin$cls: 'TextTrack'};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT21 = Isolate.makeConstantList([]);
$.CONSTANT6 = new Isolate.$isolateProperties._EasingExponential();
$.CONSTANT17 = new Isolate.$isolateProperties.EventStreamProvider("mousemove");
$.CONSTANT20 = new Isolate.$isolateProperties.Object();
$.CONSTANT19 = new Isolate.$isolateProperties.EventStreamProvider("contextmenu");
$.CONSTANT16 = new Isolate.$isolateProperties.EventStreamProvider("mouseup");
$.CONSTANT14 = new Isolate.$isolateProperties._CustomEventStreamProvider(Isolate.$isolateProperties.Element__determineMouseWheelEventType);
$.CONSTANT13 = new Isolate.$isolateProperties.EventStreamProvider("touchstart");
$.CONSTANT15 = new Isolate.$isolateProperties.EventStreamProvider("mousewheel");
$.CONSTANT18 = new Isolate.$isolateProperties.EventStreamProvider("mousedown");
$.CONSTANT1 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT0 = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT = new Isolate.$isolateProperties.JSInt();
$.CONSTANT5 = new Isolate.$isolateProperties.JSDouble();
$.CONSTANT2 = new Isolate.$isolateProperties.JSString();
$.CONSTANT12 = new Isolate.$isolateProperties.EventStreamProvider("touchend");
$.CONSTANT9 = new Isolate.$isolateProperties.EventStreamProvider("keyup");
$.CONSTANT4 = new Isolate.$isolateProperties.JSNumber();
$.CONSTANT8 = new Isolate.$isolateProperties._Random();
$.CONSTANT11 = new Isolate.$isolateProperties.EventStreamProvider("touchmove");
$.CONSTANT3 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT10 = new Isolate.$isolateProperties.EventStreamProvider("keydown");
$.CONSTANT7 = new Isolate.$isolateProperties._EasingLinear();
$.lazyPort = null;
$._SPAWNED_SIGNAL = "spawned";
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_hashCodeSeed = 0;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._getTypeNameOf = null;
$._FutureImpl__INCOMPLETE = 0;
$._FutureImpl__VALUE = 1;
$._FutureImpl__ERROR = 2;
$._FutureImpl__UNHANDLED_ERROR = 4;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT3;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$._Sort__INSERTION_SORT_THRESHOLD = 32;
$.DateTime__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.double_INFINITY = (1/0);
$._cachedBrowserPrefix = null;
$.Element_mouseWheelEvent = Isolate.$isolateProperties.CONSTANT14;
$.Element_contextMenuEvent = Isolate.$isolateProperties.CONSTANT19;
$.Element_keyDownEvent = Isolate.$isolateProperties.CONSTANT10;
$.Element_keyUpEvent = Isolate.$isolateProperties.CONSTANT9;
$.Element_mouseDownEvent = Isolate.$isolateProperties.CONSTANT18;
$.Element_mouseMoveEvent = Isolate.$isolateProperties.CONSTANT17;
$.Element_mouseUpEvent = Isolate.$isolateProperties.CONSTANT16;
$.Element_touchEndEvent = Isolate.$isolateProperties.CONSTANT12;
$.Element_touchMoveEvent = Isolate.$isolateProperties.CONSTANT11;
$.Element_touchStartEvent = Isolate.$isolateProperties.CONSTANT13;
$.PI = 3.141592653589793;
$.ElementInstance_contextMenuEvent = Isolate.$isolateProperties.CONSTANT19;
$.ElementInstance_keyDownEvent = Isolate.$isolateProperties.CONSTANT10;
$.ElementInstance_keyUpEvent = Isolate.$isolateProperties.CONSTANT9;
$.ElementInstance_mouseDownEvent = Isolate.$isolateProperties.CONSTANT18;
$.ElementInstance_mouseMoveEvent = Isolate.$isolateProperties.CONSTANT17;
$.ElementInstance_mouseUpEvent = Isolate.$isolateProperties.CONSTANT16;
$.ElementInstance_mouseWheelEvent = Isolate.$isolateProperties.CONSTANT15;
$.camera = null;
$.scene = null;
$.renderer = null;
$.controls = null;
$.STATE_NONE = -1;
$.STATE_ROTATE = 0;
$.STATE_ZOOM = 1;
$.STATE_PAN = 2;
$.Easing_Linear = Isolate.$isolateProperties.CONSTANT7;
$.Easing_Exponential = Isolate.$isolateProperties.CONSTANT6;
$.Matrix4____v1 = null;
$.Matrix4____v2 = null;
$.Matrix4____v3 = null;
$.LinePieces = 1;
$.Object3DCount = 0;
$.FrontSide = 0;
$.BackSide = 1;
$.DoubleSide = 2;
$.isEmpty = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$isEmpty(receiver);
};
$.$$index = function(receiver, a0) {
  return $.getInterceptor$JSStringJSArray(receiver).$index(receiver, a0);
};
$.removeAt = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeAt$1(receiver, a0);
};
$.length = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$length(receiver);
};
$.$$sub = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$sub(receiver, a0);
};
$.replaceAll = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).replaceAll$2(receiver, a0, a1);
};
$.toString = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.$$add = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$add(receiver, a0);
};
$.$$indexSet = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).$indexSet(receiver, a0, a1);
};
$.$$gt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$gt(receiver, a0);
};
$.iterator = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$iterator(receiver);
};
$.$$lt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$lt(receiver, a0);
};
$.contains = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).contains$2(receiver, a0, a1);
};
$.contains1 = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$contains(receiver);
};
$.$$mul = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$mul(receiver, a0);
};
$.indexOf = function(receiver, a0, a1) {
  return $.getInterceptor$JSStringJSArray(receiver).indexOf$2(receiver, a0, a1);
};
$.hashCode = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.split = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).split$1(receiver, a0);
};
$.getRange = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).getRange$2(receiver, a0, a1);
};
$.join = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).join$1(receiver, a0);
};
$.$$xor = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$xor(receiver, a0);
};
$.abs = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).abs$0(receiver);
};
$.$$eq = function(receiver, a0) {
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.removeRange = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).removeRange$2(receiver, a0, a1);
};
$.clear = function(receiver) {
  return $.getInterceptor$JSArray(receiver).clear$0(receiver);
};
$.$$le = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$le(receiver, a0);
};
$.compareTo = function(receiver, a0) {
  return $.getInterceptor$JSStringJSNumber(receiver).compareTo$1(receiver, a0);
};
$.$$negate = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).$negate(receiver);
};
$.sort = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).sort$1(receiver, a0);
};
$.indexOf0 = function(receiver, a0) {
  return $.getInterceptor$JSStringJSArray(receiver).indexOf$1(receiver, a0);
};
$.$$and = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$and(receiver, a0);
};
$.last = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$last(receiver);
};
$.addAll = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addAll$1(receiver, a0);
};
$.$$tdiv = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$tdiv(receiver, a0);
};
$.length0 = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).length$0(receiver);
};
$.$$div = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$div(receiver, a0);
};
$.length1 = function(receiver, value) {
  return $.getInterceptor$JSArray(receiver).set$length(receiver, value);
};
$.trim = function(receiver) {
  return $.getInterceptor$JSString(receiver).trim$0(receiver);
};
$.where = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).where$1(receiver, a0);
};
$.removeMatching = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeMatching$1(receiver, a0);
};
$.allMatches = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).allMatches$1(receiver, a0);
};
$.removeAll = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeAll$1(receiver, a0);
};
$.toSet = function(receiver) {
  return $.getInterceptor$JSArray(receiver).toSet$0(receiver);
};
$.$$ge = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$ge(receiver, a0);
};
$.$$mod = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$mod(receiver, a0);
};
$.add = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).add$1(receiver, a0);
};
$.toList = function(receiver) {
  return $.getInterceptor$JSArray(receiver).toList$0(receiver);
};
$.forEach = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).forEach$1(receiver, a0);
};
$.contains0 = function(receiver, a0) {
  return $.getInterceptor$JSStringJSArray(receiver).contains$1(receiver, a0);
};
$.$$shl = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$shl(receiver, a0);
};
$.remove = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).remove$1(receiver, a0);
};
$.addLast = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addLast$1(receiver, a0);
};
$.$$or = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$or(receiver, a0);
};
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSStringJSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== (void 0);
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "quoteRegExp", "quoteRegExp", "get$quoteRegExp", function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", true, false);
});
Isolate.$lazy($, "objects", "objects", "get$objects", function() {
  return [];
});
Isolate.$lazy($, "table", "table", "get$table", function() {
  return [["H", "Hydrogen", "1.00794", 1, 1], ["He", "Helium", "4.002602", 18, 1], ["Li", "Lithium", "6.941", 1, 2], ["Be", "Beryllium", "9.012182", 2, 2], ["B", "Boron", "10.811", 13, 2], ["C", "Carbon", "12.0107", 14, 2], ["N", "Nitrogen", "14.0067", 15, 2], ["O", "Oxygen", "15.9994", 16, 2], ["F", "Fluorine", "18.9984032", 17, 2], ["Ne", "Neon", "20.1797", 18, 2], ["Na", "Sodium", "22.98976...", 1, 3], ["Mg", "Magnesium", "24.305", 2, 3], ["Al", "Aluminium", "26.9815386", 13, 3], ["Si", "Silicon", "28.0855", 14, 3], ["P", "Phosphorus", "30.973762", 15, 3], ["S", "Sulfur", "32.065", 16, 3], ["Cl", "Chlorine", "35.453", 17, 3], ["Ar", "Argon", "39.948", 18, 3], ["K", "Potassium", "39.948", 1, 4], ["Ca", "Calcium", "40.078", 2, 4], ["Sc", "Scandium", "44.955912", 3, 4], ["Ti", "Titanium", "47.867", 4, 4], ["V", "Vanadium", "50.9415", 5, 4], ["Cr", "Chromium", "51.9961", 6, 4], ["Mn", "Manganese", "54.938045", 7, 4], ["Fe", "Iron", "55.845", 8, 4], ["Co", "Cobalt", "58.933195", 9, 4], ["Ni", "Nickel", "58.6934", 10, 4], ["Cu", "Copper", "63.546", 11, 4], ["Zn", "Zinc", "65.38", 12, 4], ["Ga", "Gallium", "69.723", 13, 4], ["Ge", "Germanium", "72.63", 14, 4], ["As", "Arsenic", "74.9216", 15, 4], ["Se", "Selenium", "78.96", 16, 4], ["Br", "Bromine", "79.904", 17, 4], ["Kr", "Krypton", "83.798", 18, 4], ["Rb", "Rubidium", "85.4678", 1, 5], ["Sr", "Strontium", "87.62", 2, 5], ["Y", "Yttrium", "88.90585", 3, 5], ["Zr", "Zirconium", "91.224", 4, 5], ["Nb", "Niobium", "92.90628", 5, 5], ["Mo", "Molybdenum", "95.96", 6, 5], ["Tc", "Technetium", "(98)", 7, 5], ["Ru", "Ruthenium", "101.07", 8, 5], ["Rh", "Rhodium", "102.9055", 9, 5], ["Pd", "Palladium", "106.42", 10, 5], ["Ag", "Silver", "107.8682", 11, 5], ["Cd", "Cadmium", "112.411", 12, 5], ["In", "Indium", "114.818", 13, 5], ["Sn", "Tin", "118.71", 14, 5], ["Sb", "Antimony", "121.76", 15, 5], ["Te", "Tellurium", "127.6", 16, 5], ["I", "Iodine", "126.90447", 17, 5], ["Xe", "Xenon", "131.293", 18, 5], ["Cs", "Caesium", "132.9054", 1, 6], ["Ba", "Barium", "132.9054", 2, 6], ["La", "Lanthanum", "138.90547", 4, 9], ["Ce", "Cerium", "140.116", 5, 9], ["Pr", "Praseodymium", "140.90765", 6, 9], ["Nd", "Neodymium", "144.242", 7, 9], ["Pm", "Promethium", "(145)", 8, 9], ["Sm", "Samarium", "150.36", 9, 9], ["Eu", "Europium", "151.964", 10, 9], ["Gd", "Gadolinium", "157.25", 11, 9], ["Tb", "Terbium", "158.92535", 12, 9], ["Dy", "Dysprosium", "162.5", 13, 9], ["Ho", "Holmium", "164.93032", 14, 9], ["Er", "Erbium", "167.259", 15, 9], ["Tm", "Thulium", "168.93421", 16, 9], ["Yb", "Ytterbium", "173.054", 17, 9], ["Lu", "Lutetium", "174.9668", 18, 9], ["Hf", "Hafnium", "178.49", 4, 6], ["Ta", "Tantalum", "180.94788", 5, 6], ["W", "Tungsten", "183.84", 6, 6], ["Re", "Rhenium", "186.207", 7, 6], ["Os", "Osmium", "190.23", 8, 6], ["Ir", "Iridium", "192.217", 9, 6], ["Pt", "Platinum", "195.084", 10, 6], ["Au", "Gold", "196.966569", 11, 6], ["Hg", "Mercury", "200.59", 12, 6], ["Tl", "Thallium", "204.3833", 13, 6], ["Pb", "Lead", "207.2", 14, 6], ["Bi", "Bismuth", "208.9804", 15, 6], ["Po", "Polonium", "(209)", 16, 6], ["At", "Astatine", "(210)", 17, 6], ["Rn", "Radon", "(222)", 18, 6], ["Fr", "Francium", "(223)", 1, 7], ["Ra", "Radium", "(226)", 2, 7], ["Ac", "Actinium", "(227)", 4, 10], ["Th", "Thorium", "232.03806", 5, 10], ["Pa", "Protactinium", "231.0588", 6, 10], ["U", "Uranium", "238.02891", 7, 10], ["Np", "Neptunium", "(237)", 8, 10], ["Pu", "Plutonium", "(244)", 9, 10], ["Am", "Americium", "(243)", 10, 10], ["Cm", "Curium", "(247)", 11, 10], ["Bk", "Berkelium", "(247)", 12, 10], ["Cf", "Californium", "(251)", 13, 10], ["Es", "Einstenium", "(252)", 14, 10], ["Fm", "Fermium", "(257)", 15, 10], ["Md", "Mendelevium", "(258)", 16, 10], ["No", "Nobelium", "(259)", 17, 10], ["Lr", "Lawrencium", "(262)", 18, 10], ["Rf", "Rutherfordium", "(267)", 4, 7], ["Db", "Dubnium", "(268)", 5, 7], ["Sg", "Seaborgium", "(271)", 6, 7], ["Bh", "Bohrium", "(272)", 7, 7], ["Hs", "Hassium", "(270)", 8, 7], ["Mt", "Meitnerium", "(276)", 9, 7], ["Ds", "Darmstadium", "(281)", 10, 7], ["Rg", "Roentgenium", "(280)", 11, 7], ["Cn", "Copernicium", "(285)", 12, 7], ["Uut", "Unutrium", "(284)", 13, 7], ["Fl", "Flerovium", "(289)", 14, 7], ["Uup", "Ununpentium", "(288)", 15, 7], ["Lv", "Livermorium", "(293)", 16, 7], ["Uus", "Ununseptium", "(294)", 17, 7], ["Uuo", "Ununoctium", "(294)", 18, 7]];
});
Isolate.$lazy($, "_tweens", "_tweens", "get$_tweens", function() {
  return [];
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  $isJavaScriptIndexingBehavior: function() {
    return false;
  },
  $isCollection: function() {
    return false;
  },
  $isList: function() {
    return false;
  },
  $isMap: function() {
    return false;
  },
  $isArrayBuffer: function() {
    return false;
  },
  $isArrayBufferView: function() {
    return false;
  },
  $isBlob: function() {
    return false;
  },
  $isElement: function() {
    return false;
  },
  $isFile: function() {
    return false;
  },
  $isFileList: function() {
    return false;
  },
  $isImageData: function() {
    return false;
  },
  $isNode: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  },
  $eq: function(a) {
    return this === a;
  }
});

$.$defineNativeClass("Worker", {
  get$id: function() {
    return this.id;
  },
  set$id: function(i) {
    this.id = i;
  },
  set$onmessage: function(f) {
    this.onmessage = f;
  },
  postMessage$1: function(msg) {
    this.postMessage(msg);
  },
  terminate$0: function() {
    this.terminate();
  }
});

$.$defineNativeClass("AbstractWorker", {
  get$on: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$on")) {
      return $.AbstractWorkerEvents$(this);
    } else
      return Object.prototype.get$on.call(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "target>,type>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("DOMApplicationCache", {
  get$on: function() {
    return $.ApplicationCacheEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  update$0: function() {
    return this.update();
  }
});

$.$defineNativeClass("HTMLAreaElement", {"": "target>"});

$.$defineNativeClass("ArrayBuffer", {
  $isArrayBuffer: function() {
    return true;
  }
});

$.$defineNativeClass("ArrayBufferView", {
  $isArrayBufferView: function() {
    return true;
  }
});

$.$defineNativeClass("BarInfo", {"": "visible>"});

$.$defineNativeClass("HTMLBaseElement", {"": "target>"});

$.$defineNativeClass("BatteryManager", {
  get$on: function() {
    return $.BatteryManagerEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("Blob", {"": "type>",
  $isBlob: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLBodyElement", {
  get$on: function() {
    return $.BodyElementEvents$(this);
  }
});

$.$defineNativeClass("HTMLButtonElement", {"": "type>,value="});

$.$defineNativeClass("HTMLCanvasElement", {"": "height=,width="});

$.$defineNativeClass("CanvasRenderingContext2D", {
  scale$2: function(sx, sy) {
    return this.scale(sx,sy);
  },
  get$scale: function() {
    return new $.BoundClosure2(this, "scale$2");
  }
});

$.$defineNativeClass("CharacterData", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  },
  remove$0: function() {
    return this.remove();
  }
});

$.$defineNativeClass("ClientRect", {"": "height>,width>"});

$.$defineNativeClass("CSSFontFaceRule", {"": "style>"});

$.$defineNativeClass("WebKitCSSKeyframeRule", {"": "style>"});

$.$defineNativeClass("WebKitCSSMatrix", {"": "a>,b>,c>,d>",
  scale$3: function(scaleX, scaleY, scaleZ) {
    return this.scale(scaleX,scaleY,scaleZ);
  },
  get$scale: function() {
    return new $.BoundClosure4(this, "scale$3");
  },
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("CSSPageRule", {"": "style>"});

$.$defineNativeClass("CSSRule", {"": "type>"});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  },
  _liblib2$_getPropertyValue$1: function(propertyName) {
    return this.getPropertyValue(propertyName);
  },
  getPropertyValue$1: function(propertyName) {
    var propValue = this._liblib2$_getPropertyValue$1(propertyName);
    return !(propValue == null) ? propValue : "";
  },
  setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    if (!!this.setAttribute)
      this.setAttribute(propertyName, value);
  },
  set$backgroundColor: function(value) {
    this.setProperty$3("background-color", value, "");
  },
  get$clear: function() {
    return this.getPropertyValue$1("clear");
  },
  clear$0: function() {
    return this.get$clear().call$0();
  },
  get$height: function() {
    return this.getPropertyValue$1("height");
  },
  set$height: function(value) {
    this.setProperty$3("height", value, "");
  },
  set$overflow: function(value) {
    this.setProperty$3("overflow", value, "");
  },
  set$perspective: function(value) {
    this.setProperty$3($.S($._browserPrefix()) + "perspective", value, "");
  },
  set$perspectiveOrigin: function(value) {
    this.setProperty$3($.S($._browserPrefix()) + "perspective-origin", value, "");
  },
  get$position: function() {
    return this.getPropertyValue$1("position");
  },
  set$position: function(value) {
    this.setProperty$3("position", value, "");
  },
  get$resize: function() {
    return this.getPropertyValue$1("resize");
  },
  set$top: function(value) {
    this.setProperty$3("top", value, "");
  },
  set$transform: function(value) {
    this.setProperty$3($.S($._browserPrefix()) + "transform", value, "");
  },
  set$transformStyle: function(value) {
    this.setProperty$3($.S($._browserPrefix()) + "transform-style", value, "");
  },
  get$width: function() {
    return this.getPropertyValue$1("width");
  },
  set$width: function(value) {
    this.setProperty$3("width", value, "");
  }
});

$.$defineNativeClass("CSSStyleRule", {"": "style>"});

$.$defineNativeClass("CustomEvent", {"": "detail>"});

$.$defineNativeClass("DataTransferItem", {"": "type>"});

$.$defineNativeClass("DataTransferItemList", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  },
  add$2: function(data_OR_file, type) {
    return this.add(data_OR_file,type);
  },
  add$1: function(data_OR_file) {
    return this.add(data_OR_file);
  },
  clear$0: function() {
    return this.clear();
  }
});

$.$defineNativeClass("DedicatedWorkerContext", {
  get$on: function() {
    return $.DedicatedWorkerContextEvents$(this);
  },
  postMessage$2: function(message, messagePorts) {
    var t1 = $ === messagePorts;
    if (t1)
      messagePorts = null;
    if (!t1) {
      this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
      return;
    }
    this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
    return;
  },
  postMessage$1: function(message) {
    return this.postMessage$2(message, $);
  },
  _postMessage_1$2: function(message, messagePorts) {
    return this.postMessage(message,messagePorts);
  },
  _postMessage_2$1: function(message) {
    return this.postMessage(message);
  }
});

$.$defineNativeClass("Document", {
  get$on: function() {
    return $.DocumentEvents$(this);
  },
  $$dom_getElementById$1: function(elementId) {
    return this.getElementById(elementId);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  get$onContextMenu: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT18.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT16.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT14.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT12.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  query$1: function(selectors) {
    if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", true, false).hasMatch$1(selectors) === true)
      return this.$$dom_getElementById$1($.CONSTANT2.substring$1(selectors, 1));
    return this.$$dom_querySelector$1(selectors);
  }
});

$.$defineNativeClass("DocumentFragment", {
  get$elements: function() {
    return this.get$children();
  },
  set$elements: function(value) {
    this.set$children(value);
  },
  get$children: function() {
    if (this._children == null)
      this._children = $.FilteredElementList$(this);
    return this._children;
  },
  set$children: function(value) {
    var copy, children, t1;
    copy = $.List_List$from(value);
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, copy);
  },
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  set$innerHtml: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$innerHtml")) {
      var e, nodes;
      $.clear(this.get$nodes());
      e = $.Element_Element$tag("div");
      e.set$innerHtml(value);
      nodes = $.List_List$from(e.get$nodes());
      $.addAll(this.get$nodes(), nodes);
    } else
      return Object.prototype.set$innerHtml.call(this, value);
  },
  get$on: function() {
    return $.ElementEvents$(this);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  }
});

$.$defineNativeClass("DOMException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("MimeType", {"": "type>"});

$.$defineNativeClass("MimeTypeArray", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Plugin", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("PluginArray", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Selection", {"": "type>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("DOMSettableTokenList", {"": "value="});

$.$defineNativeClass("DOMStringList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  contains$1: function(string) {
    return this.contains(string);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("DOMTokenList", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  },
  contains$1: function(token) {
    return this.contains(token);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Element", {"": "$$dom_children:children~,id=,innerHtml:innerHTML|,$$dom_className:className},$$dom_firstElementChild:firstElementChild~,$$dom_lastElementChild:lastElementChild~,offsetLeft>,offsetTop>,style>",
  get$attributes: function() {
    return $._ElementAttributeMap$(this);
  },
  set$innerHTML: function(value) {
    this.set$innerHtml(value);
  },
  set$elements: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$elements")) {
      this.set$children(value);
    } else
      return Object.prototype.set$elements.call(this, value);
  },
  get$elements: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$elements")) {
      return this.get$children();
    } else
      return Object.prototype.get$elements.call(this);
  },
  get$children: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$children")) {
      return $._ChildrenElementList$_wrap(this);
    } else
      return Object.prototype.get$children.call(this);
  },
  set$children: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$children")) {
      var copy, children, t1;
      copy = $.List_List$from(value);
      children = this.get$children();
      t1 = $.getInterceptor$JSArray(children);
      t1.clear$0(children);
      t1.addAll$1(children, copy);
    } else
      return Object.prototype.set$children.call(this, value);
  },
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  get$classes: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$classes")) {
      return $._ElementCssClassSet$(this);
    } else
      return Object.prototype.get$classes.call(this);
  },
  get$on: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$on")) {
      return $.ElementEvents$(this);
    } else
      return Object.prototype.get$on.call(this);
  },
  click$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("click$0")) {
      return this.click();
    } else
      return Object.prototype.click$0.call(this);
  },
  get$click: function() {
    return new $.BoundClosure3(this, "click$0");
  },
  $$dom_getAttribute$1: function(name) {
    return this.getAttribute(name);
  },
  $$dom_hasAttribute$1: function(name) {
    return this.hasAttribute(name);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  $$dom_removeAttribute$1: function(name) {
    return this.removeAttribute(name);
  },
  $$dom_setAttribute$2: function(name, value) {
    return this.setAttribute(name,value);
  },
  get$onContextMenu: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT18.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT16.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT14.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT12.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  $isElement: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "height=,type>,width="});

$.$defineNativeClass("Entry", {
  remove$2: function(successCallback, errorCallback) {
    return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
  },
  remove$1: function(successCallback) {
    successCallback = $.convertDartClosureToJS(successCallback, 0);
    return this.remove(successCallback);
  }
});

$.$defineNativeClass("EntrySync", {
  remove$0: function() {
    return this.remove();
  }
});

$.$defineNativeClass("Event", {"": "type>",
  get$target: function() {
    return $._convertNativeToDart_EventTarget(this.target);
  },
  preventDefault$0: function() {
    return this.preventDefault();
  },
  stopPropagation$0: function() {
    return this.stopPropagation();
  }
});

$.$defineNativeClass("EventException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventSource", {
  get$on: function() {
    return $.EventSourceEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("EventTarget", {
  get$on: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$on")) {
      return $.Events$(this);
    } else
      return Object.prototype.get$on.call(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "elements>,type>"});

$.$defineNativeClass("File", {
  $isFile: function() {
    return true;
  }
});

$.$defineNativeClass("FileException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("FileList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isFileList: function() {
    return true;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("FileReader", {"": "error>",
  get$on: function() {
    return $.FileReaderEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("FileWriter", {"": "error>,length>,position>",
  get$on: function() {
    return $.FileWriterEvents$(this);
  },
  length$0: function() {
    return this.length.call$0();
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("FileWriterSync", {"": "length>,position>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("Float32Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Float64Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>,target>",
  length$0: function() {
    return this.length.call$0();
  },
  reset$0: function() {
    return this.reset();
  }
});

$.$defineNativeClass("Gamepad", {"": "id>"});

$.$defineNativeClass("History", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("HTMLAllCollection", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("XMLHttpRequest", {
  get$on: function() {
    return $.HttpRequestEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("XMLHttpRequestException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("XMLHttpRequestProgressEvent", {"": "position>"});

$.$defineNativeClass("XMLHttpRequestUpload", {
  get$on: function() {
    return $.HttpRequestUploadEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "height=,width="});

$.$defineNativeClass("ImageData", {"": "height>,width>",
  $isImageData: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLImageElement", {"": "height=,width=,x>,y>",
  complete$1: function(arg0) {
    return this.complete.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLInputElement", {"": "height=,pattern>,type>,value=,width=",
  get$on: function() {
    return $.InputElementEvents$(this);
  },
  $isElement: function() {
    return true;
  },
  $isNode: function() {
    return true;
  }
});

$.$defineNativeClass("Int16Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Int32Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Int8Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("JavaScriptCallFrame", {"": "type>"});

$.$defineNativeClass("KeyboardEvent", {
  get$keyCode: function() {
    return this.keyCode;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "type>"});

$.$defineNativeClass("HTMLLIElement", {"": "type>,value="});

$.$defineNativeClass("HTMLLinkElement", {"": "type>"});

$.$defineNativeClass("Location", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("MediaController", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("HTMLMediaElement", {"": "error>",
  get$on: function() {
    return $.MediaElementEvents$(this);
  }
});

$.$defineNativeClass("MediaList", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("MediaSource", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("MediaStream", {"": "id>",
  get$on: function() {
    return $.MediaStreamEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("MediaStreamTrack", {"": "id>",
  get$on: function() {
    return $.MediaStreamTrackEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("MessageEvent", {"": "ports>"});

$.$defineNativeClass("MessagePort", {
  get$on: function() {
    return $.MessagePortEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  postMessage$2: function(message, messagePorts) {
    var t1 = $ === messagePorts;
    if (t1)
      messagePorts = null;
    if (!t1) {
      this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
      return;
    }
    this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
    return;
  },
  postMessage$1: function(message) {
    return this.postMessage$2(message, $);
  },
  _postMessage_1$2: function(message, messagePorts) {
    return this.postMessage(message,messagePorts);
  },
  _postMessage_2$1: function(message) {
    return this.postMessage(message);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("MouseEvent", {"": "button>,clientX>,clientY>,x>,y>"});

$.$defineNativeClass("MutationRecord", {"": "target>,type>"});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Navigator", {"": "userAgent>"});

$.$defineNativeClass("Node", {"": "$$dom_attributes:attributes~,$$dom_childNodes:childNodes~,$$dom_localName:localName~,$$dom_namespaceUri:namespaceURI~,parent:parentElement~,text:textContent|",
  get$nodes: function() {
    return $._ChildNodeListLazy$(this);
  },
  remove$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$0")) {
      var t1 = this.parentNode;
      if (!(t1 == null))
        t1.$$dom_removeChild$1(this);
    } else
      return Object.prototype.remove$0.call(this);
  },
  replaceWith$1: function(otherNode) {
    var parent, exception;
    try {
      parent = this.parentNode;
      parent.$$dom_replaceChild$2(otherNode, this);
    } catch (exception) {
      $.unwrapException(exception);
    }

    return this;
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_appendChild$1: function(newChild) {
    return this.appendChild(newChild);
  },
  contains$1: function(other) {
    return this.contains(other);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  $$dom_removeChild$1: function(oldChild) {
    return this.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_replaceChild$2: function(newChild, oldChild) {
    return this.replaceChild(newChild,oldChild);
  },
  $isNode: function() {
    return true;
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Notification", {
  get$on: function() {
    return $.NotificationEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  cancel$0: function() {
    return this.cancel();
  },
  close$0: function() {
    return this.close();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("HTMLOListElement", {"": "type>",
  start$1: function(arg0) {
    return this.start.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLObjectElement", {"": "height=,type>,width="});

$.$defineNativeClass("HTMLOptionElement", {"": "value="});

$.$defineNativeClass("HTMLOutputElement", {"": "type>,value="});

$.$defineNativeClass("HTMLParamElement", {"": "value="});

$.$defineNativeClass("PerformanceNavigation", {"": "type>"});

$.$defineNativeClass("WebKitPoint", {"": "x=,y="});

$.$defineNativeClass("ProcessingInstruction", {"": "target>"});

$.$defineNativeClass("HTMLProgressElement", {"": "position>,value="});

$.$defineNativeClass("RadioNodeList", {"": "value="});

$.$defineNativeClass("Range", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("RangeException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("RTCDataChannel", {
  get$on: function() {
    return $.RtcDataChannelEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("RTCPeerConnection", {
  get$on: function() {
    return $.RtcPeerConnectionEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("RTCSessionDescription", {"": "type>"});

$.$defineNativeClass("Screen", {"": "height>,width>"});

$.$defineNativeClass("HTMLScriptElement", {"": "type>"});

$.$defineNativeClass("ScriptProfileNode", {"": "visible>",
  children$0: function() {
    return this.children();
  },
  get$children: function() {
    return new $.BoundClosure3(this, "children$0");
  }
});

$.$defineNativeClass("HTMLSelectElement", {"": "length=,type>,value=",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("ShadowRoot", {"": "innerHtml:innerHTML|"});

$.$defineNativeClass("SharedWorkerContext", {
  get$on: function() {
    return $.SharedWorkerContextEvents$(this);
  }
});

$.$defineNativeClass("SourceBufferList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLSourceElement", {"": "type>"});

$.$defineNativeClass("SpeechGrammarList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SpeechRecognition", {
  get$on: function() {
    return $.SpeechRecognitionEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("SpeechRecognitionError", {"": "error>"});

$.$defineNativeClass("SpeechRecognitionResult", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("SQLResultSetRowList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Storage", {
  containsKey$1: function(key) {
    return !(this.$$dom_getItem$1(key) == null);
  },
  $index: function(key) {
    return this.$$dom_getItem$1(key);
  },
  $indexSet: function(key, value) {
    this.$$dom_setItem$2(key, value);
  },
  remove$1: function(key) {
    var value = this.$index(key);
    this.$$dom_removeItem$1(key);
    return value;
  },
  clear$0: function() {
    return this.$$dom_clear$0();
  },
  forEach$1: function(f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = this.$$dom_key$1(i);
      if (key == null)
        return;
      f.call$2(key, this.$index(key));
    }
  },
  get$keys: function() {
    var keys = [];
    this.forEach$1(new $.Storage_keys_anon(keys));
    return keys;
  },
  get$values: function() {
    var values = [];
    this.forEach$1(new $.Storage_values_anon(values));
    return values;
  },
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  get$isEmpty: function() {
    return this.$$dom_key$1(0) == null;
  },
  $$dom_clear$0: function() {
    return this.clear();
  },
  $$dom_getItem$1: function(key) {
    return this.getItem(key);
  },
  $$dom_key$1: function(index) {
    return this.key(index);
  },
  $$dom_removeItem$1: function(key) {
    return this.removeItem(key);
  },
  $$dom_setItem$2: function(key, data) {
    return this.setItem(key,data);
  },
  $isMap: function() {
    return true;
  }
});

$.$defineNativeClass("StorageEvent", {"": "key>"});

$.$defineNativeClass("HTMLStyleElement", {"": "type>"});

$.$defineNativeClass("StyleMedia", {"": "type>"});

$.$defineNativeClass("StyleSheet", {"": "type>"});

$.$defineNativeClass("HTMLTextAreaElement", {"": "type>,value="});

$.$defineNativeClass("TextMetrics", {"": "width>"});

$.$defineNativeClass("TextTrack", {
  get$on: function() {
    return $.TextTrackEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("TextTrackCue", {"": "id=,position=,text<",
  get$on: function() {
    return $.TextTrackCueEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("TextTrackCueList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
});

$.$defineNativeClass("TextTrackList", {
  get$on: function() {
    return $.TextTrackListEvents$(this);
  },
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("TimeRanges", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  },
  start$1: function(index) {
    return this.start(index);
  }
});

$.$defineNativeClass("Touch", {"": "clientX>,clientY>,pageX>,pageY>",
  get$target: function() {
    return $._convertNativeToDart_EventTarget(this.target);
  }
});

$.$defineNativeClass("TouchEvent", {"": "touches>"});

$.$defineNativeClass("TouchList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("UIEvent", {"": "detail>,pageX>,pageY>"});

$.$defineNativeClass("Uint16Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint32Array", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$index")) {
      return this[index];
    } else
      return Object.prototype.$index.call(this, index);
  },
  $indexSet: function(index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$indexSet")) {
      this[index] = value;
    } else
      return Object.prototype.$indexSet.call(this, index, value);
  },
  get$iterator: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(this);
    } else
      return Object.prototype.get$iterator.call(this);
  },
  contains$1: function(element) {
    if (Object.getPrototypeOf(this).hasOwnProperty("contains$1")) {
      return $.IterableMixinWorkaround_contains(this, element);
    } else
      return Object.prototype.contains$1.call(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = $.iterator(this); t1.moveNext$0() === true;)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, f);
  },
  join$1: function(separator) {
    if (Object.getPrototypeOf(this).hasOwnProperty("join$1")) {
      return $.IterableMixinWorkaround_joinList(this, separator);
    } else
      return Object.prototype.join$1.call(this, separator);
  },
  where$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("where$1")) {
      return $.WhereIterable$(this, f);
    } else
      return Object.prototype.where$1.call(this, f);
  },
  toList$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toList$0")) {
      return $.List_List$from(this);
    } else
      return Object.prototype.toList$0.call(this);
  },
  toSet$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toSet$0")) {
      return $.Set_Set$from(this);
    } else
      return Object.prototype.toSet$0.call(this);
  },
  get$isEmpty: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$isEmpty")) {
      return $.$$eq($.length(this), 0);
    } else
      return Object.prototype.get$isEmpty.call(this);
  },
  add$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, value);
  },
  addLast$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addLast$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addLast$1.call(this, value);
  },
  addAll$1: function(iterable) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addAll$1.call(this, iterable);
  },
  set$length: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$length")) {
      throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
    } else
      return Object.prototype.set$length.call(this, value);
  },
  clear$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("clear$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
    } else
      return Object.prototype.clear$0.call(this);
  },
  sort$1: function(compare) {
    if (Object.getPrototypeOf(this).hasOwnProperty("sort$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
    } else
      return Object.prototype.sort$1.call(this, compare);
  },
  indexOf$2: function(element, start) {
    if (Object.getPrototypeOf(this).hasOwnProperty("indexOf$2")) {
      return $.Lists_indexOf(this, element, start, $.length(this));
    } else
      return Object.prototype.indexOf$2.call(this, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$last")) {
      var t1 = $.getInterceptor$JSStringJSArray(this);
      if ($.$$gt(t1.get$length(this), 0) === true)
        return this.$index($.$$sub(t1.get$length(this), 1));
      throw $.$$throw($.StateError$("No elements"));
    } else
      return Object.prototype.get$last.call(this);
  },
  removeAt$1: function(pos) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeAt$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeAt$1.call(this, pos);
  },
  removeLast$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this);
  },
  remove$1: function(object) {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.remove$1.call(this, object);
  },
  removeAll$1: function(elements) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeAll$1.call(this, elements);
  },
  removeMatching$1: function(test) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeMatching$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeMatching$1.call(this, test);
  },
  removeRange$2: function(start, rangeLength) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeRange$2")) {
      throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
    } else
      return Object.prototype.removeRange$2.call(this, start, rangeLength);
  },
  getRange$2: function(start, rangeLength) {
    if (Object.getPrototypeOf(this).hasOwnProperty("getRange$2")) {
      return $.Lists_getRange(this, start, rangeLength, []);
    } else
      return Object.prototype.getRange$2.call(this, start, rangeLength);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height=,width="});

$.$defineNativeClass("WebGLActiveInfo", {"": "type>"});

$.$defineNativeClass("WebKitNamedFlow", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("WebSocket", {
  get$on: function() {
    return $.WebSocketEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$2: function(code, reason) {
    return this.close(code,reason);
  },
  close$0: function() {
    return this.close();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("WheelEvent", {
  get$deltaY: function() {
    var detail, t1;
    if (this.deltaY !== undefined)
      return this.get$_deltaY();
    else if (this.wheelDelta !== undefined)
      return this.get$_wheelDelta();
    else if (this.detail !== undefined) {
      if (this.axis == MouseScrollEvent.VERTICAL_AXIS) {
        detail = this.get$_detail();
        t1 = $.getInterceptor$JSNumber(detail);
        if (t1.$lt(detail, 100) === true)
          return t1.$mul(detail, 40);
        return detail;
      }
      return 0;
    }
    throw $.$$throw($.UnsupportedError$("deltaY is not supported"));
  },
  get$_deltaY: function() {
    return this.deltaY;
  },
  get$_wheelDelta: function() {
    return this.wheelDelta;
  },
  get$_detail: function() {
    return this.detail;
  }
});

$.$defineNativeClass("DOMWindow", {"": "innerHeight>,innerWidth>,navigator>",
  requestAnimationFrame$1: function(callback) {
    this._ensureRequestAnimationFrame$0();
    return this._requestAnimationFrame$1(callback);
  },
  _requestAnimationFrame$1: function(callback) {
    return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function() {
    if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
  },
  get$on: function() {
    return $.WindowEvents$(this);
  },
  get$parent: function() {
    return $._convertNativeToDart_Window(this.parent);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  _postMessage_1$2: function(message, targetOrigin) {
    return this.postMessage(message,targetOrigin);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onContextMenu: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT18.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT16.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT14.forTarget$1(this);
  },
  get$onTouchEnd: function() {
    return $.CONSTANT12.forTarget$1(this);
  },
  get$onTouchMove: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onTouchStart: function() {
    return $.CONSTANT13.forTarget$1(this);
  }
});

$.$defineNativeClass("Worker", {
  get$on: function() {
    return $.WorkerEvents$(this);
  },
  postMessage$2: function(message, messagePorts) {
    var t1 = $ === messagePorts;
    if (t1)
      messagePorts = null;
    if (!t1) {
      this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
      return;
    }
    this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
    return;
  },
  postMessage$1: function(message) {
    return this.postMessage$2(message, $);
  },
  _postMessage_1$2: function(message, messagePorts) {
    return this.postMessage(message,messagePorts);
  },
  _postMessage_2$1: function(message) {
    return this.postMessage(message);
  },
  terminate$0: function() {
    return this.terminate();
  }
});

$.$defineNativeClass("WorkerContext", {"": "navigator>",
  get$on: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$on")) {
      return $.WorkerContextEvents$(this);
    } else
      return Object.prototype.get$on.call(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("WorkerLocation", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("WorkerNavigator", {"": "userAgent>"});

$.$defineNativeClass("XPathException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("XSLTProcessor", {
  reset$0: function() {
    return this.reset();
  }
});

$.$defineNativeClass("ClientRectList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("CSSRuleList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("CSSValueList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
});

$.$defineNativeClass("EntryArray", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("EntryArraySync", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLFrameSetElement", {
  get$on: function() {
    return $._FrameSetElementEvents$(this);
  }
});

$.$defineNativeClass("GamepadList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("MediaStreamList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SpeechInputResultList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SpeechRecognitionResultList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("StyleSheetList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("IDBCursor", {"": "key>",
  update$1: function(value) {
    return this._update_1$1($._convertDartToNative_PrepareForStructuredClone(value));
  },
  _update_1$1: function(value) {
    return this.update(value);
  }
});

$.$defineNativeClass("IDBCursorWithValue", {"": "value>"});

$.$defineNativeClass("IDBDatabase", {
  get$on: function() {
    return $.DatabaseEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("IDBObjectStore", {
  add$2: function(value, key) {
    var t1 = $ === key;
    if (t1)
      key = null;
    if (!t1)
      return this._add_1$2($._convertDartToNative_PrepareForStructuredClone(value), key);
    return this._add_2$1($._convertDartToNative_PrepareForStructuredClone(value));
  },
  add$1: function(value) {
    return this.add$2(value, $);
  },
  _add_1$2: function(value, key) {
    return this.add(value,key);
  },
  _add_2$1: function(value) {
    return this.add(value);
  },
  clear$0: function() {
    return this.clear();
  }
});

$.$defineNativeClass("IDBOpenDBRequest", {
  get$on: function() {
    return $.OpenDBRequestEvents$(this);
  }
});

$.$defineNativeClass("IDBRequest", {"": "error>",
  get$on: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$on")) {
      return $.RequestEvents$(this);
    } else
      return Object.prototype.get$on.call(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("IDBTransaction", {"": "error>",
  get$on: function() {
    return $.TransactionEvents$(this);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("IDBVersionChangeRequest", {
  get$on: function() {
    return $.VersionChangeRequestEvents$(this);
  }
});

$.$defineNativeClass("SVGAElement", {"": "target>"});

$.$defineNativeClass("SVGAngle", {"": "value="});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "type>"});

$.$defineNativeClass("SVGCursorElement", {"": "x>,y>"});

$.$defineNativeClass("SVGElementInstance", {
  get$on: function() {
    return $.ElementInstanceEvents$(this);
  },
  get$onContextMenu: function() {
    return $.CONSTANT19.forTarget$1(this);
  },
  get$onKeyDown: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onKeyUp: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT18.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT16.forTarget$1(this);
  },
  get$onMouseWheel: function() {
    return $.CONSTANT15.forTarget$1(this);
  }
});

$.$defineNativeClass("SVGFEBlendElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "type>,height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFECompositeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "scale>,height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEFloodElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEImageElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMergeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEPointLightElement", {"": "x>,y>,z>"});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFESpotLightElement", {"": "x>,y>,z>"});

$.$defineNativeClass("SVGFETileElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "type>,height>,width>,x>,y>"});

$.$defineNativeClass("SVGFilterElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGGlyphRefElement", {"": "x=,y="});

$.$defineNativeClass("SVGImageElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGLength", {"": "value="});

$.$defineNativeClass("SVGLengthList", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  get$length: function() {
    return this.numberOfItems;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  clear$0: function() {
    return this.clear();
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SVGMaskElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGMatrix", {"": "a>,b>,c>,d>",
  scale$1: function(scaleFactor) {
    return this.scale(scaleFactor);
  },
  get$scale: function() {
    return new $.BoundClosure(this, "scale$1");
  }
});

$.$defineNativeClass("SVGNumber", {"": "value="});

$.$defineNativeClass("SVGNumberList", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  get$length: function() {
    return this.numberOfItems;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  clear$0: function() {
    return this.clear();
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SVGPathSegArcAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegArcRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoCubicAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoCubicRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoCubicSmoothAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoCubicSmoothRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoQuadraticAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoQuadraticRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoQuadraticSmoothAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegCurvetoQuadraticSmoothRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegLinetoAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegLinetoHorizontalAbs", {"": "x="});

$.$defineNativeClass("SVGPathSegLinetoHorizontalRel", {"": "x="});

$.$defineNativeClass("SVGPathSegLinetoRel", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegLinetoVerticalAbs", {"": "y="});

$.$defineNativeClass("SVGPathSegLinetoVerticalRel", {"": "y="});

$.$defineNativeClass("SVGPathSegList", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  get$length: function() {
    return this.numberOfItems;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  clear$0: function() {
    return this.clear();
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SVGPathSegMovetoAbs", {"": "x=,y="});

$.$defineNativeClass("SVGPathSegMovetoRel", {"": "x=,y="});

$.$defineNativeClass("SVGPatternElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPoint", {"": "x=,y="});

$.$defineNativeClass("SVGPointList", {
  clear$0: function() {
    return this.clear();
  }
});

$.$defineNativeClass("SVGRect", {"": "height=,width=,x=,y="});

$.$defineNativeClass("SVGRectElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGScriptElement", {"": "type>"});

$.$defineNativeClass("SVGStringList", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  get$length: function() {
    return this.numberOfItems;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  clear$0: function() {
    return this.clear();
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("SVGStyleElement", {"": "type>"});

$.$defineNativeClass("SVGElement", {
  get$classes: function() {
    if (this._cssClassSet == null)
      this._cssClassSet = $._AttributeClassSet$(this);
    return this._cssClassSet;
  },
  get$elements: function() {
    return $.FilteredElementList$(this);
  },
  set$elements: function(value) {
    var elements, t1;
    elements = this.get$elements();
    t1 = $.getInterceptor$JSArray(elements);
    t1.clear$0(elements);
    t1.addAll$1(elements, value);
  },
  get$children: function() {
    return $.FilteredElementList$(this);
  },
  set$children: function(value) {
    var children, t1;
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, value);
  },
  set$innerHtml: function(svg) {
    var container = $.Element_Element$tag("div");
    container.set$innerHtml("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
    this.set$children($.$$index(container.get$children(), 0).get$children());
  },
  get$$$dom_children: function() {
    throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
  },
  click$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot invoke click SVG."));
  },
  get$click: function() {
    return new $.BoundClosure3(this, "click$0");
  },
  get$id: function() {
    return this.id;
  },
  set$id: function(value) {
    this.id = value;
  }
});

$.$defineNativeClass("SVGException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGTextPositioningElement", {"": "x>,y>"});

$.$defineNativeClass("SVGTransform", {"": "type>"});

$.$defineNativeClass("SVGTransformList", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  get$length: function() {
    return this.numberOfItems;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  clear$0: function() {
    return this.clear();
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
});

$.$defineNativeClass("SVGUseElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGElementInstanceList", {
  get$length: function() {
    return this.length;
  },
  length$0: function() {
    return this.get$length().call$0();
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("AudioBuffer", {"": "length>",
  length$0: function() {
    return this.length.call$0();
  }
});

$.$defineNativeClass("AudioBufferSourceNode", {
  start$3: function(when, grainOffset, grainDuration) {
    var t1, t2;
    t1 = $ === grainOffset;
    if (t1)
      grainOffset = null;
    t1 = !t1;
    t2 = $ === grainDuration;
    if (t2)
      grainDuration = null;
    t2 = !t2;
    if (!!this.start)
      if (t2)
        this.start(when, grainOffset, grainDuration);
      else if (t1)
        this.start(when, grainOffset);
      else
        this.start(when);
    else if (t2)
      this.noteOn(when, grainOffset, grainDuration);
    else if (t1)
      this.noteOn(when, grainOffset);
    else
      this.noteOn(when);
  },
  start$1: function(when) {
    return this.start$3(when, $, $);
  }
});

$.$defineNativeClass("AudioContext", {
  get$on: function() {
    return $.AudioContextEvents$(this);
  }
});

$.$defineNativeClass("AudioParam", {"": "value="});

$.$defineNativeClass("BiquadFilterNode", {"": "type>"});

$.$defineNativeClass("ConvolverNode", {
  normalize$0: function() {
    return this.normalize.call$0();
  }
});

$.$defineNativeClass("OscillatorNode", {"": "type>",
  start$1: function(when) {
    return this.start(when);
  }
});

// 249 dynamic classes.
// 399 classes
// 36 !leaf
(function() {
  var v0_MouseEvent = "MouseEvent|WheelEvent", v1_Uint8Array = "Uint8Array|Uint8ClampedArray", v2_TextPositioningElement = "SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement", v3_ComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement", v4_MediaElement = "HTMLMediaElement|HTMLAudioElement|HTMLVideoElement", v5_SvgElement = [v2_TextPositioningElement, v3_ComponentTransferFunctionElement, "SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGHKernElement|SVGImageElement|SVGLineElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement"].join("|"), v6_UIEvent = [v0_MouseEvent, "UIEvent|CompositionEvent|KeyboardEvent|TextEvent|TouchEvent|SVGZoomEvent"].join("|"), v7_Element = [v4_MediaElement, v5_SvgElement, "Element|HTMLElement|HTMLAnchorElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFormElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLAppletElement|HTMLBaseFontElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLMarqueeElement"].join("|"), v8_CharacterData = "CharacterData|Text|CDATASection|Comment", v9_Document = "Document|HTMLDocument|SVGDocument", v10_DocumentFragment = "DocumentFragment|ShadowRoot", v11_Node = [v7_Element, v8_CharacterData, v9_Document, v10_DocumentFragment, "Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction"].join("|"), v12_AbstractWorker = "AbstractWorker|SharedWorker|Worker", v13_WorkerContext = "WorkerContext|DedicatedWorkerContext|SharedWorkerContext", v14_MediaStream = "MediaStream|LocalMediaStream", v15_Request = "IDBRequest|IDBOpenDBRequest|IDBVersionChangeRequest", v16_AudioContext = "AudioContext|OfflineAudioContext";
  $.dynamicSetMetadata([["StyleSheet", "StyleSheet|CSSStyleSheet"], ["MouseEvent", v0_MouseEvent], ["UIEvent", v6_UIEvent], ["Uint8Array", v1_Uint8Array], ["WorkerContext", v13_WorkerContext], ["CSSValueList", "CSSValueList|WebKitCSSTransformValue|WebKitCSSFilterValue|WebKitCSSMixFunctionValue"], ["IDBCursor", "IDBCursor|IDBCursorWithValue"], ["IDBRequest", v15_Request], ["AbstractWorker", v12_AbstractWorker], ["SVGComponentTransferFunctionElement", v3_ComponentTransferFunctionElement], ["ArrayBufferView", [v1_Uint8Array, "ArrayBufferView|DataView|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|Uint16Array|Uint32Array"].join("|")], ["Blob", "Blob|File"], ["CharacterData", v8_CharacterData], ["CSSRule", "CSSRule|CSSCharsetRule|CSSFontFaceRule|CSSImportRule|WebKitCSSKeyframeRule|WebKitCSSKeyframesRule|CSSMediaRule|CSSPageRule|CSSStyleRule|CSSUnknownRule"], ["Document", v9_Document], ["DocumentFragment", v10_DocumentFragment], ["DOMTokenList", "DOMTokenList|DOMSettableTokenList"], ["HTMLMediaElement", v4_MediaElement], ["SVGTextPositioningElement", v2_TextPositioningElement], ["SVGElement", v5_SvgElement], ["Element", v7_Element], ["Entry", "Entry|DirectoryEntry|FileEntry"], ["EntrySync", "EntrySync|DirectoryEntrySync|FileEntrySync"], ["Event", [v6_UIEvent, "Event|WebKitAnimationEvent|BeforeLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|HashChangeEvent|ProgressEvent|XMLHttpRequestProgressEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|AudioProcessingEvent|OfflineAudioCompletionEvent"].join("|")], ["Node", v11_Node], ["MediaStream", v14_MediaStream], ["AudioContext", v16_AudioContext], ["EventTarget", [v11_Node, v12_AbstractWorker, v13_WorkerContext, v14_MediaStream, v15_Request, v16_AudioContext, "EventTarget|DOMApplicationCache|BatteryManager|EventSource|FileReader|FileWriter|XMLHttpRequest|XMLHttpRequestUpload|MediaController|MediaSource|MediaStreamTrack|MessagePort|Notification|Performance|RTCDataChannel|RTCPeerConnection|SourceBufferList|SpeechRecognition|TextTrack|TextTrackCue|TextTrackList|WebKitNamedFlow|WebSocket|DOMWindow|IDBDatabase|IDBTransaction|SVGElementInstance"].join("|")], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["AudioParam", "AudioParam|AudioGain"], ["NodeList", "NodeList|RadioNodeList"]]);
})();

$.main.call$0 = $.main;

//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } finally {
          if (result === sentinelUndefined) {
            if ($[fieldName] === sentinelInProgress) {
              $[fieldName] = null;
            }
          }
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=CSS3D_Periodic_Table.dart.js.map